{
	"id": "ed4b623abe16db5ba2b9b1a68c214862",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.5",
	"solcLongVersion": "0.8.5+commit.a4f2e591",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC20/TitanToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"./ERC20.sol\";\r\nimport \"./ERC20Burnable.sol\";\r\nimport \"../Utils/Pausable.sol\";\r\nimport \"../Utils/Ownable.sol\";\r\n\r\ncontract TitanToken is ERC20, ERC20Burnable, Pausable, Ownable {\r\n    constructor() ERC20(\"TitanToken\", \"Titan\") {\r\n        _mint(msg.sender, 100000000000 * 10 ** decimals());\r\n    }\r\n\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    function mint(address to, uint256 amount) public {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    function _beforeTokenTransfer(address from, address to, uint256 amount)\r\n        internal\r\n        whenNotPaused\r\n        override\r\n    {\r\n        super._beforeTokenTransfer(from, to, amount);\r\n    }\r\n}\r\n"
			},
			"Utils/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}"
			},
			"Utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which allows children to implement an emergency stop\r\n * mechanism that can be triggered by an authorized account.\r\n *\r\n * This module is used through inheritance. It will make available the\r\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\r\n * the functions of your contract. Note that they will not be pausable by\r\n * simply including this module, only once the modifiers are put in place.\r\n */\r\nabstract contract Pausable is Context {\r\n    /**\r\n     * @dev Emitted when the pause is triggered by `account`.\r\n     */\r\n    event Paused(address account);\r\n\r\n    /**\r\n     * @dev Emitted when the pause is lifted by `account`.\r\n     */\r\n    event Unpaused(address account);\r\n\r\n    bool private _paused;\r\n\r\n    /**\r\n     * @dev Initializes the contract in unpaused state.\r\n     */\r\n    constructor() {\r\n        _paused = false;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the contract is paused, and false otherwise.\r\n     */\r\n    function paused() public view virtual returns (bool) {\r\n        return _paused;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is not paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    modifier whenNotPaused() {\r\n        require(!paused(), \"Pausable: paused\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    modifier whenPaused() {\r\n        require(paused(), \"Pausable: not paused\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Triggers stopped state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    function _pause() internal virtual whenNotPaused {\r\n        _paused = true;\r\n        emit Paused(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns to normal state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    function _unpause() internal virtual whenPaused {\r\n        _paused = false;\r\n        emit Unpaused(_msgSender());\r\n    }\r\n}"
			},
			"ERC20/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./ERC20.sol\";\r\nimport \"../Utils/Context.sol\";\r\n\r\n/**\r\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\r\n * tokens and those that they have an allowance for, in a way that can be\r\n * recognized off-chain (via event analysis).\r\n */\r\nabstract contract ERC20Burnable is Context, ERC20 {\r\n    /**\r\n     * @dev Destroys `amount` tokens from the caller.\r\n     *\r\n     * See {ERC20-_burn}.\r\n     */\r\n    function burn(uint256 amount) public virtual {\r\n        _burn(_msgSender(), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\r\n     * allowance.\r\n     *\r\n     * See {ERC20-_burn} and {ERC20-allowance}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have allowance for ``accounts``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function burnFrom(address account, uint256 amount) public virtual {\r\n        _spendAllowance(account, _msgSender(), amount);\r\n        _burn(account, amount);\r\n    }\r\n}"
			},
			"ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\nimport \"./IERC20Metadata.sol\";\r\nimport \"../Utils/Context.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *z\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint256) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, amount);\r\n\r\n        uint256 fromBalance = _balances[from];\r\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[from] = fromBalance - amount;\r\n        }\r\n        _balances[to] += amount;\r\n\r\n        emit Transfer(from, to, amount);\r\n\r\n        _afterTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\r\n     *\r\n     * Does not update the allowance amount in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Might emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}"
			},
			"Utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"ERC20/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint256);\r\n}\r\n"
			},
			"ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    \r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. z This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20/ERC20.sol\":1424:12997  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  mstore(0x40, 0x80)\n    /* \"ERC20/ERC20.sol\":2018:2134  constructor(string memory name_, string memory symbol_) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ERC20/ERC20.sol\":2085:2098  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"ERC20/ERC20.sol\":2085:2090  _name */\n  0x03\n  swap1\n    /* \"ERC20/ERC20.sol\":2085:2098  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"ERC20/ERC20.sol\":2109:2126  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"ERC20/ERC20.sol\":2109:2116  _symbol */\n  0x04\n  swap1\n    /* \"ERC20/ERC20.sol\":2109:2126  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"ERC20/ERC20.sol\":2018:2134  constructor(string memory name_, string memory symbol_) {\r... */\n  pop\n  pop\n    /* \"ERC20/ERC20.sol\":1424:12997  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:899   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:90   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:90   */\ntag_24:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:223   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:406   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:568   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:568   */\ntag_30:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_31:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:791   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:791   */\ntag_34:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":78:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1034   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1034   */\ntag_36:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1171   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1171   */\ntag_37:\n    /* \"#utility.yul\":1222:1283   */\n  tag_38\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1344   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1344   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1022:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_11:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1616   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1616   */\ntag_42:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1686   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1686   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1526:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_27:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1888:1983   */\ntag_21:\n    /* \"ERC20/ERC20.sol\":1424:12997  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20/ERC20.sol\":1424:12997  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20/ERC20.sol\":2204:2304  function name() public view virtual override returns (string memory) {\r... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":4557:4758  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1405:1419   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1398:1420   */\n      iszero\n        /* \"#utility.yul\":1380:1421   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1368:1370   */\n      0x20\n        /* \"#utility.yul\":1353:1371   */\n      add\n        /* \"ERC20/ERC20.sol\":4557:4758  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      tag_17\n        /* \"#utility.yul\":1335:1427   */\n      jump\n        /* \"ERC20/ERC20.sol\":3326:3434  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_5:\n        /* \"ERC20/ERC20.sol\":3414:3426  _totalSupply */\n      sload(0x02)\n        /* \"ERC20/ERC20.sol\":3326:3434  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":4969:4994   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4957:4959   */\n      0x20\n        /* \"#utility.yul\":4942:4960   */\n      add\n        /* \"ERC20/ERC20.sol\":3326:3434  function totalSupply() public view virtual override returns (uint256) {\r... */\n      tag_17\n        /* \"#utility.yul\":4924:5000   */\n      jump\n        /* \"ERC20/ERC20.sol\":5338:5633  function transferFrom(\r... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":3166:3261  function decimals() public view virtual override returns (uint256) {\r... */\n    tag_7:\n        /* \"ERC20/ERC20.sol\":3251:3253  18 */\n      0x12\n        /* \"ERC20/ERC20.sol\":3166:3261  function decimals() public view virtual override returns (uint256) {\r... */\n      jump(tag_25)\n        /* \"ERC20/ERC20.sol\":6042:6280  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_8:\n      tag_19\n      tag_38\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":3497:3624  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_9:\n      tag_25\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":3598:3616  _balances[account] */\n      and\n        /* \"ERC20/ERC20.sol\":3571:3578  uint256 */\n      0x00\n        /* \"ERC20/ERC20.sol\":3598:3616  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20/ERC20.sol\":3497:3624  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"ERC20/ERC20.sol\":2423:2527  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_10:\n      tag_15\n      tag_47\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":6783:7219  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_11:\n      tag_19\n      tag_50\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":3830:4023  function transfer(address to, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_12:\n      tag_19\n      tag_54\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":4086:4237  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_13:\n      tag_25\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":2204:2304  function name() public view virtual override returns (string memory) {\r... */\n    tag_16:\n        /* \"ERC20/ERC20.sol\":2258:2271  string memory */\n      0x60\n        /* \"ERC20/ERC20.sol\":2291:2296  _name */\n      0x03\n        /* \"ERC20/ERC20.sol\":2284:2296  return _name */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":2204:2304  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":4557:4758  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_22:\n        /* \"ERC20/ERC20.sol\":4640:4644  bool */\n      0x00\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20.sol\":4696:4728  _approve(owner, spender, amount) */\n      tag_72\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup2\n        /* \"ERC20/ERC20.sol\":4712:4719  spender */\n      dup6\n        /* \"ERC20/ERC20.sol\":4721:4727  amount */\n      dup6\n        /* \"ERC20/ERC20.sol\":4696:4704  _approve */\n      tag_73\n        /* \"ERC20/ERC20.sol\":4696:4728  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_72:\n      pop\n        /* \"ERC20/ERC20.sol\":4746:4750  true */\n      0x01\n      swap4\n        /* \"ERC20/ERC20.sol\":4557:4758  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":5338:5633  function transferFrom(\r... */\n    tag_32:\n        /* \"ERC20/ERC20.sol\":5469:5473  bool */\n      0x00\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20.sol\":5527:5565  _spendAllowance(from, spender, amount) */\n      tag_77\n        /* \"ERC20/ERC20.sol\":5543:5547  from */\n      dup6\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup3\n        /* \"ERC20/ERC20.sol\":5558:5564  amount */\n      dup6\n        /* \"ERC20/ERC20.sol\":5527:5542  _spendAllowance */\n      tag_78\n        /* \"ERC20/ERC20.sol\":5527:5565  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_77:\n        /* \"ERC20/ERC20.sol\":5576:5603  _transfer(from, to, amount) */\n      tag_79\n        /* \"ERC20/ERC20.sol\":5586:5590  from */\n      dup6\n        /* \"ERC20/ERC20.sol\":5592:5594  to */\n      dup6\n        /* \"ERC20/ERC20.sol\":5596:5602  amount */\n      dup6\n        /* \"ERC20/ERC20.sol\":5576:5585  _transfer */\n      tag_80\n        /* \"ERC20/ERC20.sol\":5576:5603  _transfer(from, to, amount) */\n      jump\t// in\n    tag_79:\n      pop\n        /* \"ERC20/ERC20.sol\":5621:5625  true */\n      0x01\n      swap5\n        /* \"ERC20/ERC20.sol\":5338:5633  function transferFrom(\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":6042:6280  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_39:\n        /* \"ERC20/ERC20.sol\":6130:6134  bool */\n      0x00\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20.sol\":6186:6250  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_72\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup2\n        /* \"ERC20/ERC20.sol\":6202:6209  spender */\n      dup6\n        /* \"ERC20/ERC20.sol\":6239:6249  addedValue */\n      dup6\n        /* \"ERC20/ERC20.sol\":6211:6236  allowance(owner, spender) */\n      tag_85\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup4\n        /* \"ERC20/ERC20.sol\":6202:6209  spender */\n      dup4\n        /* \"ERC20/ERC20.sol\":6211:6220  allowance */\n      tag_60\n        /* \"ERC20/ERC20.sol\":6211:6236  allowance(owner, spender) */\n      jump\t// in\n    tag_85:\n        /* \"ERC20/ERC20.sol\":6211:6249  allowance(owner, spender) + addedValue */\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"ERC20/ERC20.sol\":6186:6194  _approve */\n      tag_73\n        /* \"ERC20/ERC20.sol\":6186:6250  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":2423:2527  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_47:\n        /* \"ERC20/ERC20.sol\":2479:2492  string memory */\n      0x60\n        /* \"ERC20/ERC20.sol\":2512:2519  _symbol */\n      0x04\n        /* \"ERC20/ERC20.sol\":2505:2519  return _symbol */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":6783:7219  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_51:\n        /* \"ERC20/ERC20.sol\":6876:6880  bool */\n      0x00\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20.sol\":6876:6880  bool */\n      dup2\n        /* \"ERC20/ERC20.sol\":6959:6984  allowance(owner, spender) */\n      tag_97\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup3\n        /* \"ERC20/ERC20.sol\":6976:6983  spender */\n      dup7\n        /* \"ERC20/ERC20.sol\":6959:6968  allowance */\n      tag_60\n        /* \"ERC20/ERC20.sol\":6959:6984  allowance(owner, spender) */\n      jump\t// in\n    tag_97:\n        /* \"ERC20/ERC20.sol\":6932:6984  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":7023:7038  subtractedValue */\n      dup4\n        /* \"ERC20/ERC20.sol\":7003:7019  currentAllowance */\n      dup2\n        /* \"ERC20/ERC20.sol\":7003:7038  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"ERC20/ERC20.sol\":6995:7080  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4619:4621   */\n      0x20\n        /* \"ERC20/ERC20.sol\":6995:7080  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4601:4622   */\n      mstore\n        /* \"#utility.yul\":4658:4660   */\n      0x25\n        /* \"#utility.yul\":4638:4656   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4631:4661   */\n      mstore\n        /* \"#utility.yul\":4697:4731   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4677:4695   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4670:4732   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4748:4766   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4741:4776   */\n      mstore\n        /* \"#utility.yul\":4793:4812   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":6995:7080  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"ERC20/ERC20.sol\":7116:7176  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_79\n        /* \"ERC20/ERC20.sol\":7125:7130  owner */\n      dup3\n        /* \"ERC20/ERC20.sol\":7132:7139  spender */\n      dup7\n        /* \"ERC20/ERC20.sol\":7160:7175  subtractedValue */\n      dup7\n        /* \"ERC20/ERC20.sol\":7141:7157  currentAllowance */\n      dup5\n        /* \"ERC20/ERC20.sol\":7141:7175  currentAllowance - subtractedValue */\n      sub\n        /* \"ERC20/ERC20.sol\":7116:7124  _approve */\n      tag_73\n        /* \"ERC20/ERC20.sol\":7116:7176  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":3830:4023  function transfer(address to, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_55:\n        /* \"ERC20/ERC20.sol\":3909:3913  bool */\n      0x00\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20.sol\":3965:3993  _transfer(owner, to, amount) */\n      tag_72\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup2\n        /* \"ERC20/ERC20.sol\":3982:3984  to */\n      dup6\n        /* \"ERC20/ERC20.sol\":3986:3992  amount */\n      dup6\n        /* \"ERC20/ERC20.sol\":3965:3974  _transfer */\n      tag_80\n        /* \"ERC20/ERC20.sol\":3965:3993  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":4086:4237  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":4202:4220  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20/ERC20.sol\":4175:4182  uint256 */\n      0x00\n        /* \"ERC20/ERC20.sol\":4202:4220  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20/ERC20.sol\":4202:4213  _allowances */\n      0x01\n        /* \"ERC20/ERC20.sol\":4202:4220  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20/ERC20.sol\":4202:4229  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20/ERC20.sol\":4086:4237  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":10417:10797  function _approve(\r... */\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":10553:10572  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20/ERC20.sol\":10545:10613  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4214:4216   */\n      0x20\n        /* \"ERC20/ERC20.sol\":10545:10613  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4196:4217   */\n      mstore\n        /* \"#utility.yul\":4253:4255   */\n      0x24\n        /* \"#utility.yul\":4233:4251   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4226:4256   */\n      mstore\n        /* \"#utility.yul\":4292:4326   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4272:4290   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4265:4327   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4343:4361   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4336:4370   */\n      mstore\n        /* \"#utility.yul\":4387:4406   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":10545:10613  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_99\n        /* \"#utility.yul\":4186:4412   */\n      jump\n        /* \"ERC20/ERC20.sol\":10545:10613  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":10632:10653  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20/ERC20.sol\":10624:10692  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2640:2642   */\n      0x20\n        /* \"ERC20/ERC20.sol\":10624:10692  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2622:2643   */\n      mstore\n        /* \"#utility.yul\":2679:2681   */\n      0x22\n        /* \"#utility.yul\":2659:2677   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2652:2682   */\n      mstore\n        /* \"#utility.yul\":2718:2752   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2698:2716   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2691:2753   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2769:2787   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2762:2794   */\n      mstore\n        /* \"#utility.yul\":2811:2830   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":10624:10692  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_99\n        /* \"#utility.yul\":2612:2836   */\n      jump\n        /* \"ERC20/ERC20.sol\":10624:10692  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":10705:10723  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20/ERC20.sol\":10705:10716  _allowances */\n      0x01\n        /* \"ERC20/ERC20.sol\":10705:10723  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20/ERC20.sol\":10705:10732  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20/ERC20.sol\":10705:10741  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20/ERC20.sol\":10757:10789  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":4969:4994   */\n      dup5\n      dup2\n      mstore\n        /* \"ERC20/ERC20.sol\":10757:10789  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":4942:4960   */\n      add\n        /* \"ERC20/ERC20.sol\":10757:10789  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20/ERC20.sol\":10417:10797  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":11088:11541  function _spendAllowance(\r... */\n    tag_78:\n        /* \"ERC20/ERC20.sol\":11223:11247  uint256 currentAllowance */\n      0x00\n        /* \"ERC20/ERC20.sol\":11250:11275  allowance(owner, spender) */\n      tag_116\n        /* \"ERC20/ERC20.sol\":11260:11265  owner */\n      dup5\n        /* \"ERC20/ERC20.sol\":11267:11274  spender */\n      dup5\n        /* \"ERC20/ERC20.sol\":11250:11259  allowance */\n      tag_60\n        /* \"ERC20/ERC20.sol\":11250:11275  allowance(owner, spender) */\n      jump\t// in\n    tag_116:\n        /* \"ERC20/ERC20.sol\":11223:11275  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"ERC20/ERC20.sol\":11290:11306  currentAllowance */\n      dup2\n        /* \"ERC20/ERC20.sol\":11290:11327  currentAllowance != type(uint256).max */\n      eq\n        /* \"ERC20/ERC20.sol\":11286:11534  if (currentAllowance != type(uint256).max) {\r... */\n      tag_121\n      jumpi\n        /* \"ERC20/ERC20.sol\":11372:11378  amount */\n      dup2\n        /* \"ERC20/ERC20.sol\":11352:11368  currentAllowance */\n      dup2\n        /* \"ERC20/ERC20.sol\":11352:11378  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"ERC20/ERC20.sol\":11344:11412  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3043:3045   */\n      0x20\n        /* \"ERC20/ERC20.sol\":11344:11412  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3025:3046   */\n      mstore\n        /* \"#utility.yul\":3082:3084   */\n      0x1d\n        /* \"#utility.yul\":3062:3080   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3055:3085   */\n      mstore\n        /* \"#utility.yul\":3121:3152   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3101:3119   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3094:3153   */\n      mstore\n        /* \"#utility.yul\":3170:3188   */\n      0x64\n      add\n        /* \"ERC20/ERC20.sol\":11344:11412  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_99\n        /* \"#utility.yul\":3015:3194   */\n      jump\n        /* \"ERC20/ERC20.sol\":11344:11412  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_118:\n        /* \"ERC20/ERC20.sol\":11456:11507  _approve(owner, spender, currentAllowance - amount) */\n      tag_121\n        /* \"ERC20/ERC20.sol\":11465:11470  owner */\n      dup5\n        /* \"ERC20/ERC20.sol\":11472:11479  spender */\n      dup5\n        /* \"ERC20/ERC20.sol\":11500:11506  amount */\n      dup5\n        /* \"ERC20/ERC20.sol\":11481:11497  currentAllowance */\n      dup5\n        /* \"ERC20/ERC20.sol\":11481:11506  currentAllowance - amount */\n      sub\n        /* \"ERC20/ERC20.sol\":11456:11464  _approve */\n      tag_73\n        /* \"ERC20/ERC20.sol\":11456:11507  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_121:\n        /* \"ERC20/ERC20.sol\":11212:11541  {\r... */\n      pop\n        /* \"ERC20/ERC20.sol\":11088:11541  function _spendAllowance(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":7698:8369  function _transfer(\r... */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":7829:7847  from != address(0) */\n      dup4\n      and\n        /* \"ERC20/ERC20.sol\":7821:7889  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3808:3810   */\n      0x20\n        /* \"ERC20/ERC20.sol\":7821:7889  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3790:3811   */\n      mstore\n        /* \"#utility.yul\":3847:3849   */\n      0x25\n        /* \"#utility.yul\":3827:3845   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3820:3850   */\n      mstore\n        /* \"#utility.yul\":3886:3920   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3866:3884   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3859:3921   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3937:3955   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3930:3965   */\n      mstore\n        /* \"#utility.yul\":3982:4001   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":7821:7889  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_99\n        /* \"#utility.yul\":3780:4007   */\n      jump\n        /* \"ERC20/ERC20.sol\":7821:7889  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":7908:7924  to != address(0) */\n      dup3\n      and\n        /* \"ERC20/ERC20.sol\":7900:7964  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2236:2238   */\n      0x20\n        /* \"ERC20/ERC20.sol\":7900:7964  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2218:2239   */\n      mstore\n        /* \"#utility.yul\":2275:2277   */\n      0x23\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2248:2278   */\n      mstore\n        /* \"#utility.yul\":2314:2348   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2294:2312   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2287:2349   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2365:2383   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2358:2391   */\n      mstore\n        /* \"#utility.yul\":2408:2427   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":7900:7964  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_99\n        /* \"#utility.yul\":2208:2433   */\n      jump\n        /* \"ERC20/ERC20.sol\":7900:7964  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":8050:8065  _balances[from] */\n      dup4\n      and\n        /* \"ERC20/ERC20.sol\":8028:8047  uint256 fromBalance */\n      0x00\n        /* \"ERC20/ERC20.sol\":8050:8065  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20/ERC20.sol\":8084:8105  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"ERC20/ERC20.sol\":8076:8148  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3401:3403   */\n      0x20\n        /* \"ERC20/ERC20.sol\":8076:8148  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3383:3404   */\n      mstore\n        /* \"#utility.yul\":3440:3442   */\n      0x26\n        /* \"#utility.yul\":3420:3438   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3413:3443   */\n      mstore\n        /* \"#utility.yul\":3479:3513   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3459:3477   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3452:3514   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3530:3548   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3523:3559   */\n      mstore\n        /* \"#utility.yul\":3576:3595   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":8076:8148  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_99\n        /* \"#utility.yul\":3373:3601   */\n      jump\n        /* \"ERC20/ERC20.sol\":8076:8148  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":8184:8199  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"ERC20/ERC20.sol\":8184:8193  _balances */\n      0x00\n        /* \"ERC20/ERC20.sol\":8184:8199  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC20/ERC20.sol\":8202:8222  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"ERC20/ERC20.sol\":8184:8222  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"ERC20/ERC20.sol\":8244:8257  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20/ERC20.sol\":8244:8267  _balances[to] += amount */\n      dup1\n      sload\n        /* \"ERC20/ERC20.sol\":8216:8222  amount */\n      dup5\n      swap3\n        /* \"ERC20/ERC20.sol\":8184:8193  _balances */\n      swap1\n        /* \"ERC20/ERC20.sol\":8244:8267  _balances[to] += amount */\n      tag_134\n      swap1\n        /* \"ERC20/ERC20.sol\":8216:8222  amount */\n      dup5\n      swap1\n        /* \"ERC20/ERC20.sol\":8244:8267  _balances[to] += amount */\n      tag_87\n      jump\t// in\n    tag_134:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20/ERC20.sol\":8300:8302  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":8285:8311  Transfer(from, to, amount) */\n      and\n        /* \"ERC20/ERC20.sol\":8294:8298  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":8285:8311  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20/ERC20.sol\":8304:8310  amount */\n      dup5\n        /* \"ERC20/ERC20.sol\":8285:8311  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_135\n      swap2\n        /* \"#utility.yul\":4969:4994   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4957:4959   */\n      0x20\n        /* \"#utility.yul\":4942:4960   */\n      add\n      swap1\n        /* \"#utility.yul\":4924:5000   */\n      jump\n        /* \"ERC20/ERC20.sol\":8285:8311  Transfer(from, to, amount) */\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20/ERC20.sol\":8324:8361  _afterTokenTransfer(from, to, amount) */\n      tag_121\n        /* \"ERC20/ERC20.sol\":12141:12266  function _beforeTokenTransfer(\r... */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_141:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_143:\n        /* \"#utility.yul\":63:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_43:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_145:\n        /* \"#utility.yul\":343:372   */\n      tag_146\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_141\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":262:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_59:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:482   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:482   */\n    tag_148:\n        /* \"#utility.yul\":551:580   */\n      tag_149\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_141\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_150\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_141\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":470:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_31:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:764   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:764   */\n    tag_152:\n        /* \"#utility.yul\":833:862   */\n      tag_153\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_141\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_154\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_141\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":752:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_21:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1080   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1080   */\n    tag_156:\n        /* \"#utility.yul\":1149:1178   */\n      tag_157\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1068:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1432:2029   */\n    tag_18:\n        /* \"#utility.yul\":1544:1548   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x20\n        /* \"#utility.yul\":1602:1604   */\n      dup1\n        /* \"#utility.yul\":1591:1600   */\n      dup4\n        /* \"#utility.yul\":1584:1605   */\n      mstore\n        /* \"#utility.yul\":1634:1640   */\n      dup4\n        /* \"#utility.yul\":1628:1641   */\n      mload\n        /* \"#utility.yul\":1677:1683   */\n      dup1\n        /* \"#utility.yul\":1672:1674   */\n      dup3\n        /* \"#utility.yul\":1661:1670   */\n      dup6\n        /* \"#utility.yul\":1657:1675   */\n      add\n        /* \"#utility.yul\":1650:1684   */\n      mstore\n        /* \"#utility.yul\":1702:1703   */\n      0x00\n        /* \"#utility.yul\":1712:1852   */\n    tag_160:\n        /* \"#utility.yul\":1726:1732   */\n      dup2\n        /* \"#utility.yul\":1723:1724   */\n      dup2\n        /* \"#utility.yul\":1720:1733   */\n      lt\n        /* \"#utility.yul\":1712:1852   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1821:1835   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1817:1840   */\n      dup4\n      add\n        /* \"#utility.yul\":1811:1841   */\n      mload\n        /* \"#utility.yul\":1787:1804   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1806:1808   */\n      0x40\n        /* \"#utility.yul\":1783:1809   */\n      add\n        /* \"#utility.yul\":1776:1842   */\n      mstore\n        /* \"#utility.yul\":1741:1751   */\n      dup3\n      add\n        /* \"#utility.yul\":1712:1852   */\n      jump(tag_160)\n    tag_162:\n        /* \"#utility.yul\":1870:1876   */\n      dup2\n        /* \"#utility.yul\":1867:1868   */\n      dup2\n        /* \"#utility.yul\":1864:1877   */\n      gt\n        /* \"#utility.yul\":1861:1863   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1935:1937   */\n      0x40\n        /* \"#utility.yul\":1926:1932   */\n      dup4\n        /* \"#utility.yul\":1915:1924   */\n      dup8\n        /* \"#utility.yul\":1911:1933   */\n      add\n        /* \"#utility.yul\":1907:1938   */\n      add\n        /* \"#utility.yul\":1900:1942   */\n      mstore\n        /* \"#utility.yul\":1861:1863   */\n    tag_163:\n      pop\n        /* \"#utility.yul\":2013:2015   */\n      0x1f\n        /* \"#utility.yul\":1992:2007   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1988:2017   */\n      and\n        /* \"#utility.yul\":1973:2018   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2020:2022   */\n      0x40\n        /* \"#utility.yul\":1969:2023   */\n      add\n      swap4\n        /* \"#utility.yul\":1553:2029   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5005:5230   */\n    tag_87:\n        /* \"#utility.yul\":5045:5048   */\n      0x00\n        /* \"#utility.yul\":5076:5077   */\n      dup3\n        /* \"#utility.yul\":5072:5078   */\n      not\n        /* \"#utility.yul\":5069:5070   */\n      dup3\n        /* \"#utility.yul\":5066:5079   */\n      gt\n        /* \"#utility.yul\":5063:5065   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":5121:5131   */\n      0x4e487b71\n        /* \"#utility.yul\":5116:5119   */\n      0xe0\n        /* \"#utility.yul\":5112:5132   */\n      shl\n        /* \"#utility.yul\":5109:5110   */\n      0x00\n        /* \"#utility.yul\":5102:5133   */\n      mstore\n        /* \"#utility.yul\":5156:5160   */\n      0x11\n        /* \"#utility.yul\":5153:5154   */\n      0x04\n        /* \"#utility.yul\":5146:5161   */\n      mstore\n        /* \"#utility.yul\":5184:5188   */\n      0x24\n        /* \"#utility.yul\":5181:5182   */\n      0x00\n        /* \"#utility.yul\":5174:5189   */\n      revert\n        /* \"#utility.yul\":5063:5065   */\n    tag_173:\n      pop\n        /* \"#utility.yul\":5215:5224   */\n      add\n      swap1\n        /* \"#utility.yul\":5053:5230   */\n      jump\t// out\n        /* \"#utility.yul\":5235:5615   */\n    tag_64:\n        /* \"#utility.yul\":5314:5315   */\n      0x01\n        /* \"#utility.yul\":5310:5322   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5357:5369   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5378:5380   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":5432:5436   */\n      0x7f\n        /* \"#utility.yul\":5424:5430   */\n      dup3\n        /* \"#utility.yul\":5420:5437   */\n      and\n        /* \"#utility.yul\":5410:5437   */\n      swap2\n      pop\n        /* \"#utility.yul\":5378:5380   */\n    tag_175:\n        /* \"#utility.yul\":5485:5487   */\n      0x20\n        /* \"#utility.yul\":5477:5483   */\n      dup3\n        /* \"#utility.yul\":5474:5488   */\n      lt\n        /* \"#utility.yul\":5454:5472   */\n      dup2\n        /* \"#utility.yul\":5451:5489   */\n      eq\n        /* \"#utility.yul\":5448:5450   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":5531:5541   */\n      0x4e487b71\n        /* \"#utility.yul\":5526:5529   */\n      0xe0\n        /* \"#utility.yul\":5522:5542   */\n      shl\n        /* \"#utility.yul\":5519:5520   */\n      0x00\n        /* \"#utility.yul\":5512:5543   */\n      mstore\n        /* \"#utility.yul\":5566:5570   */\n      0x22\n        /* \"#utility.yul\":5563:5564   */\n      0x04\n        /* \"#utility.yul\":5556:5571   */\n      mstore\n        /* \"#utility.yul\":5594:5598   */\n      0x24\n        /* \"#utility.yul\":5591:5592   */\n      0x00\n        /* \"#utility.yul\":5584:5599   */\n      revert\n        /* \"#utility.yul\":5448:5450   */\n    tag_176:\n      pop\n        /* \"#utility.yul\":5290:5615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209749c3a0cf09a318492be87cb110f1986fceff1442081f3aa6a47213d1a57f6764736f6c63430008050033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:8"
															},
															"nodeType": "YulIf",
															"src": "88:2:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:8"
															},
															"nodeType": "YulIf",
															"src": "221:2:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:8"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:8"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:8"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:8"
															},
															"nodeType": "YulIf",
															"src": "404:2:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:8"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:8"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:8"
															},
															"nodeType": "YulIf",
															"src": "566:2:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:8"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:8"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:8"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:8",
																"statements": []
															},
															"src": "647:133:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:8"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:8"
															},
															"nodeType": "YulIf",
															"src": "789:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:8",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:8",
														"type": ""
													}
												],
												"src": "14:885:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:8"
															},
															"nodeType": "YulIf",
															"src": "1032:2:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:8"
															},
															"nodeType": "YulIf",
															"src": "1169:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:8"
															},
															"nodeType": "YulIf",
															"src": "1342:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:8",
														"type": ""
													}
												],
												"src": "904:562:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:8"
															},
															"nodeType": "YulIf",
															"src": "1614:2:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:8"
															},
															"nodeType": "YulIf",
															"src": "1684:2:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:8",
														"type": ""
													}
												],
												"src": "1471:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b1138038062000b118339810160408190526200003491620001c5565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61087f80620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461011b57806370a082311461012e57806395d89b4114610157578063a457c2d71461015f578063a9059cbb14610172578063dd62ed3e1461018557600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b6610198565b6040516100c39190610793565b60405180910390f35b6100df6100da366004610769565b61022a565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461072d565b610242565b60126100f3565b6100df610129366004610769565b610266565b6100f361013c3660046106d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610288565b6100df61016d366004610769565b610297565b6100df610180366004610769565b610317565b6100f36101933660046106fa565b610325565b6060600380546101a79061080e565b80601f01602080910402602001604051908101604052809291908181526020018280546101d39061080e565b80156102205780601f106101f557610100808354040283529160200191610220565b820191906000526020600020905b81548152906001019060200180831161020357829003601f168201915b5050505050905090565b600033610238818585610350565b5060019392505050565b600033610250858285610474565b61025b8585856104ee565b506001949350505050565b6000336102388185856102798383610325565b61028391906107e8565b610350565b6060600480546101a79061080e565b600033816102a58286610325565b90508381101561030a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025b8286868403610350565b6000336102388185856104ee565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103b25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610301565b6001600160a01b0382166104135760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610301565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104808484610325565b905060001981146104e857818110156104db5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610301565b6104e88484848403610350565b50505050565b6001600160a01b0383166105525760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610301565b6001600160a01b0382166105b45760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610301565b6001600160a01b0383166000908152602081905260409020548181101561062c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610301565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106639084906107e8565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106af91815260200190565b60405180910390a36104e8565b80356001600160a01b03811681146106d357600080fd5b919050565b6000602082840312156106ea57600080fd5b6106f3826106bc565b9392505050565b6000806040838503121561070d57600080fd5b610716836106bc565b9150610724602084016106bc565b90509250929050565b60008060006060848603121561074257600080fd5b61074b846106bc565b9250610759602085016106bc565b9150604084013590509250925092565b6000806040838503121561077c57600080fd5b610785836106bc565b946020939093013593505050565b600060208083528351808285015260005b818110156107c0578581018301518582016040015282016107a4565b818111156107d2576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561080957634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061082257607f821691505b6020821081141561084357634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212209749c3a0cf09a318492be87cb110f1986fceff1442081f3aa6a47213d1a57f6764736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB11 CODESIZE SUB DUP1 PUSH3 0xB11 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x87F DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x198 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x793 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x22A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST PUSH1 0x12 PUSH2 0xF3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x266 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1A7 SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D3 SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x220 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x220 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x203 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x350 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x250 DUP6 DUP3 DUP6 PUSH2 0x474 JUMP JUMPDEST PUSH2 0x25B DUP6 DUP6 DUP6 PUSH2 0x4EE JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x325 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x350 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1A7 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2A5 DUP3 DUP7 PUSH2 0x325 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x30A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x350 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x480 DUP5 DUP5 PUSH2 0x325 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4E8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x301 JUMP JUMPDEST PUSH2 0x4E8 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x350 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x663 SWAP1 DUP5 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6AF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E8 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F3 DUP3 PUSH2 0x6BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x716 DUP4 PUSH2 0x6BC JUMP JUMPDEST SWAP2 POP PUSH2 0x724 PUSH1 0x20 DUP5 ADD PUSH2 0x6BC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74B DUP5 PUSH2 0x6BC JUMP JUMPDEST SWAP3 POP PUSH2 0x759 PUSH1 0x20 DUP6 ADD PUSH2 0x6BC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x77C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x785 DUP4 PUSH2 0x6BC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7A4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x809 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x822 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x843 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0x49 0xC3 LOG0 0xCF MULMOD LOG3 XOR 0x49 0x2B 0xE8 PUSH29 0xB110F1986FCEFF1442081F3AA6A47213D1A57F6764736F6C6343000805 STOP CALLER ",
							"sourceMap": "1424:11573:0:-:0;;;2018:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2085:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2109:17:0;;;;:7;;:17;;;;;:::i;:::-;;2018:116;;1424:11573;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1424:11573:0;;;-1:-1:-1;1424:11573:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:8;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;139:1;136;129:12;88:2;162:13;;-1:-1:-1;;;;;224:10:8;;;221:2;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:8;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:2;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:2;;;615:1;612;605:12;566:2;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:2;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:2;887:6;78:821;-1:-1:-1;;;;;;78:821:8:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:2;;;1080:1;1077;1070:12;1032:2;1107:16;;-1:-1:-1;;;;;1172:14:8;;;1169:2;;;1199:1;1196;1189:12;1169:2;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:2;;;1374:1;1371;1364:12;1342:2;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;1022:444;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:2;;1668:4;1660:6;1656:17;1646:27;;1614:2;1721;1713:6;1710:14;1690:18;1687:38;1684:2;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:2;;1526:325;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1888:95;1424:11573:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_584": {
									"entryPoint": null,
									"id": 584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_519": {
									"entryPoint": 848,
									"id": 519,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_573": {
									"entryPoint": null,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_830": {
									"entryPoint": null,
									"id": 830,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_562": {
									"entryPoint": 1140,
									"id": 562,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 1262,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": 805,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 554,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 663,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_228": {
									"entryPoint": 614,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_54": {
									"entryPoint": 408,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_64": {
									"entryPoint": 648,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 578,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_123": {
									"entryPoint": 791,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5617:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:8"
															},
															"nodeType": "YulIf",
															"src": "111:2:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:8",
														"type": ""
													}
												],
												"src": "14:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:8"
															},
															"nodeType": "YulIf",
															"src": "272:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:8",
														"type": ""
													}
												],
												"src": "192:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:8"
															},
															"nodeType": "YulIf",
															"src": "480:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:8",
														"type": ""
													}
												],
												"src": "383:260:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:8"
															},
															"nodeType": "YulIf",
															"src": "762:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:8",
														"type": ""
													}
												],
												"src": "648:328:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:8"
															},
															"nodeType": "YulIf",
															"src": "1078:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:8",
														"type": ""
													}
												],
												"src": "981:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1345:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1357:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1368:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1345:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1387:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1412:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1405:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1405:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1398:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1398:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1304:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1315:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1326:4:8",
														"type": ""
													}
												],
												"src": "1240:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1553:476:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1563:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1573:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1567:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1591:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1584:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1614:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1634:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1628:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1618:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1661:9:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1672:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1657:18:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1677:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1650:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1693:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1702:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1697:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1762:90:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1791:9:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1802:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1787:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1787:17:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1806:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1783:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1783:26:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1825:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1833:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1821:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1821:14:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1837:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1817:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1817:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1811:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1811:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1776:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1776:66:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:66:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1723:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1726:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1720:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1734:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1736:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1745:1:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1748:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1741:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1736:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1716:3:8",
																"statements": []
															},
															"src": "1712:140:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1886:66:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1915:9:8"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1926:6:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1911:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1911:22:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1935:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1907:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1907:31:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1900:42:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1900:42:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1867:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1870:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1864:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:13:8"
															},
															"nodeType": "YulIf",
															"src": "1861:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1961:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1977:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1996:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2004:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1992:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1992:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2013:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2009:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2009:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1988:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1988:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1973:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:45:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2020:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1969:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1961:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1522:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1533:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1544:4:8",
														"type": ""
													}
												],
												"src": "1432:597:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:225:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2225:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2259:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2270:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2275:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2248:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2248:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2298:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2309:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2314:34:8",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2287:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2287:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2369:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2380:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2365:18:8"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2385:5:8",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2358:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2358:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2400:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2412:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2423:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2400:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2199:4:8",
														"type": ""
													}
												],
												"src": "2034:399:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2640:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2622:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2622:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2663:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2674:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2659:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2659:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2652:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2713:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2698:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2718:34:8",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2691:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2691:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2773:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2784:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2769:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:18:8"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2789:4:8",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2762:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2803:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2815:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2826:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2803:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2589:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2603:4:8",
														"type": ""
													}
												],
												"src": "2438:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3015:179:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3032:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3043:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3025:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3066:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3077:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3062:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3082:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:18:8"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3121:31:8",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3094:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:59:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3094:59:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3162:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3174:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3185:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3170:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3170:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3162:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2992:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3006:4:8",
														"type": ""
													}
												],
												"src": "2841:353:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3373:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3390:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3401:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3383:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3383:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3424:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3435:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3420:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3420:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3440:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3413:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3413:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3463:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3474:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3459:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3459:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3479:34:8",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3452:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3452:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3452:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3534:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3545:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3530:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3530:18:8"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3550:8:8",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3523:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3568:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3580:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3591:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3576:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3568:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3350:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3364:4:8",
														"type": ""
													}
												],
												"src": "3199:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3780:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3797:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3808:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3790:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3790:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3790:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3831:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3842:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3827:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3827:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3847:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3820:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3870:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3881:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3866:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3866:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3886:34:8",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3859:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3859:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3859:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3941:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3952:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3937:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3937:18:8"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3957:7:8",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3930:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3930:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3930:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3974:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3986:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3997:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3982:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3982:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3974:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3757:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3771:4:8",
														"type": ""
													}
												],
												"src": "3606:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4186:226:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4203:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4196:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4196:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4237:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4248:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4233:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4233:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4253:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4226:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4226:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4226:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4276:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4287:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4272:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4272:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4292:34:8",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4265:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4347:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4358:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4343:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4343:18:8"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4363:6:8",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4336:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4336:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4379:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4391:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4402:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4387:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4379:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4163:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4177:4:8",
														"type": ""
													}
												],
												"src": "4012:400:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4591:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4608:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4619:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4601:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4601:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4601:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4642:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4653:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4638:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4658:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4631:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4631:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4631:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4681:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4692:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4677:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4677:18:8"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4697:34:8",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4670:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4670:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4670:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4752:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4763:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4748:18:8"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4768:7:8",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4741:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4741:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4741:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4785:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4797:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4808:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4785:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4568:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4582:4:8",
														"type": ""
													}
												],
												"src": "4417:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4924:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4934:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4946:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4957:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4942:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4934:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4976:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4987:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4969:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4969:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4969:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4893:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4904:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4915:4:8",
														"type": ""
													}
												],
												"src": "4823:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5053:177:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5088:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5109:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5116:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5121:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5112:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5112:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5102:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5102:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5102:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5153:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5156:4:8",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5146:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5146:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5146:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5181:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5184:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5174:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5174:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5174:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5069:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5076:1:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5072:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5072:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5066:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5066:13:8"
															},
															"nodeType": "YulIf",
															"src": "5063:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5208:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5219:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5222:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5215:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5215:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5208:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5036:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5039:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5045:3:8",
														"type": ""
													}
												],
												"src": "5005:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5290:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5300:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5314:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5317:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5310:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5310:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5300:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5331:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5361:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5367:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5357:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5357:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5335:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5408:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5410:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5424:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5432:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5420:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5420:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5410:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5388:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5381:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5381:26:8"
															},
															"nodeType": "YulIf",
															"src": "5378:2:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5498:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5519:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5526:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5531:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5522:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5522:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5512:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5512:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5512:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5563:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5566:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5556:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5556:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5556:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5591:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5594:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5584:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5584:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5584:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5454:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5477:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5485:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5474:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5474:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5451:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5451:38:8"
															},
															"nodeType": "YulIf",
															"src": "5448:2:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5270:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5279:6:8",
														"type": ""
													}
												],
												"src": "5235:380:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461011b57806370a082311461012e57806395d89b4114610157578063a457c2d71461015f578063a9059cbb14610172578063dd62ed3e1461018557600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b6610198565b6040516100c39190610793565b60405180910390f35b6100df6100da366004610769565b61022a565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461072d565b610242565b60126100f3565b6100df610129366004610769565b610266565b6100f361013c3660046106d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610288565b6100df61016d366004610769565b610297565b6100df610180366004610769565b610317565b6100f36101933660046106fa565b610325565b6060600380546101a79061080e565b80601f01602080910402602001604051908101604052809291908181526020018280546101d39061080e565b80156102205780601f106101f557610100808354040283529160200191610220565b820191906000526020600020905b81548152906001019060200180831161020357829003601f168201915b5050505050905090565b600033610238818585610350565b5060019392505050565b600033610250858285610474565b61025b8585856104ee565b506001949350505050565b6000336102388185856102798383610325565b61028391906107e8565b610350565b6060600480546101a79061080e565b600033816102a58286610325565b90508381101561030a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025b8286868403610350565b6000336102388185856104ee565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103b25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610301565b6001600160a01b0382166104135760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610301565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104808484610325565b905060001981146104e857818110156104db5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610301565b6104e88484848403610350565b50505050565b6001600160a01b0383166105525760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610301565b6001600160a01b0382166105b45760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610301565b6001600160a01b0383166000908152602081905260409020548181101561062c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610301565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106639084906107e8565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106af91815260200190565b60405180910390a36104e8565b80356001600160a01b03811681146106d357600080fd5b919050565b6000602082840312156106ea57600080fd5b6106f3826106bc565b9392505050565b6000806040838503121561070d57600080fd5b610716836106bc565b9150610724602084016106bc565b90509250929050565b60008060006060848603121561074257600080fd5b61074b846106bc565b9250610759602085016106bc565b9150604084013590509250925092565b6000806040838503121561077c57600080fd5b610785836106bc565b946020939093013593505050565b600060208083528351808285015260005b818110156107c0578581018301518582016040015282016107a4565b818111156107d2576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561080957634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061082257607f821691505b6020821081141561084357634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212209749c3a0cf09a318492be87cb110f1986fceff1442081f3aa6a47213d1a57f6764736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x198 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x793 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x22A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST PUSH1 0x12 PUSH2 0xF3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x266 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1A7 SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D3 SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x220 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x220 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x203 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x350 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x250 DUP6 DUP3 DUP6 PUSH2 0x474 JUMP JUMPDEST PUSH2 0x25B DUP6 DUP6 DUP6 PUSH2 0x4EE JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x325 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x350 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1A7 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2A5 DUP3 DUP7 PUSH2 0x325 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x30A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x350 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x480 DUP5 DUP5 PUSH2 0x325 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4E8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x301 JUMP JUMPDEST PUSH2 0x4E8 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x350 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x663 SWAP1 DUP5 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6AF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E8 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F3 DUP3 PUSH2 0x6BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x716 DUP4 PUSH2 0x6BC JUMP JUMPDEST SWAP2 POP PUSH2 0x724 PUSH1 0x20 DUP5 ADD PUSH2 0x6BC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74B DUP5 PUSH2 0x6BC JUMP JUMPDEST SWAP3 POP PUSH2 0x759 PUSH1 0x20 DUP6 ADD PUSH2 0x6BC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x77C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x785 DUP4 PUSH2 0x6BC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7A4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x809 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x822 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x843 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0x49 0xC3 LOG0 0xCF MULMOD LOG3 XOR 0x49 0x2B 0xE8 PUSH29 0xB110F1986FCEFF1442081F3AA6A47213D1A57F6764736F6C6343000805 STOP CALLER ",
							"sourceMap": "1424:11573:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2204:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4557:201;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:8;;1398:22;1380:41;;1368:2;1353:18;4557:201:0;1335:92:8;3326:108:0;3414:12;;3326:108;;;4969:25:8;;;4957:2;4942:18;3326:108:0;4924:76:8;5338:295:0;;;;;;:::i;:::-;;:::i;3166:95::-;3251:2;3166:95;;6042:238;;;;;;:::i;:::-;;:::i;3497:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3598:18:0;3571:7;3598:18;;;;;;;;;;;;3497:127;2423:104;;;:::i;6783:436::-;;;;;;:::i;:::-;;:::i;3830:193::-;;;;;;:::i;:::-;;:::i;4086:151::-;;;;;;:::i;:::-;;:::i;2204:100::-;2258:13;2291:5;2284:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2204:100;:::o;4557:201::-;4640:4;736:10:5;4696:32:0;736:10:5;4712:7:0;4721:6;4696:8;:32::i;:::-;-1:-1:-1;4746:4:0;;4557:201;-1:-1:-1;;;4557:201:0:o;5338:295::-;5469:4;736:10:5;5527:38:0;5543:4;736:10:5;5558:6:0;5527:15;:38::i;:::-;5576:27;5586:4;5592:2;5596:6;5576:9;:27::i;:::-;-1:-1:-1;5621:4:0;;5338:295;-1:-1:-1;;;;5338:295:0:o;6042:238::-;6130:4;736:10:5;6186:64:0;736:10:5;6202:7:0;6239:10;6211:25;736:10:5;6202:7:0;6211:9;:25::i;:::-;:38;;;;:::i;:::-;6186:8;:64::i;2423:104::-;2479:13;2512:7;2505:14;;;;;:::i;6783:436::-;6876:4;736:10:5;6876:4:0;6959:25;736:10:5;6976:7:0;6959:9;:25::i;:::-;6932:52;;7023:15;7003:16;:35;;6995:85;;;;-1:-1:-1;;;6995:85:0;;4619:2:8;6995:85:0;;;4601:21:8;4658:2;4638:18;;;4631:30;4697:34;4677:18;;;4670:62;-1:-1:-1;;;4748:18:8;;;4741:35;4793:19;;6995:85:0;;;;;;;;;7116:60;7125:5;7132:7;7160:15;7141:16;:34;7116:8;:60::i;3830:193::-;3909:4;736:10:5;3965:28:0;736:10:5;3982:2:0;3986:6;3965:9;:28::i;4086:151::-;-1:-1:-1;;;;;4202:18:0;;;4175:7;4202:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4086:151::o;10417:380::-;-1:-1:-1;;;;;10553:19:0;;10545:68;;;;-1:-1:-1;;;10545:68:0;;4214:2:8;10545:68:0;;;4196:21:8;4253:2;4233:18;;;4226:30;4292:34;4272:18;;;4265:62;-1:-1:-1;;;4343:18:8;;;4336:34;4387:19;;10545:68:0;4186:226:8;10545:68:0;-1:-1:-1;;;;;10632:21:0;;10624:68;;;;-1:-1:-1;;;10624:68:0;;2640:2:8;10624:68:0;;;2622:21:8;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:8;;;2762:32;2811:19;;10624:68:0;2612:224:8;10624:68:0;-1:-1:-1;;;;;10705:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10757:32;;4969:25:8;;;10757:32:0;;4942:18:8;10757:32:0;;;;;;;10417:380;;;:::o;11088:453::-;11223:24;11250:25;11260:5;11267:7;11250:9;:25::i;:::-;11223:52;;-1:-1:-1;;11290:16:0;:37;11286:248;;11372:6;11352:16;:26;;11344:68;;;;-1:-1:-1;;;11344:68:0;;3043:2:8;11344:68:0;;;3025:21:8;3082:2;3062:18;;;3055:30;3121:31;3101:18;;;3094:59;3170:18;;11344:68:0;3015:179:8;11344:68:0;11456:51;11465:5;11472:7;11500:6;11481:16;:25;11456:8;:51::i;:::-;11212:329;11088:453;;;:::o;7698:671::-;-1:-1:-1;;;;;7829:18:0;;7821:68;;;;-1:-1:-1;;;7821:68:0;;3808:2:8;7821:68:0;;;3790:21:8;3847:2;3827:18;;;3820:30;3886:34;3866:18;;;3859:62;-1:-1:-1;;;3937:18:8;;;3930:35;3982:19;;7821:68:0;3780:227:8;7821:68:0;-1:-1:-1;;;;;7908:16:0;;7900:64;;;;-1:-1:-1;;;7900:64:0;;2236:2:8;7900:64:0;;;2218:21:8;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:8;;;2358:33;2408:19;;7900:64:0;2208:225:8;7900:64:0;-1:-1:-1;;;;;8050:15:0;;8028:19;8050:15;;;;;;;;;;;8084:21;;;;8076:72;;;;-1:-1:-1;;;8076:72:0;;3401:2:8;8076:72:0;;;3383:21:8;3440:2;3420:18;;;3413:30;3479:34;3459:18;;;3452:62;-1:-1:-1;;;3530:18:8;;;3523:36;3576:19;;8076:72:0;3373:228:8;8076:72:0;-1:-1:-1;;;;;8184:15:0;;;:9;:15;;;;;;;;;;;8202:20;;;8184:38;;8244:13;;;;;;;;:23;;8216:6;;8184:9;8244:23;;8216:6;;8244:23;:::i;:::-;;;;;;;;8300:2;-1:-1:-1;;;;;8285:26:0;8294:4;-1:-1:-1;;;;;8285:26:0;;8304:6;8285:26;;;;4969:25:8;;4957:2;4942:18;;4924:76;8285:26:0;;;;;;;;8324:37;12141:125;14:173:8;82:20;;-1:-1:-1;;;;;131:31:8;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;320:1;317;310:12;272:2;343:29;362:9;343:29;:::i;:::-;333:39;262:116;-1:-1:-1;;;262:116:8:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:2;;;528:1;525;518:12;480:2;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;470:173;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:2;;;810:1;807;800:12;762:2;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;752:224;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:2;;;1126:1;1123;1116:12;1078:2;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;1068:167:8:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:2;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:2;-1:-1:-1;2013:2:8;1992:15;-1:-1:-1;;1988:29:8;1973:45;;;;2020:2;1969:54;;1553:476;-1:-1:-1;;;1553:476:8:o;5005:225::-;5045:3;5076:1;5072:6;5069:1;5066:13;5063:2;;;5121:10;5116:3;5112:20;5109:1;5102:31;5156:4;5153:1;5146:15;5184:4;5181:1;5174:15;5063:2;-1:-1:-1;5215:9:8;;5053:177::o;5235:380::-;5314:1;5310:12;;;;5357;;;5378:2;;5432:4;5424:6;5420:17;5410:27;;5378:2;5485;5477:6;5474:14;5454:18;5451:38;5448:2;;;5531:10;5526:3;5522:20;5519:1;5512:31;5566:4;5563:1;5556:15;5594:4;5591:1;5584:15;5448:2;;5290:325;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "435000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2562",
								"decimals()": "281",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "26978",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51270",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2090,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2085,
									"end": 2090,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2116,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2109,
									"end": 2116,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 88,
									"end": 90,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 90,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 88,
									"end": 90,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 90,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 221,
									"end": 223,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 221,
									"end": 223,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 221,
									"end": 223,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 404,
									"end": 406,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 404,
									"end": 406,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 404,
									"end": 406,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 566,
									"end": 568,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 566,
									"end": 568,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 568,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 566,
									"end": 568,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 568,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 789,
									"end": 791,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 789,
									"end": 791,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 791,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 789,
									"end": 791,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 791,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 78,
									"end": 899,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 78,
									"end": 899,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1171,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1171,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1171,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1614,
									"end": 1616,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1616,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1614,
									"end": 1616,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1616,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1851,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1851,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1851,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1851,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1888,
									"end": 1983,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1888,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209749c3a0cf09a318492be87cb110f1986fceff1442081f3aa6a47213d1a57f6764736f6c63430008050033",
									".code": [
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1398,
											"end": 1420,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1368,
											"end": 1370,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1335,
											"end": 1427,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4924,
											"end": 5000,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3166,
											"end": 3261,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3166,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3251,
											"end": 3253,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3166,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3166,
											"end": 3261,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2258,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2291,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4640,
											"end": 4644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4696,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4712,
											"end": 4719,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4721,
											"end": 4727,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4696,
											"end": 4728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4696,
											"end": 4728,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4696,
											"end": 4728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4746,
											"end": 4750,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4746,
											"end": 4750,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5469,
											"end": 5473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5527,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5543,
											"end": 5547,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5564,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5527,
											"end": 5565,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5527,
											"end": 5565,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5527,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5576,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5586,
											"end": 5590,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5592,
											"end": 5594,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5602,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5576,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5576,
											"end": 5603,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5576,
											"end": 5603,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5576,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6186,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6209,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6239,
											"end": 6249,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6209,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6211,
											"end": 6236,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6211,
											"end": 6236,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6211,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6186,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6186,
											"end": 6250,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2492,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2512,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6876,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6959,
											"end": 6984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6976,
											"end": 6983,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6959,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6959,
											"end": 6984,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6959,
											"end": 6984,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6959,
											"end": 6984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6932,
											"end": 6984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6932,
											"end": 6984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7023,
											"end": 7038,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7038,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7038,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4621,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4601,
											"end": 4622,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4658,
											"end": 4660,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4661,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4697,
											"end": 4731,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4670,
											"end": 4732,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4741,
											"end": 4776,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4812,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4793,
											"end": 4812,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 7125,
											"end": 7130,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7132,
											"end": 7139,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7157,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7116,
											"end": 7176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3965,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3982,
											"end": 3984,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3965,
											"end": 3993,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4175,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10553,
											"end": 10572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10553,
											"end": 10572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4253,
											"end": 4255,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4256,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4292,
											"end": 4326,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4327,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4336,
											"end": 4370,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4186,
											"end": 4412,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10632,
											"end": 10653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10632,
											"end": 10653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2642,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2643,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2682,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2718,
											"end": 2752,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2691,
											"end": 2753,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 2794,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2612,
											"end": 2836,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10741,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10741,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11223,
											"end": 11247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11250,
											"end": 11275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 11260,
											"end": 11265,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11274,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11250,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11250,
											"end": 11275,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11250,
											"end": 11275,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 11250,
											"end": 11275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11223,
											"end": 11275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11223,
											"end": 11275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11290,
											"end": 11306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11290,
											"end": 11327,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11286,
											"end": 11534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11372,
											"end": 11378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11352,
											"end": 11368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11352,
											"end": 11378,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11352,
											"end": 11378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3043,
											"end": 3045,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3085,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3152,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3094,
											"end": 3153,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3015,
											"end": 3194,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11456,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11465,
											"end": 11470,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11472,
											"end": 11479,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11500,
											"end": 11506,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11481,
											"end": 11497,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11481,
											"end": 11506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11456,
											"end": 11464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 11456,
											"end": 11507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11456,
											"end": 11507,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11456,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11212,
											"end": 11541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7698,
											"end": 8369,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7698,
											"end": 8369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7829,
											"end": 7847,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7829,
											"end": 7847,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3811,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3847,
											"end": 3849,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3886,
											"end": 3920,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3859,
											"end": 3921,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 3965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3982,
											"end": 4001,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3982,
											"end": 4001,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3780,
											"end": 4007,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7908,
											"end": 7924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7908,
											"end": 7924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2239,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2277,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2314,
											"end": 2348,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2349,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2391,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2208,
											"end": 2433,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8028,
											"end": 8047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8105,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8105,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3404,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3440,
											"end": 3442,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3413,
											"end": 3443,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3479,
											"end": 3513,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3452,
											"end": 3514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3559,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3576,
											"end": 3595,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3576,
											"end": 3595,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3373,
											"end": 3601,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8222,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8222,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8222,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8222,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8294,
											"end": 8298,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8304,
											"end": 8310,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 5000,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8324,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 12141,
											"end": 12266,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 63,
											"end": 187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 63,
											"end": 187,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 262,
											"end": 378,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 262,
											"end": 378,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 480,
											"end": 482,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 480,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 480,
											"end": 482,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 480,
											"end": 482,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 480,
											"end": 482,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 470,
											"end": 643,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 470,
											"end": 643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 470,
											"end": 643,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 470,
											"end": 643,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 470,
											"end": 643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 470,
											"end": 643,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 762,
											"end": 764,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 762,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 762,
											"end": 764,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 762,
											"end": 764,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 762,
											"end": 764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 752,
											"end": 976,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 752,
											"end": 976,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 752,
											"end": 976,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 752,
											"end": 976,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 752,
											"end": 976,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 752,
											"end": 976,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1068,
											"end": 1235,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1628,
											"end": 1641,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1811,
											"end": 1841,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1809,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1776,
											"end": 1842,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1937,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1933,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1938,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1942,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1992,
											"end": 2007,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2020,
											"end": 2022,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 2029,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1553,
											"end": 2029,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5005,
											"end": 5230,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 5005,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5077,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5072,
											"end": 5078,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5069,
											"end": 5070,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5066,
											"end": 5079,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5063,
											"end": 5065,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5063,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 5063,
											"end": 5065,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5131,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 5116,
											"end": 5119,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5112,
											"end": 5132,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5109,
											"end": 5110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5102,
											"end": 5133,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5156,
											"end": 5160,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 5153,
											"end": 5154,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5146,
											"end": 5161,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5184,
											"end": 5188,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5181,
											"end": 5182,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5174,
											"end": 5189,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5063,
											"end": 5065,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 5063,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5053,
											"end": 5230,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5235,
											"end": 5615,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5235,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5314,
											"end": 5315,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5310,
											"end": 5322,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5310,
											"end": 5322,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5310,
											"end": 5322,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 5310,
											"end": 5322,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5357,
											"end": 5369,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5357,
											"end": 5369,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5357,
											"end": 5369,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5378,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 5378,
											"end": 5380,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5436,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5437,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5410,
											"end": 5437,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5410,
											"end": 5437,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5378,
											"end": 5380,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 5378,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5485,
											"end": 5487,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5474,
											"end": 5488,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5454,
											"end": 5472,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5451,
											"end": 5489,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5531,
											"end": 5541,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 5526,
											"end": 5529,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5522,
											"end": 5542,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5519,
											"end": 5520,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5543,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5566,
											"end": 5570,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 5563,
											"end": 5564,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5556,
											"end": 5571,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5594,
											"end": 5598,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5591,
											"end": 5592,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5584,
											"end": 5599,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5290,
											"end": 5615,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5290,
											"end": 5615,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5290,
											"end": 5615,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5290,
											"end": 5615,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. z This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/ERC20.sol\":{\"keccak256\":\"0x06de64a6e4f0f98aaf7bc91b3826b714e7ce7827a08da3031f8f2f91c14c5687\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79cb85a1ebbc907f8b80a26cfce98cd61eb1dfc5dbed47f2cc5f6e7a3e87d2db\",\"dweb:/ipfs/QmWzRXkG6oFwtNiGz98zduSDVYhnTKkCE5YMTVE15fBFse\"]},\"ERC20/IERC20.sol\":{\"keccak256\":\"0x62e7e272bf9d2c10b294645ea698d7fc41dadc18146ac88e9b9cc18514faacc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e09024b0f1ddb94bdc13008d4c221747b1a6f1e07b0ca599d8d213925982af34\",\"dweb:/ipfs/QmcL6X4KCFc45tk5xSEgBDFUrsKap8G74aJtti5sUYzYCL\"]},\"ERC20/IERC20Metadata.sol\":{\"keccak256\":\"0x2095e6b6cd9fc67a55c1dce6c4a4282036fef487baf848e399adc2f571f6c47b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbdbc5c7af217e674e7c45ab729cf3ffe1c2756c4438e5818f39f30266b836e2\",\"dweb:/ipfs/QmPkmQQ6bAVYGRKR1KMqRhU1kPL49aFc5zqCLmJZEMsavE\"]},\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/ERC20.sol\":{\"keccak256\":\"0x06de64a6e4f0f98aaf7bc91b3826b714e7ce7827a08da3031f8f2f91c14c5687\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79cb85a1ebbc907f8b80a26cfce98cd61eb1dfc5dbed47f2cc5f6e7a3e87d2db\",\"dweb:/ipfs/QmWzRXkG6oFwtNiGz98zduSDVYhnTKkCE5YMTVE15fBFse\"]},\"ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xabef7cdf0e1d800c26452949f60f3c79c16bccf4ea10cb216242b9df40c2fe1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c0145f12a950b664c844e87a8599e3eeb9d83f67758b06b8ee8d6e09b05e9c1\",\"dweb:/ipfs/Qmemrx4imD5KC3isN3WfgjyynxWxj64q4Lb62S22eAGnJn\"]},\"ERC20/IERC20.sol\":{\"keccak256\":\"0x62e7e272bf9d2c10b294645ea698d7fc41dadc18146ac88e9b9cc18514faacc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e09024b0f1ddb94bdc13008d4c221747b1a6f1e07b0ca599d8d213925982af34\",\"dweb:/ipfs/QmcL6X4KCFc45tk5xSEgBDFUrsKap8G74aJtti5sUYzYCL\"]},\"ERC20/IERC20Metadata.sol\":{\"keccak256\":\"0x2095e6b6cd9fc67a55c1dce6c4a4282036fef487baf848e399adc2f571f6c47b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbdbc5c7af217e674e7c45ab729cf3ffe1c2756c4438e5818f39f30266b836e2\",\"dweb:/ipfs/QmPkmQQ6bAVYGRKR1KMqRhU1kPL49aFc5zqCLmJZEMsavE\"]},\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "ERC20/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "ERC20/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "ERC20/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "ERC20/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "ERC20/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0x62e7e272bf9d2c10b294645ea698d7fc41dadc18146ac88e9b9cc18514faacc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e09024b0f1ddb94bdc13008d4c221747b1a6f1e07b0ca599d8d213925982af34\",\"dweb:/ipfs/QmcL6X4KCFc45tk5xSEgBDFUrsKap8G74aJtti5sUYzYCL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0x62e7e272bf9d2c10b294645ea698d7fc41dadc18146ac88e9b9cc18514faacc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e09024b0f1ddb94bdc13008d4c221747b1a6f1e07b0ca599d8d213925982af34\",\"dweb:/ipfs/QmcL6X4KCFc45tk5xSEgBDFUrsKap8G74aJtti5sUYzYCL\"]},\"ERC20/IERC20Metadata.sol\":{\"keccak256\":\"0x2095e6b6cd9fc67a55c1dce6c4a4282036fef487baf848e399adc2f571f6c47b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbdbc5c7af217e674e7c45ab729cf3ffe1c2756c4438e5818f39f30266b836e2\",\"dweb:/ipfs/QmPkmQQ6bAVYGRKR1KMqRhU1kPL49aFc5zqCLmJZEMsavE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/TitanToken.sol": {
				"TitanToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20/TitanToken.sol\":181:808  contract TitanToken is ERC20, ERC20Burnable, Pausable, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"ERC20/TitanToken.sol\":251:363  constructor() ERC20(\"TitanToken\", \"Titan\") {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ERC20/ERC20.sol\":2018:2134  constructor(string memory name_, string memory symbol_) {\r... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x0a\n  dup2\n  mstore\n  shl(0xb1, 0x2a34ba30b72a37b5b2b7)\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  dup3\n  mstore\n  dup4\n  mload\n  dup1\n  dup6\n  add\n  swap1\n  swap5\n  mstore\n  0x05\n  dup5\n  mstore\n  shl(0xd9, 0x2a34ba30b7)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"ERC20/ERC20.sol\":2085:2098  _name = name_ */\n  dup2\n  mload\n    /* \"ERC20/ERC20.sol\":2018:2134  constructor(string memory name_, string memory symbol_) {\r... */\n  swap2\n  swap3\n  swap2\n    /* \"ERC20/ERC20.sol\":2085:2098  _name = name_ */\n  tag_7\n  swap2\n    /* \"ERC20/ERC20.sol\":2085:2090  _name */\n  0x03\n  swap2\n    /* \"ERC20/ERC20.sol\":2085:2098  _name = name_ */\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"ERC20/ERC20.sol\":2109:2126  _symbol = symbol_ */\n  dup1\n  mload\n  tag_9\n  swap1\n    /* \"ERC20/ERC20.sol\":2109:2116  _symbol */\n  0x04\n  swap1\n    /* \"ERC20/ERC20.sol\":2109:2126  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n  pop\n    /* \"Utils/Pausable.sol\":1007:1014  _paused */\n  0x05\n    /* \"Utils/Pausable.sol\":1007:1022  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  pop\n    /* \"Utils/Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"Utils/Context.sol\":736:746  msg.sender */\n  caller\n    /* \"Utils/Ownable.sol\":942:960  _transferOwnership */\n  tag_15\n    /* \"Utils/Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_12:\n    /* \"ERC20/TitanToken.sol\":305:355  _mint(msg.sender, 100000000000 * 10 ** decimals()) */\n  tag_17\n    /* \"ERC20/TitanToken.sol\":311:321  msg.sender */\n  caller\n    /* \"ERC20/TitanToken.sol\":338:354  10 ** decimals() */\n  tag_20\n    /* \"ERC20/ERC20.sol\":3251:3253  18 */\n  0x12\n    /* \"ERC20/TitanToken.sol\":338:340  10 */\n  0x0a\n    /* \"ERC20/TitanToken.sol\":338:354  10 ** decimals() */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"ERC20/TitanToken.sol\":323:354  100000000000 * 10 ** decimals() */\n  tag_22\n  swap1\n    /* \"ERC20/TitanToken.sol\":323:335  100000000000 */\n  0x174876e800\n    /* \"ERC20/TitanToken.sol\":323:354  100000000000 * 10 ** decimals() */\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"ERC20/TitanToken.sol\":305:310  _mint */\n  tag_24\n    /* \"ERC20/TitanToken.sol\":305:355  _mint(msg.sender, 100000000000 * 10 ** decimals()) */\n  jump\t// in\ntag_17:\n    /* \"ERC20/TitanToken.sol\":181:808  contract TitanToken is ERC20, ERC20Burnable, Pausable, Ownable {\r... */\n  jump(tag_65)\n    /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_15:\n    /* \"Utils/Ownable.sol\":2426:2432  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n  dup4\n  dup2\n  and\n    /* \"Utils/Ownable.sol\":2426:2432  _owner */\n  0x0100\n    /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup6\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"Utils/Ownable.sol\":2426:2432  _owner */\n  swap4\n  swap1\n  swap3\n  div\n  and\n  swap2\n  dup3\n  swap1\n    /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"Utils/Ownable.sol\":2407:2423  address oldOwner */\n  0x00\n  swap1\n    /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"Utils/Ownable.sol\":2396:2524  {\r... */\n  pop\n    /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"ERC20/ERC20.sol\":8656:9055  function _mint(address account, uint256 amount) internal virtual {\r... */\ntag_24:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20/ERC20.sol\":8740:8761  account != address(0) */\n  dup3\n  and\n    /* \"ERC20/ERC20.sol\":8732:8797  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_30\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":561:563   */\n  0x20\n    /* \"ERC20/ERC20.sol\":8732:8797  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":543:564   */\n  mstore\n    /* \"#utility.yul\":600:602   */\n  0x1f\n    /* \"#utility.yul\":580:598   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":573:603   */\n  mstore\n    /* \"#utility.yul\":639:672   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":619:637   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":612:673   */\n  mstore\n    /* \"#utility.yul\":690:708   */\n  0x64\n  add\n    /* \"ERC20/ERC20.sol\":8732:8797  require(account != address(0), \"ERC20: mint to the zero address\") */\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_30:\n    /* \"ERC20/ERC20.sol\":8810:8859  _beforeTokenTransfer(address(0), account, amount) */\n  tag_33\n    /* \"ERC20/ERC20.sol\":8839:8840  0 */\n  0x00\n    /* \"ERC20/ERC20.sol\":8843:8850  account */\n  dup4\n    /* \"ERC20/ERC20.sol\":8852:8858  amount */\n  dup4\n    /* \"ERC20/ERC20.sol\":8810:8830  _beforeTokenTransfer */\n  tag_34\n    /* \"ERC20/ERC20.sol\":8810:8859  _beforeTokenTransfer(address(0), account, amount) */\n  jump\t// in\ntag_33:\n    /* \"ERC20/ERC20.sol\":8888:8894  amount */\n  dup1\n    /* \"ERC20/ERC20.sol\":8872:8884  _totalSupply */\n  0x02\n  0x00\n    /* \"ERC20/ERC20.sol\":8872:8894  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_35\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20/ERC20.sol\":8905:8923  _balances[account] */\n  dup3\n  and\n    /* \"ERC20/ERC20.sol\":8905:8914  _balances */\n  0x00\n    /* \"ERC20/ERC20.sol\":8905:8923  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"ERC20/ERC20.sol\":8905:8933  _balances[account] += amount */\n  dup1\n  sload\n    /* \"ERC20/ERC20.sol\":8927:8933  amount */\n  dup4\n  swap3\n    /* \"ERC20/ERC20.sol\":8905:8914  _balances */\n  swap1\n    /* \"ERC20/ERC20.sol\":8905:8933  _balances[account] += amount */\n  tag_37\n  swap1\n    /* \"ERC20/ERC20.sol\":8927:8933  amount */\n  dup5\n  swap1\n    /* \"ERC20/ERC20.sol\":8905:8933  _balances[account] += amount */\n  tag_36\n  jump\t// in\ntag_37:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"ERC20/ERC20.sol\":8949:8986  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":865:890   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20/ERC20.sol\":8949:8986  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"ERC20/ERC20.sol\":8966:8967  0 */\n  0x00\n  swap1\n    /* \"ERC20/ERC20.sol\":8949:8986  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":853:855   */\n  0x20\n    /* \"#utility.yul\":838:856   */\n  add\n    /* \"ERC20/ERC20.sol\":8949:8986  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"ERC20/ERC20.sol\":8656:9055  function _mint(address account, uint256 amount) internal virtual {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20/TitanToken.sol\":606:805  function _beforeTokenTransfer(address from, address to, uint256 amount)\r... */\ntag_34:\n    /* \"Utils/Pausable.sol\":1201:1208  _paused */\n  and(0xff, sload(0x05))\n    /* \"Utils/Pausable.sol\":1455:1464  !paused() */\n  iszero\n    /* \"Utils/Pausable.sol\":1447:1485  require(!paused(), \"Pausable: paused\") */\n  tag_45\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"Utils/Pausable.sol\":1447:1485  require(!paused(), \"Pausable: paused\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x10\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n  shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:313   */\n  mstore\n    /* \"#utility.yul\":330:348   */\n  0x64\n  add\n    /* \"Utils/Pausable.sol\":1447:1485  require(!paused(), \"Pausable: paused\") */\n  tag_31\n    /* \"#utility.yul\":188:354   */\n  jump\n    /* \"Utils/Pausable.sol\":1447:1485  require(!paused(), \"Pausable: paused\") */\ntag_45:\n    /* \"ERC20/TitanToken.sol\":753:797  super._beforeTokenTransfer(from, to, amount) */\n  tag_49\n    /* \"ERC20/TitanToken.sol\":780:784  from */\n  dup4\n    /* \"ERC20/TitanToken.sol\":786:788  to */\n  dup4\n    /* \"ERC20/TitanToken.sol\":790:796  amount */\n  dup4\n    /* \"ERC20/TitanToken.sol\":753:779  super._beforeTokenTransfer */\n  or(tag_0_99, shl(0x20, tag_49))\n    /* \"ERC20/TitanToken.sol\":753:797  super._beforeTokenTransfer(from, to, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_49:\n    /* \"ERC20/TitanToken.sol\":606:805  function _beforeTokenTransfer(address from, address to, uint256 amount)\r... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20/TitanToken.sol\":181:808  contract TitanToken is ERC20, ERC20Burnable, Pausable, Ownable {\r... */\ntag_8:\n  dup3\n  dup1\n  sload\n  tag_54\n  swap1\n  tag_55\n  jump\t// in\ntag_54:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_57\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_60)\ntag_57:\n  dup3\n  0x1f\n  lt\n  tag_58\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_60)\ntag_58:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_60\n  jumpi\n  swap2\n  dup3\n  add\ntag_59:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_60\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_59)\ntag_60:\n  pop\n  tag_61\n  swap3\n  swap2\n  pop\n  tag_62\n  jump\t// in\ntag_61:\n  pop\n  swap1\n  jump\t// out\ntag_62:\ntag_63:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_61\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_63)\n    /* \"#utility.yul\":901:1029   */\ntag_36:\n    /* \"#utility.yul\":941:944   */\n  0x00\n    /* \"#utility.yul\":972:973   */\n  dup3\n    /* \"#utility.yul\":968:974   */\n  not\n    /* \"#utility.yul\":965:966   */\n  dup3\n    /* \"#utility.yul\":962:975   */\n  gt\n    /* \"#utility.yul\":959:961   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":978:996   */\n  tag_71\n  tag_72\n  jump\t// in\ntag_71:\n  pop\n    /* \"#utility.yul\":1014:1023   */\n  add\n  swap1\n    /* \"#utility.yul\":949:1029   */\n  jump\t// out\n    /* \"#utility.yul\":1034:1456   */\ntag_73:\n    /* \"#utility.yul\":1123:1124   */\n  0x01\n    /* \"#utility.yul\":1166:1171   */\n  dup2\n    /* \"#utility.yul\":1123:1124   */\n  dup2\n    /* \"#utility.yul\":1180:1450   */\ntag_75:\n    /* \"#utility.yul\":1201:1208   */\n  dup1\n    /* \"#utility.yul\":1191:1199   */\n  dup6\n    /* \"#utility.yul\":1188:1209   */\n  gt\n    /* \"#utility.yul\":1180:1450   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":1260:1264   */\n  dup2\n    /* \"#utility.yul\":1256:1257   */\n  0x00\n    /* \"#utility.yul\":1252:1258   */\n  not\n    /* \"#utility.yul\":1248:1265   */\n  div\n    /* \"#utility.yul\":1242:1246   */\n  dup3\n    /* \"#utility.yul\":1239:1266   */\n  gt\n    /* \"#utility.yul\":1236:1238   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":1269:1287   */\n  tag_79\n  tag_72\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1319:1326   */\n  dup1\n    /* \"#utility.yul\":1309:1317   */\n  dup6\n    /* \"#utility.yul\":1305:1327   */\n  and\n    /* \"#utility.yul\":1302:1304   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":1339:1355   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":1302:1304   */\ntag_80:\n    /* \"#utility.yul\":1418:1440   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":1378:1393   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":1180:1450   */\n  jump(tag_75)\ntag_77:\n    /* \"#utility.yul\":1184:1187   */\n  pop\n    /* \"#utility.yul\":1098:1456   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1461:1592   */\ntag_21:\n    /* \"#utility.yul\":1521:1526   */\n  0x00\n    /* \"#utility.yul\":1550:1586   */\n  tag_82\n    /* \"#utility.yul\":1577:1585   */\n  dup4\n    /* \"#utility.yul\":1571:1575   */\n  dup4\n    /* \"#utility.yul\":1550:1586   */\n  tag_83\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":1541:1586   */\n  swap4\n    /* \"#utility.yul\":1531:1592   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1597:2403   */\ntag_83:\n    /* \"#utility.yul\":1646:1651   */\n  0x00\n    /* \"#utility.yul\":1676:1684   */\n  dup3\n    /* \"#utility.yul\":1666:1668   */\n  tag_85\n  jumpi\n  pop\n    /* \"#utility.yul\":1717:1718   */\n  0x01\n    /* \"#utility.yul\":1731:1736   */\n  jump(tag_84)\n    /* \"#utility.yul\":1666:1668   */\ntag_85:\n    /* \"#utility.yul\":1765:1769   */\n  dup2\n    /* \"#utility.yul\":1755:1757   */\n  tag_86\n  jumpi\n  pop\n    /* \"#utility.yul\":1802:1803   */\n  0x00\n    /* \"#utility.yul\":1816:1821   */\n  jump(tag_84)\n    /* \"#utility.yul\":1755:1757   */\ntag_86:\n    /* \"#utility.yul\":1847:1851   */\n  dup2\n    /* \"#utility.yul\":1865:1866   */\n  0x01\n    /* \"#utility.yul\":1860:1919   */\n  dup2\n  eq\n  tag_88\n  jumpi\n    /* \"#utility.yul\":1933:1934   */\n  0x02\n    /* \"#utility.yul\":1928:2058   */\n  dup2\n  eq\n  tag_89\n  jumpi\n    /* \"#utility.yul\":1840:2058   */\n  jump(tag_87)\n    /* \"#utility.yul\":1860:1919   */\ntag_88:\n    /* \"#utility.yul\":1890:1891   */\n  0x01\n    /* \"#utility.yul\":1881:1891   */\n  swap2\n  pop\n    /* \"#utility.yul\":1904:1909   */\n  pop\n  jump(tag_84)\n    /* \"#utility.yul\":1928:2058   */\ntag_89:\n    /* \"#utility.yul\":1965:1968   */\n  0xff\n    /* \"#utility.yul\":1955:1963   */\n  dup5\n    /* \"#utility.yul\":1952:1969   */\n  gt\n    /* \"#utility.yul\":1949:1951   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":1972:1990   */\n  tag_91\n  tag_72\n  jump\t// in\ntag_91:\n  pop\n  pop\n    /* \"#utility.yul\":2028:2029   */\n  0x01\n    /* \"#utility.yul\":2014:2030   */\n  dup3\n  shl\n    /* \"#utility.yul\":2043:2048   */\n  jump(tag_84)\n    /* \"#utility.yul\":1840:2058   */\ntag_87:\n  pop\n    /* \"#utility.yul\":2142:2144   */\n  0x20\n    /* \"#utility.yul\":2132:2140   */\n  dup4\n    /* \"#utility.yul\":2129:2145   */\n  lt\n    /* \"#utility.yul\":2123:2126   */\n  0x0133\n    /* \"#utility.yul\":2117:2121   */\n  dup4\n    /* \"#utility.yul\":2114:2127   */\n  lt\n    /* \"#utility.yul\":2110:2146   */\n  and\n    /* \"#utility.yul\":2104:2106   */\n  0x4e\n    /* \"#utility.yul\":2094:2102   */\n  dup5\n    /* \"#utility.yul\":2091:2107   */\n  lt\n    /* \"#utility.yul\":2086:2088   */\n  0x0b\n    /* \"#utility.yul\":2080:2084   */\n  dup5\n    /* \"#utility.yul\":2077:2089   */\n  lt\n    /* \"#utility.yul\":2073:2108   */\n  and\n    /* \"#utility.yul\":2070:2147   */\n  or\n    /* \"#utility.yul\":2067:2069   */\n  iszero\n  tag_92\n  jumpi\n  pop\n    /* \"#utility.yul\":2179:2198   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":2211:2216   */\n  jump(tag_84)\n    /* \"#utility.yul\":2067:2069   */\ntag_92:\n    /* \"#utility.yul\":2258:2292   */\n  tag_93\n    /* \"#utility.yul\":2283:2291   */\n  dup4\n    /* \"#utility.yul\":2277:2281   */\n  dup4\n    /* \"#utility.yul\":2258:2292   */\n  tag_73\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2328:2334   */\n  dup1\n    /* \"#utility.yul\":2324:2325   */\n  0x00\n    /* \"#utility.yul\":2320:2326   */\n  not\n    /* \"#utility.yul\":2316:2335   */\n  div\n    /* \"#utility.yul\":2307:2314   */\n  dup3\n    /* \"#utility.yul\":2304:2336   */\n  gt\n    /* \"#utility.yul\":2301:2303   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":2339:2357   */\n  tag_95\n  tag_72\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2377:2397   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":1656:2403   */\ntag_84:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2408:2576   */\ntag_23:\n    /* \"#utility.yul\":2448:2455   */\n  0x00\n    /* \"#utility.yul\":2514:2515   */\n  dup2\n    /* \"#utility.yul\":2510:2511   */\n  0x00\n    /* \"#utility.yul\":2506:2512   */\n  not\n    /* \"#utility.yul\":2502:2516   */\n  div\n    /* \"#utility.yul\":2499:2500   */\n  dup4\n    /* \"#utility.yul\":2496:2517   */\n  gt\n    /* \"#utility.yul\":2491:2492   */\n  dup3\n    /* \"#utility.yul\":2484:2493   */\n  iszero\n    /* \"#utility.yul\":2477:2494   */\n  iszero\n    /* \"#utility.yul\":2473:2518   */\n  and\n    /* \"#utility.yul\":2470:2472   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":2521:2539   */\n  tag_98\n  tag_72\n  jump\t// in\ntag_98:\n  pop\n    /* \"#utility.yul\":2561:2570   */\n  mul\n  swap1\n    /* \"#utility.yul\":2460:2576   */\n  jump\t// out\n    /* \"#utility.yul\":2581:2961   */\ntag_55:\n    /* \"#utility.yul\":2660:2661   */\n  0x01\n    /* \"#utility.yul\":2656:2668   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2703:2715   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2724:2726   */\n  tag_100\n  jumpi\n    /* \"#utility.yul\":2778:2782   */\n  0x7f\n    /* \"#utility.yul\":2770:2776   */\n  dup3\n    /* \"#utility.yul\":2766:2783   */\n  and\n    /* \"#utility.yul\":2756:2783   */\n  swap2\n  pop\n    /* \"#utility.yul\":2724:2726   */\ntag_100:\n    /* \"#utility.yul\":2831:2833   */\n  0x20\n    /* \"#utility.yul\":2823:2829   */\n  dup3\n    /* \"#utility.yul\":2820:2834   */\n  lt\n    /* \"#utility.yul\":2800:2818   */\n  dup2\n    /* \"#utility.yul\":2797:2835   */\n  eq\n    /* \"#utility.yul\":2794:2796   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":2877:2887   */\n  0x4e487b71\n    /* \"#utility.yul\":2872:2875   */\n  0xe0\n    /* \"#utility.yul\":2868:2888   */\n  shl\n    /* \"#utility.yul\":2865:2866   */\n  0x00\n    /* \"#utility.yul\":2858:2889   */\n  mstore\n    /* \"#utility.yul\":2912:2916   */\n  0x22\n    /* \"#utility.yul\":2909:2910   */\n  0x04\n    /* \"#utility.yul\":2902:2917   */\n  mstore\n    /* \"#utility.yul\":2940:2944   */\n  0x24\n    /* \"#utility.yul\":2937:2938   */\n  0x00\n    /* \"#utility.yul\":2930:2945   */\n  revert\n    /* \"#utility.yul\":2794:2796   */\ntag_101:\n  pop\n    /* \"#utility.yul\":2636:2961   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2966:3093   */\ntag_72:\n    /* \"#utility.yul\":3027:3037   */\n  0x4e487b71\n    /* \"#utility.yul\":3022:3025   */\n  0xe0\n    /* \"#utility.yul\":3018:3038   */\n  shl\n    /* \"#utility.yul\":3015:3016   */\n  0x00\n    /* \"#utility.yul\":3008:3039   */\n  mstore\n    /* \"#utility.yul\":3058:3062   */\n  0x11\n    /* \"#utility.yul\":3055:3056   */\n  0x04\n    /* \"#utility.yul\":3048:3063   */\n  mstore\n    /* \"#utility.yul\":3082:3086   */\n  0x24\n    /* \"#utility.yul\":3079:3080   */\n  0x00\n    /* \"#utility.yul\":3072:3087   */\n  revert\n    /* \"#utility.yul\":2998:3093   */\ntag_65:\n    /* \"ERC20/TitanToken.sol\":181:808  contract TitanToken is ERC20, ERC20Burnable, Pausable, Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20/TitanToken.sol\":181:808  contract TitanToken is ERC20, ERC20Burnable, Pausable, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x39509351\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20/ERC20.sol\":2204:2304  function name() public view virtual override returns (string memory) {\r... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":4557:4758  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_4:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":1798:1812   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1791:1813   */\n      iszero\n        /* \"#utility.yul\":1773:1814   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1761:1763   */\n      0x20\n        /* \"#utility.yul\":1746:1764   */\n      add\n        /* \"ERC20/ERC20.sol\":4557:4758  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      tag_28\n        /* \"#utility.yul\":1728:1820   */\n      jump\n        /* \"ERC20/ERC20.sol\":3326:3434  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_5:\n        /* \"ERC20/ERC20.sol\":3414:3426  _totalSupply */\n      sload(0x02)\n        /* \"ERC20/ERC20.sol\":3326:3434  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":7989:8014   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":7977:7979   */\n      0x20\n        /* \"#utility.yul\":7962:7980   */\n      add\n        /* \"ERC20/ERC20.sol\":3326:3434  function totalSupply() public view virtual override returns (uint256) {\r... */\n      tag_28\n        /* \"#utility.yul\":7944:8020   */\n      jump\n        /* \"ERC20/ERC20.sol\":5338:5633  function transferFrom(\r... */\n    tag_6:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":3166:3261  function decimals() public view virtual override returns (uint256) {\r... */\n    tag_7:\n        /* \"ERC20/ERC20.sol\":3251:3253  18 */\n      0x12\n        /* \"ERC20/ERC20.sol\":3166:3261  function decimals() public view virtual override returns (uint256) {\r... */\n      jump(tag_36)\n        /* \"ERC20/ERC20.sol\":6042:6280  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_8:\n      tag_30\n      tag_49\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"ERC20/TitanToken.sol\":440:505  function unpause() public onlyOwner {\r... */\n    tag_9:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"ERC20/TitanToken.sol\":513:598  function mint(address to, uint256 amount) public {\r... */\n    tag_10:\n      tag_52\n      tag_55\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"ERC20/ERC20Burnable.sol\":590:681  function burn(uint256 amount) public virtual {\r... */\n    tag_11:\n      tag_52\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"Utils/Pausable.sol\":1130:1216  function paused() public view virtual returns (bool) {\r... */\n    tag_12:\n        /* \"Utils/Pausable.sol\":1201:1208  _paused */\n      and(0xff, sload(0x05))\n        /* \"Utils/Pausable.sol\":1130:1216  function paused() public view virtual returns (bool) {\r... */\n      jump(tag_30)\n        /* \"ERC20/ERC20.sol\":3497:3624  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_13:\n      tag_36\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":3598:3616  _balances[account] */\n      and\n        /* \"ERC20/ERC20.sol\":3571:3578  uint256 */\n      0x00\n        /* \"ERC20/ERC20.sol\":3598:3616  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20/ERC20.sol\":3497:3624  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"Utils/Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_14:\n      tag_52\n      tag_70\n      jump\t// in\n        /* \"ERC20/ERC20Burnable.sol\":1000:1164  function burnFrom(address account, uint256 amount) public virtual {\r... */\n    tag_15:\n      tag_52\n      tag_72\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"ERC20/TitanToken.sol\":371:432  function pause() public onlyOwner {\r... */\n    tag_16:\n      tag_52\n      tag_75\n      jump\t// in\n        /* \"Utils/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_17:\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      sload(0x05)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Utils/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1589:1621   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1571:1622   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1559:1561   */\n      0x20\n        /* \"#utility.yul\":1544:1562   */\n      add\n        /* \"Utils/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n      tag_28\n        /* \"#utility.yul\":1526:1628   */\n      jump\n        /* \"ERC20/ERC20.sol\":2423:2527  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_18:\n      tag_26\n      tag_81\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":6783:7219  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_19:\n      tag_30\n      tag_84\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":3830:4023  function transfer(address to, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_20:\n      tag_30\n      tag_88\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":4086:4237  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_21:\n      tag_36\n      tag_92\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n        /* \"Utils/Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_22:\n      tag_52\n      tag_97\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":2204:2304  function name() public view virtual override returns (string memory) {\r... */\n    tag_27:\n        /* \"ERC20/ERC20.sol\":2258:2271  string memory */\n      0x60\n        /* \"ERC20/ERC20.sol\":2291:2296  _name */\n      0x03\n        /* \"ERC20/ERC20.sol\":2284:2296  return _name */\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_102\n      jump\t// in\n    tag_103:\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_105\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_104)\n    tag_105:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_106:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_106\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":2204:2304  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":4557:4758  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_33:\n        /* \"ERC20/ERC20.sol\":4640:4644  bool */\n      0x00\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20.sol\":4696:4728  _approve(owner, spender, amount) */\n      tag_110\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup2\n        /* \"ERC20/ERC20.sol\":4712:4719  spender */\n      dup6\n        /* \"ERC20/ERC20.sol\":4721:4727  amount */\n      dup6\n        /* \"ERC20/ERC20.sol\":4696:4704  _approve */\n      tag_111\n        /* \"ERC20/ERC20.sol\":4696:4728  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_110:\n      pop\n        /* \"ERC20/ERC20.sol\":4746:4750  true */\n      0x01\n      swap4\n        /* \"ERC20/ERC20.sol\":4557:4758  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":5338:5633  function transferFrom(\r... */\n    tag_43:\n        /* \"ERC20/ERC20.sol\":5469:5473  bool */\n      0x00\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20.sol\":5527:5565  _spendAllowance(from, spender, amount) */\n      tag_115\n        /* \"ERC20/ERC20.sol\":5543:5547  from */\n      dup6\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup3\n        /* \"ERC20/ERC20.sol\":5558:5564  amount */\n      dup6\n        /* \"ERC20/ERC20.sol\":5527:5542  _spendAllowance */\n      tag_116\n        /* \"ERC20/ERC20.sol\":5527:5565  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_115:\n        /* \"ERC20/ERC20.sol\":5576:5603  _transfer(from, to, amount) */\n      tag_117\n        /* \"ERC20/ERC20.sol\":5586:5590  from */\n      dup6\n        /* \"ERC20/ERC20.sol\":5592:5594  to */\n      dup6\n        /* \"ERC20/ERC20.sol\":5596:5602  amount */\n      dup6\n        /* \"ERC20/ERC20.sol\":5576:5585  _transfer */\n      tag_118\n        /* \"ERC20/ERC20.sol\":5576:5603  _transfer(from, to, amount) */\n      jump\t// in\n    tag_117:\n      pop\n        /* \"ERC20/ERC20.sol\":5621:5625  true */\n      0x01\n      swap5\n        /* \"ERC20/ERC20.sol\":5338:5633  function transferFrom(\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":6042:6280  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_50:\n        /* \"ERC20/ERC20.sol\":6130:6134  bool */\n      0x00\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20.sol\":6186:6250  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_110\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup2\n        /* \"ERC20/ERC20.sol\":6202:6209  spender */\n      dup6\n        /* \"ERC20/ERC20.sol\":6239:6249  addedValue */\n      dup6\n        /* \"ERC20/ERC20.sol\":6211:6236  allowance(owner, spender) */\n      tag_123\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup4\n        /* \"ERC20/ERC20.sol\":6202:6209  spender */\n      dup4\n        /* \"ERC20/ERC20.sol\":6211:6220  allowance */\n      tag_94\n        /* \"ERC20/ERC20.sol\":6211:6236  allowance(owner, spender) */\n      jump\t// in\n    tag_123:\n        /* \"ERC20/ERC20.sol\":6211:6249  allowance(owner, spender) + addedValue */\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"ERC20/ERC20.sol\":6186:6194  _approve */\n      tag_111\n        /* \"ERC20/ERC20.sol\":6186:6250  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"ERC20/TitanToken.sol\":440:505  function unpause() public onlyOwner {\r... */\n    tag_53:\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Utils/Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"ERC20/TitanToken.sol\":487:497  _unpause() */\n      tag_133\n        /* \"ERC20/TitanToken.sol\":487:495  _unpause */\n      tag_134\n        /* \"ERC20/TitanToken.sol\":487:497  _unpause() */\n      jump\t// in\n    tag_133:\n        /* \"ERC20/TitanToken.sol\":440:505  function unpause() public onlyOwner {\r... */\n      jump\t// out\n        /* \"ERC20/TitanToken.sol\":513:598  function mint(address to, uint256 amount) public {\r... */\n    tag_56:\n        /* \"ERC20/TitanToken.sol\":573:590  _mint(to, amount) */\n      tag_136\n        /* \"ERC20/TitanToken.sol\":579:581  to */\n      dup3\n        /* \"ERC20/TitanToken.sol\":583:589  amount */\n      dup3\n        /* \"ERC20/TitanToken.sol\":573:578  _mint */\n      tag_137\n        /* \"ERC20/TitanToken.sol\":573:590  _mint(to, amount) */\n      jump\t// in\n    tag_136:\n        /* \"ERC20/TitanToken.sol\":513:598  function mint(address to, uint256 amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20Burnable.sol\":590:681  function burn(uint256 amount) public virtual {\r... */\n    tag_60:\n        /* \"ERC20/ERC20Burnable.sol\":646:673  _burn(_msgSender(), amount) */\n      tag_139\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20Burnable.sol\":666:672  amount */\n      dup3\n        /* \"ERC20/ERC20Burnable.sol\":646:651  _burn */\n      tag_141\n        /* \"ERC20/ERC20Burnable.sol\":646:673  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_139:\n        /* \"ERC20/ERC20Burnable.sol\":590:681  function burn(uint256 amount) public virtual {\r... */\n      pop\n      jump\t// out\n        /* \"Utils/Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_70:\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Utils/Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_147:\n        /* \"Utils/Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      tag_133\n        /* \"Utils/Ownable.sol\":1806:1807  0 */\n      0x00\n        /* \"Utils/Ownable.sol\":1779:1797  _transferOwnership */\n      tag_151\n        /* \"Utils/Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"ERC20/ERC20Burnable.sol\":1000:1164  function burnFrom(address account, uint256 amount) public virtual {\r... */\n    tag_73:\n        /* \"ERC20/ERC20Burnable.sol\":1077:1123  _spendAllowance(account, _msgSender(), amount) */\n      tag_153\n        /* \"ERC20/ERC20Burnable.sol\":1093:1100  account */\n      dup3\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20Burnable.sol\":1116:1122  amount */\n      dup4\n        /* \"ERC20/ERC20Burnable.sol\":1077:1092  _spendAllowance */\n      tag_116\n        /* \"ERC20/ERC20Burnable.sol\":1077:1123  _spendAllowance(account, _msgSender(), amount) */\n      jump\t// in\n    tag_153:\n        /* \"ERC20/ERC20Burnable.sol\":1134:1156  _burn(account, amount) */\n      tag_136\n        /* \"ERC20/ERC20Burnable.sol\":1140:1147  account */\n      dup3\n        /* \"ERC20/ERC20Burnable.sol\":1149:1155  amount */\n      dup3\n        /* \"ERC20/ERC20Burnable.sol\":1134:1139  _burn */\n      tag_141\n        /* \"ERC20/ERC20Burnable.sol\":1134:1156  _burn(account, amount) */\n      jump\t// in\n        /* \"ERC20/TitanToken.sol\":371:432  function pause() public onlyOwner {\r... */\n    tag_75:\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Utils/Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_159:\n        /* \"ERC20/TitanToken.sol\":416:424  _pause() */\n      tag_133\n        /* \"ERC20/TitanToken.sol\":416:422  _pause */\n      tag_163\n        /* \"ERC20/TitanToken.sol\":416:424  _pause() */\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":2423:2527  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_81:\n        /* \"ERC20/ERC20.sol\":2479:2492  string memory */\n      0x60\n        /* \"ERC20/ERC20.sol\":2512:2519  _symbol */\n      0x04\n        /* \"ERC20/ERC20.sol\":2505:2519  return _symbol */\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":6783:7219  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_85:\n        /* \"ERC20/ERC20.sol\":6876:6880  bool */\n      0x00\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20.sol\":6876:6880  bool */\n      dup2\n        /* \"ERC20/ERC20.sol\":6959:6984  allowance(owner, spender) */\n      tag_173\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup3\n        /* \"ERC20/ERC20.sol\":6976:6983  spender */\n      dup7\n        /* \"ERC20/ERC20.sol\":6959:6968  allowance */\n      tag_94\n        /* \"ERC20/ERC20.sol\":6959:6984  allowance(owner, spender) */\n      jump\t// in\n    tag_173:\n        /* \"ERC20/ERC20.sol\":6932:6984  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":7023:7038  subtractedValue */\n      dup4\n        /* \"ERC20/ERC20.sol\":7003:7019  currentAllowance */\n      dup2\n        /* \"ERC20/ERC20.sol\":7003:7038  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"ERC20/ERC20.sol\":6995:7080  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7279:7281   */\n      0x20\n        /* \"ERC20/ERC20.sol\":6995:7080  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7261:7282   */\n      mstore\n        /* \"#utility.yul\":7318:7320   */\n      0x25\n        /* \"#utility.yul\":7298:7316   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7291:7321   */\n      mstore\n        /* \"#utility.yul\":7357:7391   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":7337:7355   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7330:7392   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":7408:7426   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7401:7436   */\n      mstore\n        /* \"#utility.yul\":7453:7472   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":6995:7080  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_130\n        /* \"#utility.yul\":7251:7478   */\n      jump\n        /* \"ERC20/ERC20.sol\":6995:7080  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_174:\n        /* \"ERC20/ERC20.sol\":7116:7176  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_117\n        /* \"ERC20/ERC20.sol\":7125:7130  owner */\n      dup3\n        /* \"ERC20/ERC20.sol\":7132:7139  spender */\n      dup7\n        /* \"ERC20/ERC20.sol\":7160:7175  subtractedValue */\n      dup7\n        /* \"ERC20/ERC20.sol\":7141:7157  currentAllowance */\n      dup5\n        /* \"ERC20/ERC20.sol\":7141:7175  currentAllowance - subtractedValue */\n      sub\n        /* \"ERC20/ERC20.sol\":7116:7124  _approve */\n      tag_111\n        /* \"ERC20/ERC20.sol\":7116:7176  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":3830:4023  function transfer(address to, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_89:\n        /* \"ERC20/ERC20.sol\":3909:3913  bool */\n      0x00\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20.sol\":3965:3993  _transfer(owner, to, amount) */\n      tag_110\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup2\n        /* \"ERC20/ERC20.sol\":3982:3984  to */\n      dup6\n        /* \"ERC20/ERC20.sol\":3986:3992  amount */\n      dup6\n        /* \"ERC20/ERC20.sol\":3965:3974  _transfer */\n      tag_118\n        /* \"ERC20/ERC20.sol\":3965:3993  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":4086:4237  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":4202:4220  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20/ERC20.sol\":4175:4182  uint256 */\n      0x00\n        /* \"ERC20/ERC20.sol\":4202:4220  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20/ERC20.sol\":4202:4213  _allowances */\n      0x01\n        /* \"ERC20/ERC20.sol\":4202:4220  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20/ERC20.sol\":4202:4229  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20/ERC20.sol\":4086:4237  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      jump\t// out\n        /* \"Utils/Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_98:\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Utils/Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_185:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/Ownable.sol\":2061:2083  newOwner != address(0) */\n      dup2\n      and\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3785:3787   */\n      0x20\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3767:3788   */\n      mstore\n        /* \"#utility.yul\":3824:3826   */\n      0x26\n        /* \"#utility.yul\":3804:3822   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3797:3827   */\n      mstore\n        /* \"#utility.yul\":3863:3897   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3843:3861   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3836:3898   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":3914:3932   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3907:3943   */\n      mstore\n        /* \"#utility.yul\":3960:3979   */\n      0x84\n      add\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_130\n        /* \"#utility.yul\":3757:3985   */\n      jump\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_188:\n        /* \"Utils/Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      tag_139\n        /* \"Utils/Ownable.sol\":2156:2164  newOwner */\n      dup2\n        /* \"Utils/Ownable.sol\":2137:2155  _transferOwnership */\n      tag_151\n        /* \"Utils/Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":12141:12266  function _beforeTokenTransfer(\r... */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":10417:10797  function _approve(\r... */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":10553:10572  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20/ERC20.sol\":10545:10613  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6874:6876   */\n      0x20\n        /* \"ERC20/ERC20.sol\":10545:10613  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6856:6877   */\n      mstore\n        /* \"#utility.yul\":6913:6915   */\n      0x24\n        /* \"#utility.yul\":6893:6911   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6886:6916   */\n      mstore\n        /* \"#utility.yul\":6952:6986   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":6932:6950   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6925:6987   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":7003:7021   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6996:7030   */\n      mstore\n        /* \"#utility.yul\":7047:7066   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":10545:10613  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_130\n        /* \"#utility.yul\":6846:7072   */\n      jump\n        /* \"ERC20/ERC20.sol\":10545:10613  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":10632:10653  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20/ERC20.sol\":10624:10692  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4192:4194   */\n      0x20\n        /* \"ERC20/ERC20.sol\":10624:10692  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4174:4195   */\n      mstore\n        /* \"#utility.yul\":4231:4233   */\n      0x22\n        /* \"#utility.yul\":4211:4229   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4204:4234   */\n      mstore\n        /* \"#utility.yul\":4270:4304   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4250:4268   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4243:4305   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4321:4339   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4314:4346   */\n      mstore\n        /* \"#utility.yul\":4363:4382   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":10624:10692  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_130\n        /* \"#utility.yul\":4164:4388   */\n      jump\n        /* \"ERC20/ERC20.sol\":10624:10692  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":10705:10723  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20/ERC20.sol\":10705:10716  _allowances */\n      0x01\n        /* \"ERC20/ERC20.sol\":10705:10723  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20/ERC20.sol\":10705:10732  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20/ERC20.sol\":10705:10741  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20/ERC20.sol\":10757:10789  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":7989:8014   */\n      dup5\n      dup2\n      mstore\n        /* \"ERC20/ERC20.sol\":10757:10789  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":7962:7980   */\n      add\n        /* \"ERC20/ERC20.sol\":10757:10789  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20/ERC20.sol\":10417:10797  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":11088:11541  function _spendAllowance(\r... */\n    tag_116:\n        /* \"ERC20/ERC20.sol\":11223:11247  uint256 currentAllowance */\n      0x00\n        /* \"ERC20/ERC20.sol\":11250:11275  allowance(owner, spender) */\n      tag_203\n        /* \"ERC20/ERC20.sol\":11260:11265  owner */\n      dup5\n        /* \"ERC20/ERC20.sol\":11267:11274  spender */\n      dup5\n        /* \"ERC20/ERC20.sol\":11250:11259  allowance */\n      tag_94\n        /* \"ERC20/ERC20.sol\":11250:11275  allowance(owner, spender) */\n      jump\t// in\n    tag_203:\n        /* \"ERC20/ERC20.sol\":11223:11275  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"ERC20/ERC20.sol\":11290:11306  currentAllowance */\n      dup2\n        /* \"ERC20/ERC20.sol\":11290:11327  currentAllowance != type(uint256).max */\n      eq\n        /* \"ERC20/ERC20.sol\":11286:11534  if (currentAllowance != type(uint256).max) {\r... */\n      tag_208\n      jumpi\n        /* \"ERC20/ERC20.sol\":11372:11378  amount */\n      dup2\n        /* \"ERC20/ERC20.sol\":11352:11368  currentAllowance */\n      dup2\n        /* \"ERC20/ERC20.sol\":11352:11378  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"ERC20/ERC20.sol\":11344:11412  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4595:4597   */\n      0x20\n        /* \"ERC20/ERC20.sol\":11344:11412  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4577:4598   */\n      mstore\n        /* \"#utility.yul\":4634:4636   */\n      0x1d\n        /* \"#utility.yul\":4614:4632   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4607:4637   */\n      mstore\n        /* \"#utility.yul\":4673:4704   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4653:4671   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4646:4705   */\n      mstore\n        /* \"#utility.yul\":4722:4740   */\n      0x64\n      add\n        /* \"ERC20/ERC20.sol\":11344:11412  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_130\n        /* \"#utility.yul\":4567:4746   */\n      jump\n        /* \"ERC20/ERC20.sol\":11344:11412  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_205:\n        /* \"ERC20/ERC20.sol\":11456:11507  _approve(owner, spender, currentAllowance - amount) */\n      tag_208\n        /* \"ERC20/ERC20.sol\":11465:11470  owner */\n      dup5\n        /* \"ERC20/ERC20.sol\":11472:11479  spender */\n      dup5\n        /* \"ERC20/ERC20.sol\":11500:11506  amount */\n      dup5\n        /* \"ERC20/ERC20.sol\":11481:11497  currentAllowance */\n      dup5\n        /* \"ERC20/ERC20.sol\":11481:11506  currentAllowance - amount */\n      sub\n        /* \"ERC20/ERC20.sol\":11456:11464  _approve */\n      tag_111\n        /* \"ERC20/ERC20.sol\":11456:11507  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_208:\n        /* \"ERC20/ERC20.sol\":11212:11541  {\r... */\n      pop\n        /* \"ERC20/ERC20.sol\":11088:11541  function _spendAllowance(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":7698:8369  function _transfer(\r... */\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":7829:7847  from != address(0) */\n      dup4\n      and\n        /* \"ERC20/ERC20.sol\":7821:7889  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6468:6470   */\n      0x20\n        /* \"ERC20/ERC20.sol\":7821:7889  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6450:6471   */\n      mstore\n        /* \"#utility.yul\":6507:6509   */\n      0x25\n        /* \"#utility.yul\":6487:6505   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6480:6510   */\n      mstore\n        /* \"#utility.yul\":6546:6580   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":6526:6544   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6519:6581   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":6597:6615   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6590:6625   */\n      mstore\n        /* \"#utility.yul\":6642:6661   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":7821:7889  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_130\n        /* \"#utility.yul\":6440:6667   */\n      jump\n        /* \"ERC20/ERC20.sol\":7821:7889  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":7908:7924  to != address(0) */\n      dup3\n      and\n        /* \"ERC20/ERC20.sol\":7900:7964  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2629:2631   */\n      0x20\n        /* \"ERC20/ERC20.sol\":7900:7964  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2611:2632   */\n      mstore\n        /* \"#utility.yul\":2668:2670   */\n      0x23\n        /* \"#utility.yul\":2648:2666   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2641:2671   */\n      mstore\n        /* \"#utility.yul\":2707:2741   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2687:2705   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2680:2742   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2758:2776   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2751:2784   */\n      mstore\n        /* \"#utility.yul\":2801:2820   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":7900:7964  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_130\n        /* \"#utility.yul\":2601:2826   */\n      jump\n        /* \"ERC20/ERC20.sol\":7900:7964  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_213:\n        /* \"ERC20/ERC20.sol\":7977:8015  _beforeTokenTransfer(from, to, amount) */\n      tag_216\n        /* \"ERC20/ERC20.sol\":7998:8002  from */\n      dup4\n        /* \"ERC20/ERC20.sol\":8004:8006  to */\n      dup4\n        /* \"ERC20/ERC20.sol\":8008:8014  amount */\n      dup4\n        /* \"ERC20/ERC20.sol\":7977:7997  _beforeTokenTransfer */\n      tag_217\n        /* \"ERC20/ERC20.sol\":7977:8015  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_216:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":8050:8065  _balances[from] */\n      dup4\n      and\n        /* \"ERC20/ERC20.sol\":8028:8047  uint256 fromBalance */\n      0x00\n        /* \"ERC20/ERC20.sol\":8050:8065  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20/ERC20.sol\":8084:8105  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"ERC20/ERC20.sol\":8076:8148  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4953:4955   */\n      0x20\n        /* \"ERC20/ERC20.sol\":8076:8148  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4935:4956   */\n      mstore\n        /* \"#utility.yul\":4992:4994   */\n      0x26\n        /* \"#utility.yul\":4972:4990   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4965:4995   */\n      mstore\n        /* \"#utility.yul\":5031:5065   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5011:5029   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5004:5066   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5082:5100   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5075:5111   */\n      mstore\n        /* \"#utility.yul\":5128:5147   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":8076:8148  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_130\n        /* \"#utility.yul\":4925:5153   */\n      jump\n        /* \"ERC20/ERC20.sol\":8076:8148  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_218:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":8184:8199  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"ERC20/ERC20.sol\":8184:8193  _balances */\n      0x00\n        /* \"ERC20/ERC20.sol\":8184:8199  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC20/ERC20.sol\":8202:8222  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"ERC20/ERC20.sol\":8184:8222  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"ERC20/ERC20.sol\":8244:8257  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20/ERC20.sol\":8244:8267  _balances[to] += amount */\n      dup1\n      sload\n        /* \"ERC20/ERC20.sol\":8216:8222  amount */\n      dup5\n      swap3\n        /* \"ERC20/ERC20.sol\":8184:8193  _balances */\n      swap1\n        /* \"ERC20/ERC20.sol\":8244:8267  _balances[to] += amount */\n      tag_221\n      swap1\n        /* \"ERC20/ERC20.sol\":8216:8222  amount */\n      dup5\n      swap1\n        /* \"ERC20/ERC20.sol\":8244:8267  _balances[to] += amount */\n      tag_125\n      jump\t// in\n    tag_221:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20/ERC20.sol\":8300:8302  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":8285:8311  Transfer(from, to, amount) */\n      and\n        /* \"ERC20/ERC20.sol\":8294:8298  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":8285:8311  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20/ERC20.sol\":8304:8310  amount */\n      dup5\n        /* \"ERC20/ERC20.sol\":8285:8311  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_222\n      swap2\n        /* \"#utility.yul\":7989:8014   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7977:7979   */\n      0x20\n        /* \"#utility.yul\":7962:7980   */\n      add\n      swap1\n        /* \"#utility.yul\":7944:8020   */\n      jump\n        /* \"ERC20/ERC20.sol\":8285:8311  Transfer(from, to, amount) */\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20/ERC20.sol\":8324:8361  _afterTokenTransfer(from, to, amount) */\n      tag_208\n        /* \"ERC20/ERC20.sol\":12141:12266  function _beforeTokenTransfer(\r... */\n      jump\n        /* \"Utils/Pausable.sol\":2189:2309  function _unpause() internal virtual whenPaused {\r... */\n    tag_134:\n        /* \"Utils/Pausable.sol\":1201:1208  _paused */\n      and(0xff, sload(0x05))\n        /* \"Utils/Pausable.sol\":1725:1766  require(paused(), \"Pausable: not paused\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3033:3035   */\n      0x20\n        /* \"Utils/Pausable.sol\":1725:1766  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3015:3036   */\n      mstore\n        /* \"#utility.yul\":3072:3074   */\n      0x14\n        /* \"#utility.yul\":3052:3070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3045:3075   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":3091:3109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3084:3134   */\n      mstore\n        /* \"#utility.yul\":3151:3169   */\n      0x64\n      add\n        /* \"Utils/Pausable.sol\":1725:1766  require(paused(), \"Pausable: not paused\") */\n      tag_130\n        /* \"#utility.yul\":3005:3175   */\n      jump\n        /* \"Utils/Pausable.sol\":1725:1766  require(paused(), \"Pausable: not paused\") */\n    tag_227:\n        /* \"Utils/Pausable.sol\":2248:2255  _paused */\n      0x05\n        /* \"Utils/Pausable.sol\":2248:2263  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"Utils/Pausable.sol\":2279:2301  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Utils/Pausable.sol\":2288:2300  _msgSender() */\n    tag_231:\n        /* \"Utils/Pausable.sol\":2279:2301  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1589:1621   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1571:1622   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1559:1561   */\n      0x20\n        /* \"#utility.yul\":1544:1562   */\n      add\n        /* \"Utils/Pausable.sol\":2279:2301  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Utils/Pausable.sol\":2189:2309  function _unpause() internal virtual whenPaused {\r... */\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":8656:9055  function _mint(address account, uint256 amount) internal virtual {\r... */\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":8740:8761  account != address(0) */\n      dup3\n      and\n        /* \"ERC20/ERC20.sol\":8732:8797  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7685:7687   */\n      0x20\n        /* \"ERC20/ERC20.sol\":8732:8797  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7667:7688   */\n      mstore\n        /* \"#utility.yul\":7724:7726   */\n      0x1f\n        /* \"#utility.yul\":7704:7722   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7697:7727   */\n      mstore\n        /* \"#utility.yul\":7763:7796   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":7743:7761   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7736:7797   */\n      mstore\n        /* \"#utility.yul\":7814:7832   */\n      0x64\n      add\n        /* \"ERC20/ERC20.sol\":8732:8797  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_130\n        /* \"#utility.yul\":7657:7838   */\n      jump\n        /* \"ERC20/ERC20.sol\":8732:8797  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_234:\n        /* \"ERC20/ERC20.sol\":8810:8859  _beforeTokenTransfer(address(0), account, amount) */\n      tag_237\n        /* \"ERC20/ERC20.sol\":8839:8840  0 */\n      0x00\n        /* \"ERC20/ERC20.sol\":8843:8850  account */\n      dup4\n        /* \"ERC20/ERC20.sol\":8852:8858  amount */\n      dup4\n        /* \"ERC20/ERC20.sol\":8810:8830  _beforeTokenTransfer */\n      tag_217\n        /* \"ERC20/ERC20.sol\":8810:8859  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_237:\n        /* \"ERC20/ERC20.sol\":8888:8894  amount */\n      dup1\n        /* \"ERC20/ERC20.sol\":8872:8884  _totalSupply */\n      0x02\n      0x00\n        /* \"ERC20/ERC20.sol\":8872:8894  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_238\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_238:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":8905:8923  _balances[account] */\n      dup3\n      and\n        /* \"ERC20/ERC20.sol\":8905:8914  _balances */\n      0x00\n        /* \"ERC20/ERC20.sol\":8905:8923  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ERC20/ERC20.sol\":8905:8933  _balances[account] += amount */\n      dup1\n      sload\n        /* \"ERC20/ERC20.sol\":8927:8933  amount */\n      dup4\n      swap3\n        /* \"ERC20/ERC20.sol\":8905:8914  _balances */\n      swap1\n        /* \"ERC20/ERC20.sol\":8905:8933  _balances[account] += amount */\n      tag_239\n      swap1\n        /* \"ERC20/ERC20.sol\":8927:8933  amount */\n      dup5\n      swap1\n        /* \"ERC20/ERC20.sol\":8905:8933  _balances[account] += amount */\n      tag_125\n      jump\t// in\n    tag_239:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"ERC20/ERC20.sol\":8949:8986  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":7989:8014   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":8949:8986  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"ERC20/ERC20.sol\":8966:8967  0 */\n      0x00\n      swap1\n        /* \"ERC20/ERC20.sol\":8949:8986  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":7977:7979   */\n      0x20\n        /* \"#utility.yul\":7962:7980   */\n      add\n        /* \"ERC20/ERC20.sol\":8949:8986  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20/TitanToken.sol\":513:598  function mint(address to, uint256 amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":9388:9979  function _burn(address account, uint256 amount) internal virtual {\r... */\n    tag_141:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":9472:9493  account != address(0) */\n      dup3\n      and\n        /* \"ERC20/ERC20.sol\":9464:9531  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6066:6068   */\n      0x20\n        /* \"ERC20/ERC20.sol\":9464:9531  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6048:6069   */\n      mstore\n        /* \"#utility.yul\":6105:6107   */\n      0x21\n        /* \"#utility.yul\":6085:6103   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6078:6108   */\n      mstore\n        /* \"#utility.yul\":6144:6178   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":6124:6142   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6117:6179   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":6195:6213   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6188:6219   */\n      mstore\n        /* \"#utility.yul\":6236:6255   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":9464:9531  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_130\n        /* \"#utility.yul\":6038:6261   */\n      jump\n        /* \"ERC20/ERC20.sol\":9464:9531  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_243:\n        /* \"ERC20/ERC20.sol\":9544:9593  _beforeTokenTransfer(account, address(0), amount) */\n      tag_246\n        /* \"ERC20/ERC20.sol\":9565:9572  account */\n      dup3\n        /* \"ERC20/ERC20.sol\":9582:9583  0 */\n      0x00\n        /* \"ERC20/ERC20.sol\":9586:9592  amount */\n      dup4\n        /* \"ERC20/ERC20.sol\":9544:9564  _beforeTokenTransfer */\n      tag_217\n        /* \"ERC20/ERC20.sol\":9544:9593  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_246:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":9631:9649  _balances[account] */\n      dup3\n      and\n        /* \"ERC20/ERC20.sol\":9606:9628  uint256 accountBalance */\n      0x00\n        /* \"ERC20/ERC20.sol\":9631:9649  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20/ERC20.sol\":9668:9692  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"ERC20/ERC20.sol\":9660:9731  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3382:3384   */\n      0x20\n        /* \"ERC20/ERC20.sol\":9660:9731  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3364:3385   */\n      mstore\n        /* \"#utility.yul\":3421:3423   */\n      0x22\n        /* \"#utility.yul\":3401:3419   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3394:3424   */\n      mstore\n        /* \"#utility.yul\":3460:3494   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":3440:3458   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3433:3495   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":3511:3529   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3504:3536   */\n      mstore\n        /* \"#utility.yul\":3553:3572   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":9660:9731  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_130\n        /* \"#utility.yul\":3354:3578   */\n      jump\n        /* \"ERC20/ERC20.sol\":9660:9731  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":9767:9785  _balances[account] */\n      dup4\n      and\n        /* \"ERC20/ERC20.sol\":9767:9776  _balances */\n      0x00\n        /* \"ERC20/ERC20.sol\":9767:9785  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ERC20/ERC20.sol\":9788:9811  accountBalance - amount */\n      dup4\n      dup4\n      sub\n        /* \"ERC20/ERC20.sol\":9767:9811  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"ERC20/ERC20.sol\":9833:9845  _totalSupply */\n      0x02\n        /* \"ERC20/ERC20.sol\":9833:9855  _totalSupply -= amount */\n      dup1\n      sload\n        /* \"ERC20/ERC20.sol\":9805:9811  amount */\n      dup5\n      swap3\n        /* \"ERC20/ERC20.sol\":9767:9776  _balances */\n      swap1\n        /* \"ERC20/ERC20.sol\":9833:9855  _totalSupply -= amount */\n      tag_250\n      swap1\n        /* \"ERC20/ERC20.sol\":9805:9811  amount */\n      dup5\n      swap1\n        /* \"ERC20/ERC20.sol\":9833:9855  _totalSupply -= amount */\n      tag_251\n      jump\t// in\n    tag_250:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"ERC20/ERC20.sol\":9873:9910  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":7989:8014   */\n      dup3\n      dup2\n      mstore\n        /* \"ERC20/ERC20.sol\":9899:9900  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":9873:9910  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":7977:7979   */\n      0x20\n        /* \"#utility.yul\":7962:7980   */\n      add\n        /* \"ERC20/ERC20.sol\":9873:9910  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20/ERC20.sol\":12141:12266  function _beforeTokenTransfer(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_151:\n        /* \"Utils/Ownable.sol\":2426:2432  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n      dup4\n      dup2\n      and\n        /* \"Utils/Ownable.sol\":2426:2432  _owner */\n      0x0100\n        /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      dup6\n      and\n      or\n      swap1\n      swap5\n      sstore\n        /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"Utils/Ownable.sol\":2426:2432  _owner */\n      swap4\n      swap1\n      swap3\n      div\n      and\n      swap2\n      dup3\n      swap1\n        /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Utils/Ownable.sol\":2407:2423  address oldOwner */\n      0x00\n      swap1\n        /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"Utils/Ownable.sol\":2396:2524  {\r... */\n      pop\n        /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      jump\t// out\n        /* \"Utils/Pausable.sol\":1930:2048  function _pause() internal virtual whenNotPaused {\r... */\n    tag_163:\n        /* \"Utils/Pausable.sol\":1201:1208  _paused */\n      and(0xff, sload(0x05))\n        /* \"Utils/Pausable.sol\":1455:1464  !paused() */\n      iszero\n        /* \"Utils/Pausable.sol\":1447:1485  require(!paused(), \"Pausable: paused\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5360:5362   */\n      0x20\n        /* \"Utils/Pausable.sol\":1447:1485  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5342:5363   */\n      mstore\n        /* \"#utility.yul\":5399:5401   */\n      0x10\n        /* \"#utility.yul\":5379:5397   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5372:5402   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":5418:5436   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5411:5457   */\n      mstore\n        /* \"#utility.yul\":5474:5492   */\n      0x64\n      add\n        /* \"Utils/Pausable.sol\":1447:1485  require(!paused(), \"Pausable: paused\") */\n      tag_130\n        /* \"#utility.yul\":5332:5498   */\n      jump\n        /* \"Utils/Pausable.sol\":1447:1485  require(!paused(), \"Pausable: paused\") */\n    tag_257:\n        /* \"Utils/Pausable.sol\":1990:1997  _paused */\n      0x05\n        /* \"Utils/Pausable.sol\":1990:2004  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Utils/Pausable.sol\":2000:2004  true */\n      0x01\n        /* \"Utils/Pausable.sol\":1990:2004  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"Utils/Pausable.sol\":2020:2040  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"Utils/Pausable.sol\":2027:2039  _msgSender() */\n      tag_231\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n      swap1\n        /* \"Utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\n      jump\n        /* \"ERC20/TitanToken.sol\":606:805  function _beforeTokenTransfer(address from, address to, uint256 amount)\r... */\n    tag_217:\n        /* \"Utils/Pausable.sol\":1201:1208  _paused */\n      and(0xff, sload(0x05))\n        /* \"Utils/Pausable.sol\":1455:1464  !paused() */\n      iszero\n        /* \"Utils/Pausable.sol\":1447:1485  require(!paused(), \"Pausable: paused\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5360:5362   */\n      0x20\n        /* \"Utils/Pausable.sol\":1447:1485  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5342:5363   */\n      mstore\n        /* \"#utility.yul\":5399:5401   */\n      0x10\n        /* \"#utility.yul\":5379:5397   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5372:5402   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":5418:5436   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5411:5457   */\n      mstore\n        /* \"#utility.yul\":5474:5492   */\n      0x64\n      add\n        /* \"Utils/Pausable.sol\":1447:1485  require(!paused(), \"Pausable: paused\") */\n      tag_130\n        /* \"#utility.yul\":5332:5498   */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_271:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_273:\n        /* \"#utility.yul\":63:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_66:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_275:\n        /* \"#utility.yul\":343:372   */\n      tag_276\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_271\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":262:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_93:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:482   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:482   */\n    tag_278:\n        /* \"#utility.yul\":551:580   */\n      tag_279\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_271\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_280\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_271\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":470:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_42:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:764   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:764   */\n    tag_282:\n        /* \"#utility.yul\":833:862   */\n      tag_283\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_271\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_284\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_271\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":752:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_32:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1080   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1080   */\n    tag_286:\n        /* \"#utility.yul\":1149:1178   */\n      tag_287\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_271\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1068:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1240:1420   */\n    tag_59:\n        /* \"#utility.yul\":1299:1305   */\n      0x00\n        /* \"#utility.yul\":1352:1354   */\n      0x20\n        /* \"#utility.yul\":1340:1349   */\n      dup3\n        /* \"#utility.yul\":1331:1338   */\n      dup5\n        /* \"#utility.yul\":1327:1350   */\n      sub\n        /* \"#utility.yul\":1323:1355   */\n      slt\n        /* \"#utility.yul\":1320:1322   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":1368:1369   */\n      0x00\n        /* \"#utility.yul\":1365:1366   */\n      dup1\n        /* \"#utility.yul\":1358:1370   */\n      revert\n        /* \"#utility.yul\":1320:1322   */\n    tag_289:\n      pop\n        /* \"#utility.yul\":1391:1414   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1310:1420   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1825:2422   */\n    tag_29:\n        /* \"#utility.yul\":1937:1941   */\n      0x00\n        /* \"#utility.yul\":1966:1968   */\n      0x20\n        /* \"#utility.yul\":1995:1997   */\n      dup1\n        /* \"#utility.yul\":1984:1993   */\n      dup4\n        /* \"#utility.yul\":1977:1998   */\n      mstore\n        /* \"#utility.yul\":2027:2033   */\n      dup4\n        /* \"#utility.yul\":2021:2034   */\n      mload\n        /* \"#utility.yul\":2070:2076   */\n      dup1\n        /* \"#utility.yul\":2065:2067   */\n      dup3\n        /* \"#utility.yul\":2054:2063   */\n      dup6\n        /* \"#utility.yul\":2050:2068   */\n      add\n        /* \"#utility.yul\":2043:2077   */\n      mstore\n        /* \"#utility.yul\":2095:2096   */\n      0x00\n        /* \"#utility.yul\":2105:2245   */\n    tag_293:\n        /* \"#utility.yul\":2119:2125   */\n      dup2\n        /* \"#utility.yul\":2116:2117   */\n      dup2\n        /* \"#utility.yul\":2113:2126   */\n      lt\n        /* \"#utility.yul\":2105:2245   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":2214:2228   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":2210:2233   */\n      dup4\n      add\n        /* \"#utility.yul\":2204:2234   */\n      mload\n        /* \"#utility.yul\":2180:2197   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":2199:2201   */\n      0x40\n        /* \"#utility.yul\":2176:2202   */\n      add\n        /* \"#utility.yul\":2169:2235   */\n      mstore\n        /* \"#utility.yul\":2134:2144   */\n      dup3\n      add\n        /* \"#utility.yul\":2105:2245   */\n      jump(tag_293)\n    tag_295:\n        /* \"#utility.yul\":2263:2269   */\n      dup2\n        /* \"#utility.yul\":2260:2261   */\n      dup2\n        /* \"#utility.yul\":2257:2270   */\n      gt\n        /* \"#utility.yul\":2254:2256   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":2333:2334   */\n      0x00\n        /* \"#utility.yul\":2328:2330   */\n      0x40\n        /* \"#utility.yul\":2319:2325   */\n      dup4\n        /* \"#utility.yul\":2308:2317   */\n      dup8\n        /* \"#utility.yul\":2304:2326   */\n      add\n        /* \"#utility.yul\":2300:2331   */\n      add\n        /* \"#utility.yul\":2293:2335   */\n      mstore\n        /* \"#utility.yul\":2254:2256   */\n    tag_296:\n      pop\n        /* \"#utility.yul\":2406:2408   */\n      0x1f\n        /* \"#utility.yul\":2385:2400   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2381:2410   */\n      and\n        /* \"#utility.yul\":2366:2411   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2413:2415   */\n      0x40\n        /* \"#utility.yul\":2362:2416   */\n      add\n      swap4\n        /* \"#utility.yul\":1946:2422   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5503:5859   */\n    tag_131:\n        /* \"#utility.yul\":5705:5707   */\n      0x20\n        /* \"#utility.yul\":5687:5708   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5724:5742   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":5717:5747   */\n      mstore\n        /* \"#utility.yul\":5783:5817   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5778:5780   */\n      0x40\n        /* \"#utility.yul\":5763:5781   */\n      dup3\n      add\n        /* \"#utility.yul\":5756:5818   */\n      mstore\n        /* \"#utility.yul\":5850:5852   */\n      0x60\n        /* \"#utility.yul\":5835:5853   */\n      add\n      swap1\n        /* \"#utility.yul\":5677:5859   */\n      jump\t// out\n        /* \"#utility.yul\":8025:8153   */\n    tag_125:\n        /* \"#utility.yul\":8065:8068   */\n      0x00\n        /* \"#utility.yul\":8096:8097   */\n      dup3\n        /* \"#utility.yul\":8092:8098   */\n      not\n        /* \"#utility.yul\":8089:8090   */\n      dup3\n        /* \"#utility.yul\":8086:8099   */\n      gt\n        /* \"#utility.yul\":8083:8085   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":8102:8120   */\n      tag_314\n      tag_315\n      jump\t// in\n    tag_314:\n      pop\n        /* \"#utility.yul\":8138:8147   */\n      add\n      swap1\n        /* \"#utility.yul\":8073:8153   */\n      jump\t// out\n        /* \"#utility.yul\":8158:8283   */\n    tag_251:\n        /* \"#utility.yul\":8198:8202   */\n      0x00\n        /* \"#utility.yul\":8226:8227   */\n      dup3\n        /* \"#utility.yul\":8223:8224   */\n      dup3\n        /* \"#utility.yul\":8220:8228   */\n      lt\n        /* \"#utility.yul\":8217:8219   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":8231:8249   */\n      tag_318\n      tag_315\n      jump\t// in\n    tag_318:\n      pop\n        /* \"#utility.yul\":8268:8277   */\n      sub\n      swap1\n        /* \"#utility.yul\":8207:8283   */\n      jump\t// out\n        /* \"#utility.yul\":8288:8668   */\n    tag_102:\n        /* \"#utility.yul\":8367:8368   */\n      0x01\n        /* \"#utility.yul\":8363:8375   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8410:8422   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8431:8433   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":8485:8489   */\n      0x7f\n        /* \"#utility.yul\":8477:8483   */\n      dup3\n        /* \"#utility.yul\":8473:8490   */\n      and\n        /* \"#utility.yul\":8463:8490   */\n      swap2\n      pop\n        /* \"#utility.yul\":8431:8433   */\n    tag_320:\n        /* \"#utility.yul\":8538:8540   */\n      0x20\n        /* \"#utility.yul\":8530:8536   */\n      dup3\n        /* \"#utility.yul\":8527:8541   */\n      lt\n        /* \"#utility.yul\":8507:8525   */\n      dup2\n        /* \"#utility.yul\":8504:8542   */\n      eq\n        /* \"#utility.yul\":8501:8503   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":8584:8594   */\n      0x4e487b71\n        /* \"#utility.yul\":8579:8582   */\n      0xe0\n        /* \"#utility.yul\":8575:8595   */\n      shl\n        /* \"#utility.yul\":8572:8573   */\n      0x00\n        /* \"#utility.yul\":8565:8596   */\n      mstore\n        /* \"#utility.yul\":8619:8623   */\n      0x22\n        /* \"#utility.yul\":8616:8617   */\n      0x04\n        /* \"#utility.yul\":8609:8624   */\n      mstore\n        /* \"#utility.yul\":8647:8651   */\n      0x24\n        /* \"#utility.yul\":8644:8645   */\n      0x00\n        /* \"#utility.yul\":8637:8652   */\n      revert\n        /* \"#utility.yul\":8501:8503   */\n    tag_321:\n      pop\n        /* \"#utility.yul\":8343:8668   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8673:8800   */\n    tag_315:\n        /* \"#utility.yul\":8734:8744   */\n      0x4e487b71\n        /* \"#utility.yul\":8729:8732   */\n      0xe0\n        /* \"#utility.yul\":8725:8745   */\n      shl\n        /* \"#utility.yul\":8722:8723   */\n      0x00\n        /* \"#utility.yul\":8715:8746   */\n      mstore\n        /* \"#utility.yul\":8765:8769   */\n      0x11\n        /* \"#utility.yul\":8762:8763   */\n      0x04\n        /* \"#utility.yul\":8755:8770   */\n      mstore\n        /* \"#utility.yul\":8789:8793   */\n      0x24\n        /* \"#utility.yul\":8786:8787   */\n      0x00\n        /* \"#utility.yul\":8779:8794   */\n      revert\n\n    auxdata: 0xa264697066735822122054385bf6dd49fe0ef092753c768753e9de904e307e7b7692279c63693bc03c5764736f6c63430008050033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_765": {
									"entryPoint": null,
									"id": 765,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_864": {
									"entryPoint": null,
									"id": 864,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_972": {
									"entryPoint": null,
									"id": 972,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_584": {
									"entryPoint": null,
									"id": 584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_573": {
									"entryPoint": null,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_817": {
									"entryPoint": 528,
									"id": 817,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_402": {
									"entryPoint": 281,
									"id": 402,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_830": {
									"entryPoint": null,
									"id": 830,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_944": {
									"entryPoint": 191,
									"id": 944,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_981": {
									"entryPoint": null,
									"id": 981,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1193,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3095:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:166:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:8"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:18:8",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:46:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:46:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "322:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:8",
														"type": ""
													}
												],
												"src": "14:340:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "533:181:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "550:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "561:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "543:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "543:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "543:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "584:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "595:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "580:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "580:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "600:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "573:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "573:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "623:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "634:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "619:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "619:18:8"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "639:33:8",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "612:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "612:61:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "612:61:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "682:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "694:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "705:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "690:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "682:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "510:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "524:4:8",
														"type": ""
													}
												],
												"src": "359:355:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "820:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "830:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "842:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "853:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "838:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "838:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "830:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "872:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "883:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "865:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "865:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "865:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "789:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "800:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "811:4:8",
														"type": ""
													}
												],
												"src": "719:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:80:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "976:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "978:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "978:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "978:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "965:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "972:1:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "968:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "968:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "962:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:13:8"
															},
															"nodeType": "YulIf",
															"src": "959:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1007:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1018:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1021:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1014:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1014:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1007:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "932:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "935:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "941:3:8",
														"type": ""
													}
												],
												"src": "901:128:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1098:358:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1108:16:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1123:1:8",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "1112:7:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1133:16:8",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "1142:7:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1133:5:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1158:13:8",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "1166:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1222:228:8",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1267:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "1269:16:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1269:18:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1269:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1242:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1256:1:8",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1252:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1252:6:8"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "1260:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "1248:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1248:17:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "1239:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1239:27:8"
																		},
																		"nodeType": "YulIf",
																		"src": "1236:2:8"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1328:29:8",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1330:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "1343:5:8"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "1350:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "1339:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1339:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "1330:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1309:8:8"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "1319:7:8"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1305:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1305:22:8"
																		},
																		"nodeType": "YulIf",
																		"src": "1302:2:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1370:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1382:4:8"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1388:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "1378:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1378:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "1370:4:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1406:34:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "1422:7:8"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1431:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "1418:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1418:22:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "1406:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1191:8:8"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1201:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1188:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1188:21:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1210:3:8",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1184:3:8",
																"statements": []
															},
															"src": "1180:270:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "1062:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1069:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1082:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1089:4:8",
														"type": ""
													}
												],
												"src": "1034:422:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:61:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1541:45:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1571:4:8"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1577:8:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "1550:20:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1550:36:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1541:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1502:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1508:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1521:5:8",
														"type": ""
													}
												],
												"src": "1461:131:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1656:747:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1694:52:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1708:10:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1717:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1708:5:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1731:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1676:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1669:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1669:16:8"
															},
															"nodeType": "YulIf",
															"src": "1666:2:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1779:52:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1793:10:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1802:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1793:5:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1816:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1765:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1758:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:12:8"
															},
															"nodeType": "YulIf",
															"src": "1755:2:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1867:52:8",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "1881:10:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1890:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "1881:5:8"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1904:5:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1860:59:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1865:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1935:123:8",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "1970:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "1972:16:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1972:18:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "1972:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "1955:8:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1965:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "1952:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1952:17:8"
																				},
																				"nodeType": "YulIf",
																				"src": "1949:2:8"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "2005:25:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "2018:8:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2028:1:8",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2014:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2014:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "2005:5:8"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "2043:5:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1928:130:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1933:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "1847:4:8"
															},
															"nodeType": "YulSwitch",
															"src": "1840:218:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2156:70:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2170:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "2183:4:8"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "2189:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "2179:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2179:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "2170:5:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "2211:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "2080:4:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2086:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2077:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2077:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "2094:8:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2104:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2091:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2091:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2073:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2073:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "2117:4:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2123:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2114:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2114:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "2132:8:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2142:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2129:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2129:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2110:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2110:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2070:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2070:77:8"
															},
															"nodeType": "YulIf",
															"src": "2067:2:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2235:57:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "2277:4:8"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "2283:8:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "2258:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2258:34:8"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "2239:7:8",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "2248:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2337:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2339:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2339:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2339:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "2307:7:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2324:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2320:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2320:6:8"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "2328:6:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "2316:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2316:19:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2304:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2304:32:8"
															},
															"nodeType": "YulIf",
															"src": "2301:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2368:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "2381:7:8"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "2390:6:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2377:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:20:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "2368:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1627:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1633:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1646:5:8",
														"type": ""
													}
												],
												"src": "1597:806:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2519:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2521:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2521:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2521:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2491:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2484:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2484:9:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2477:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2477:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2499:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2510:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2506:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2506:6:8"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2514:1:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2502:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2502:14:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2496:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2496:21:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2473:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2473:45:8"
															},
															"nodeType": "YulIf",
															"src": "2470:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2550:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2565:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2568:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2561:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2561:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2550:7:8"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2439:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2442:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2448:7:8",
														"type": ""
													}
												],
												"src": "2408:168:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2636:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2646:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2660:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2663:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2656:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2656:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2646:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2677:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2707:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2713:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2703:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2703:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2681:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2754:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2756:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2770:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2778:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2766:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2766:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2756:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2734:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2727:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2727:26:8"
															},
															"nodeType": "YulIf",
															"src": "2724:2:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2844:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2865:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2872:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2877:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2868:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2868:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2858:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2858:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2858:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2909:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2912:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2902:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2902:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2902:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2937:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2940:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2930:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2930:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2930:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2800:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2823:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2831:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2820:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2820:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2797:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2797:38:8"
															},
															"nodeType": "YulIf",
															"src": "2794:2:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2616:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2625:6:8",
														"type": ""
													}
												],
												"src": "2581:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2998:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3015:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3022:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3027:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3018:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3018:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3008:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3008:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3008:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3055:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3058:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3048:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3048:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3048:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3079:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3082:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3072:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3072:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3072:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2966:127:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604080518082018252600a8152692a34ba30b72a37b5b2b760b11b6020808301918252835180850190945260058452642a34ba30b760d91b908401528151919291620000619160039162000275565b5080516200007790600490602084019062000275565b50506005805460ff19169055506200008f33620000bf565b620000b933620000a26012600a6200037f565b620000b39064174876e8006200044a565b62000119565b620004bf565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001755760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b620001836000838362000210565b80600260008282546200019791906200031b565b90915550506001600160a01b03821660009081526020819052604081208054839290620001c69084906200031b565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60055460ff1615620002585760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016200016c565b620002708383836200027060201b620005eb1760201c565b505050565b82805462000283906200046c565b90600052602060002090601f016020900481019282620002a75760008555620002f2565b82601f10620002c257805160ff1916838001178555620002f2565b82800160010185558215620002f2579182015b82811115620002f2578251825591602001919060010190620002d5565b506200030092915062000304565b5090565b5b8082111562000300576000815560010162000305565b60008219821115620003315762000331620004a9565b500190565b600181815b80851115620003775781600019048211156200035b576200035b620004a9565b808516156200036957918102915b93841c93908002906200033b565b509250929050565b60006200038d838362000394565b9392505050565b600082620003a55750600162000444565b81620003b45750600062000444565b8160018114620003cd5760028114620003d857620003f8565b600191505062000444565b60ff841115620003ec57620003ec620004a9565b50506001821b62000444565b5060208310610133831016604e8410600b84101617156200041d575081810a62000444565b62000429838362000336565b8060001904821115620004405762000440620004a9565b0290505b92915050565b6000816000190483118215151615620004675762000467620004a9565b500290565b600181811c908216806200048157607f821691505b60208210811415620004a357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b610f8a80620004cf6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad57806395d89b411161007157806395d89b4114610261578063a457c2d714610269578063a9059cbb1461027c578063dd62ed3e1461028f578063f2fde38b146102a257600080fd5b806370a08231146101ec578063715018a61461021557806379cc67901461021d5780638456cb59146102305780638da5cb5b1461023857600080fd5b806339509351116100f4578063395093511461019e5780633f4ba83a146101b157806340c10f19146101bb57806342966c68146101ce5780635c975abb146101e157600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017257806323b872dd14610184578063313ce56714610197575b600080fd5b6101396102b5565b6040516101469190610e4a565b60405180910390f35b61016261015d366004610e07565b610347565b6040519015158152602001610146565b6002545b604051908152602001610146565b610162610192366004610dcb565b61035f565b6012610176565b6101626101ac366004610e07565b610383565b6101b96103a5565b005b6101b96101c9366004610e07565b6103e8565b6101b96101dc366004610e31565b6103f6565b60055460ff16610162565b6101766101fa366004610d76565b6001600160a01b031660009081526020819052604090205490565b6101b9610403565b6101b961022b366004610e07565b61043d565b6101b9610452565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610146565b61013961048a565b610162610277366004610e07565b610499565b61016261028a366004610e07565b610514565b61017661029d366004610d98565b610522565b6101b96102b0366004610d76565b61054d565b6060600380546102c490610f03565b80601f01602080910402602001604051908101604052809291908181526020018280546102f090610f03565b801561033d5780601f106103125761010080835404028352916020019161033d565b820191906000526020600020905b81548152906001019060200180831161032057829003601f168201915b5050505050905090565b6000336103558185856105f0565b5060019392505050565b60003361036d858285610714565b61037885858561078e565b506001949350505050565b6000336103558185856103968383610522565b6103a09190610ed4565b6105f0565b6005546001600160a01b036101009091041633146103de5760405162461bcd60e51b81526004016103d590610e9f565b60405180910390fd5b6103e6610967565b565b6103f282826109fa565b5050565b6104003382610ae5565b50565b6005546001600160a01b036101009091041633146104335760405162461bcd60e51b81526004016103d590610e9f565b6103e66000610c3f565b610448823383610714565b6103f28282610ae5565b6005546001600160a01b036101009091041633146104825760405162461bcd60e51b81526004016103d590610e9f565b6103e6610c99565b6060600480546102c490610f03565b600033816104a78286610522565b9050838110156105075760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103d5565b61037882868684036105f0565b60003361035581858561078e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b0361010090910416331461057d5760405162461bcd60e51b81526004016103d590610e9f565b6001600160a01b0381166105e25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103d5565b61040081610c3f565b505050565b6001600160a01b0383166106525760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d5565b6001600160a01b0382166106b35760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d5565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006107208484610522565b90506000198114610788578181101561077b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103d5565b61078884848484036105f0565b50505050565b6001600160a01b0383166107f25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d5565b6001600160a01b0382166108545760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d5565b61085f838383610d14565b6001600160a01b038316600090815260208190526040902054818110156108d75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103d5565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061090e908490610ed4565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161095a91815260200190565b60405180910390a3610788565b60055460ff166109b05760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016103d5565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610a505760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103d5565b610a5c60008383610d14565b8060026000828254610a6e9190610ed4565b90915550506001600160a01b03821660009081526020819052604081208054839290610a9b908490610ed4565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610b455760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103d5565b610b5182600083610d14565b6001600160a01b03821660009081526020819052604090205481811015610bc55760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103d5565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610bf4908490610eec565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60055460ff1615610cdf5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016103d5565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586109dd3390565b60055460ff16156105eb5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016103d5565b80356001600160a01b0381168114610d7157600080fd5b919050565b600060208284031215610d8857600080fd5b610d9182610d5a565b9392505050565b60008060408385031215610dab57600080fd5b610db483610d5a565b9150610dc260208401610d5a565b90509250929050565b600080600060608486031215610de057600080fd5b610de984610d5a565b9250610df760208501610d5a565b9150604084013590509250925092565b60008060408385031215610e1a57600080fd5b610e2383610d5a565b946020939093013593505050565b600060208284031215610e4357600080fd5b5035919050565b600060208083528351808285015260005b81811015610e7757858101830151858201604001528201610e5b565b81811115610e89576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610ee757610ee7610f3e565b500190565b600082821015610efe57610efe610f3e565b500390565b600181811c90821680610f1757607f821691505b60208210811415610f3857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea264697066735822122054385bf6dd49fe0ef092753c768753e9de904e307e7b7692279c63693bc03c5764736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x2A34BA30B72A37B5B2B7 PUSH1 0xB1 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x2A34BA30B7 PUSH1 0xD9 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x61 SWAP2 PUSH1 0x3 SWAP2 PUSH3 0x275 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x77 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x275 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH3 0x8F CALLER PUSH3 0xBF JUMP JUMPDEST PUSH3 0xB9 CALLER PUSH3 0xA2 PUSH1 0x12 PUSH1 0xA PUSH3 0x37F JUMP JUMPDEST PUSH3 0xB3 SWAP1 PUSH5 0x174876E800 PUSH3 0x44A JUMP JUMPDEST PUSH3 0x119 JUMP JUMPDEST PUSH3 0x4BF JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x175 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x183 PUSH1 0x0 DUP4 DUP4 PUSH3 0x210 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x197 SWAP2 SWAP1 PUSH3 0x31B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x1C6 SWAP1 DUP5 SWAP1 PUSH3 0x31B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x258 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x16C JUMP JUMPDEST PUSH3 0x270 DUP4 DUP4 DUP4 PUSH3 0x270 PUSH1 0x20 SHL PUSH3 0x5EB OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x283 SWAP1 PUSH3 0x46C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x2A7 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2F2 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x2C2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2F2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2F2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2F2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2D5 JUMP JUMPDEST POP PUSH3 0x300 SWAP3 SWAP2 POP PUSH3 0x304 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x300 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x305 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x331 JUMPI PUSH3 0x331 PUSH3 0x4A9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x377 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x35B JUMPI PUSH3 0x35B PUSH3 0x4A9 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x369 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x33B JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x38D DUP4 DUP4 PUSH3 0x394 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x3A5 JUMPI POP PUSH1 0x1 PUSH3 0x444 JUMP JUMPDEST DUP2 PUSH3 0x3B4 JUMPI POP PUSH1 0x0 PUSH3 0x444 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x3CD JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x3D8 JUMPI PUSH3 0x3F8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x444 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x3EC JUMPI PUSH3 0x3EC PUSH3 0x4A9 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x444 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x41D JUMPI POP DUP2 DUP2 EXP PUSH3 0x444 JUMP JUMPDEST PUSH3 0x429 DUP4 DUP4 PUSH3 0x336 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x440 JUMPI PUSH3 0x440 PUSH3 0x4A9 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x467 JUMPI PUSH3 0x467 PUSH3 0x4A9 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x481 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x4A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xF8A DUP1 PUSH3 0x4CF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0xDCB JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST PUSH1 0x12 PUSH2 0x176 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x383 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x3A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0xE31 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x162 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x403 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x452 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x48A JUMP JUMPDEST PUSH2 0x162 PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x514 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0xD98 JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xD76 JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2C4 SWAP1 PUSH2 0xF03 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F0 SWAP1 PUSH2 0xF03 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x33D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x312 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x33D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x320 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x355 DUP2 DUP6 DUP6 PUSH2 0x5F0 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x36D DUP6 DUP3 DUP6 PUSH2 0x714 JUMP JUMPDEST PUSH2 0x378 DUP6 DUP6 DUP6 PUSH2 0x78E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x355 DUP2 DUP6 DUP6 PUSH2 0x396 DUP4 DUP4 PUSH2 0x522 JUMP JUMPDEST PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0xED4 JUMP JUMPDEST PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x3DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E6 PUSH2 0x967 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3F2 DUP3 DUP3 PUSH2 0x9FA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x400 CALLER DUP3 PUSH2 0xAE5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x433 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xE9F JUMP JUMPDEST PUSH2 0x3E6 PUSH1 0x0 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0x448 DUP3 CALLER DUP4 PUSH2 0x714 JUMP JUMPDEST PUSH2 0x3F2 DUP3 DUP3 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x482 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xE9F JUMP JUMPDEST PUSH2 0x3E6 PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2C4 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x4A7 DUP3 DUP7 PUSH2 0x522 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x507 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x378 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x355 DUP2 DUP6 DUP6 PUSH2 0x78E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x400 DUP2 PUSH2 0xC3F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x652 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x720 DUP5 DUP5 PUSH2 0x522 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x788 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x77B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x788 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5F0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x854 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x85F DUP4 DUP4 DUP4 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x90E SWAP1 DUP5 SWAP1 PUSH2 0xED4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x95A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x788 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0xA5C PUSH1 0x0 DUP4 DUP4 PUSH2 0xD14 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA6E SWAP2 SWAP1 PUSH2 0xED4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA9B SWAP1 DUP5 SWAP1 PUSH2 0xED4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0xB51 DUP3 PUSH1 0x0 DUP4 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xBC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xBF4 SWAP1 DUP5 SWAP1 PUSH2 0xEEC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x9DD CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD91 DUP3 PUSH2 0xD5A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB4 DUP4 PUSH2 0xD5A JUMP JUMPDEST SWAP2 POP PUSH2 0xDC2 PUSH1 0x20 DUP5 ADD PUSH2 0xD5A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE9 DUP5 PUSH2 0xD5A JUMP JUMPDEST SWAP3 POP PUSH2 0xDF7 PUSH1 0x20 DUP6 ADD PUSH2 0xD5A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE23 DUP4 PUSH2 0xD5A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE77 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xE5B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xE89 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xEE7 JUMPI PUSH2 0xEE7 PUSH2 0xF3E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xEFE JUMPI PUSH2 0xEFE PUSH2 0xF3E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF17 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF38 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD CODESIZE JUMPDEST 0xF6 0xDD 0x49 INVALID 0xE CREATE SWAP3 PUSH22 0x3C768753E9DE904E307E7B7692279C63693BC03C5764 PUSH20 0x6F6C634300080500330000000000000000000000 ",
							"sourceMap": "181:627:4:-:0;;;251:112;;;;;;;;;-1:-1:-1;2018:116:0;;;;;;;;;;;-1:-1:-1;;;2018:116:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2018:116:0;;;;2085:13;;2018:116;;;2085:13;;:5;;:13;:::i;:::-;-1:-1:-1;2109:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;1007:7:7;:15;;-1:-1:-1;;1007:15:7;;;-1:-1:-1;942:32:6;736:10:5;942:18:6;:32::i;:::-;305:50:4::1;311:10;338:16;3251:2:0::0;338::4::1;:16;:::i;:::-;323:31;::::0;:12:::1;:31;:::i;:::-;305:5;:50::i;:::-;181:627:::0;;2333:191:6;2426:6;;;-1:-1:-1;;;;;2443:17:6;;;2426:6;2443:17;;;-1:-1:-1;;;;;;2443:17:6;;;;;;2476:40;;2426:6;;;;;;;;2476:40;;2407:16;;2476:40;2396:128;2333:191;:::o;8656:399:0:-;-1:-1:-1;;;;;8740:21:0;;8732:65;;;;-1:-1:-1;;;8732:65:0;;561:2:8;8732:65:0;;;543:21:8;600:2;580:18;;;573:30;639:33;619:18;;;612:61;690:18;;8732:65:0;;;;;;;;;8810:49;8839:1;8843:7;8852:6;8810:20;:49::i;:::-;8888:6;8872:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8905:18:0;;:9;:18;;;;;;;;;;:28;;8927:6;;8905:9;:28;;8927:6;;8905:28;:::i;:::-;;;;-1:-1:-1;;8949:37:0;;865:25:8;;;-1:-1:-1;;;;;8949:37:0;;;8966:1;;8949:37;;853:2:8;838:18;8949:37:0;;;;;;;8656:399;;:::o;606:199:4:-;1201:7:7;;;;1455:9;1447:38;;;;-1:-1:-1;;;1447:38:7;;216:2:8;1447:38:7;;;198:21:8;255:2;235:18;;;228:30;-1:-1:-1;;;274:18:8;;;267:46;330:18;;1447:38:7;188:166:8;1447:38:7;753:44:4::1;780:4;786:2;790:6;753:26;;;;;:44;;:::i;:::-;606:199:::0;;;:::o;181:627::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;181:627:4;;;-1:-1:-1;181:627:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;901:128:8;941:3;972:1;968:6;965:1;962:13;959:2;;;978:18;;:::i;:::-;-1:-1:-1;1014:9:8;;949:80::o;1034:422::-;1123:1;1166:5;1123:1;1180:270;1201:7;1191:8;1188:21;1180:270;;;1260:4;1256:1;1252:6;1248:17;1242:4;1239:27;1236:2;;;1269:18;;:::i;:::-;1319:7;1309:8;1305:22;1302:2;;;1339:16;;;;1302:2;1418:22;;;;1378:15;;;;1180:270;;;1184:3;1098:358;;;;;:::o;1461:131::-;1521:5;1550:36;1577:8;1571:4;1550:36;:::i;:::-;1541:45;1531:61;-1:-1:-1;;;1531:61:8:o;1597:806::-;1646:5;1676:8;1666:2;;-1:-1:-1;1717:1:8;1731:5;;1666:2;1765:4;1755:2;;-1:-1:-1;1802:1:8;1816:5;;1755:2;1847:4;1865:1;1860:59;;;;1933:1;1928:130;;;;1840:218;;1860:59;1890:1;1881:10;;1904:5;;;1928:130;1965:3;1955:8;1952:17;1949:2;;;1972:18;;:::i;:::-;-1:-1:-1;;2028:1:8;2014:16;;2043:5;;1840:218;;2142:2;2132:8;2129:16;2123:3;2117:4;2114:13;2110:36;2104:2;2094:8;2091:16;2086:2;2080:4;2077:12;2073:35;2070:77;2067:2;;;-1:-1:-1;2179:19:8;;;2211:5;;2067:2;2258:34;2283:8;2277:4;2258:34;:::i;:::-;2328:6;2324:1;2320:6;2316:19;2307:7;2304:32;2301:2;;;2339:18;;:::i;:::-;2377:20;;-1:-1:-1;1656:747:8;;;;;:::o;2408:168::-;2448:7;2514:1;2510;2506:6;2502:14;2499:1;2496:21;2491:1;2484:9;2477:17;2473:45;2470:2;;;2521:18;;:::i;:::-;-1:-1:-1;2561:9:8;;2460:116::o;2581:380::-;2660:1;2656:12;;;;2703;;;2724:2;;2778:4;2770:6;2766:17;2756:27;;2724:2;2831;2823:6;2820:14;2800:18;2797:38;2794:2;;;2877:10;2872:3;2868:20;2865:1;2858:31;2912:4;2909:1;2902:15;2940:4;2937:1;2930:15;2794:2;;2636:325;;;:::o;2966:127::-;3027:10;3022:3;3018:20;3015:1;3008:31;3058:4;3055:1;3048:15;3082:4;3079:1;3072:15;2998:95;181:627:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_584": {
									"entryPoint": null,
									"id": 584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_519": {
									"entryPoint": 1520,
									"id": 519,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_573": {
									"entryPoint": 1515,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_817": {
									"entryPoint": 3348,
									"id": 817,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_474": {
									"entryPoint": 2789,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_402": {
									"entryPoint": 2554,
									"id": 402,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_830": {
									"entryPoint": null,
									"id": 830,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1020": {
									"entryPoint": 3225,
									"id": 1020,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_562": {
									"entryPoint": 1812,
									"id": 562,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_944": {
									"entryPoint": 3135,
									"id": 944,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 1934,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_1036": {
									"entryPoint": 2407,
									"id": 1036,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": 1314,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 839,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_628": {
									"entryPoint": 1085,
									"id": 628,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_607": {
									"entryPoint": 1014,
									"id": 607,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 1177,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_228": {
									"entryPoint": 899,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_796": {
									"entryPoint": 1000,
									"id": 796,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_54": {
									"entryPoint": 693,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_873": {
									"entryPoint": null,
									"id": 873,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_774": {
									"entryPoint": 1106,
									"id": 774,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_981": {
									"entryPoint": null,
									"id": 981,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_901": {
									"entryPoint": 1027,
									"id": 901,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_64": {
									"entryPoint": 1162,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 863,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_924": {
									"entryPoint": 1357,
									"id": 924,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_123": {
									"entryPoint": 1300,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_783": {
									"entryPoint": 933,
									"id": 783,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3902,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8802:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:8"
															},
															"nodeType": "YulIf",
															"src": "111:2:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:8",
														"type": ""
													}
												],
												"src": "14:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:8"
															},
															"nodeType": "YulIf",
															"src": "272:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:8",
														"type": ""
													}
												],
												"src": "192:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:8"
															},
															"nodeType": "YulIf",
															"src": "480:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:8",
														"type": ""
													}
												],
												"src": "383:260:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:8"
															},
															"nodeType": "YulIf",
															"src": "762:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:8",
														"type": ""
													}
												],
												"src": "648:328:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:8"
															},
															"nodeType": "YulIf",
															"src": "1078:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:8",
														"type": ""
													}
												],
												"src": "981:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1310:110:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1356:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1365:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1358:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1358:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1358:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1331:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1340:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1327:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1327:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1352:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1323:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1323:32:8"
															},
															"nodeType": "YulIf",
															"src": "1320:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1381:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1404:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1391:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1381:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1276:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1287:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1299:6:8",
														"type": ""
													}
												],
												"src": "1240:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1548:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1559:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1536:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1578:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1593:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1609:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1614:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1605:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1605:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1618:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1601:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1601:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1589:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1589:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1571:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1571:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1495:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1506:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1517:4:8",
														"type": ""
													}
												],
												"src": "1425:203:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1728:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1738:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1750:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1746:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1746:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1738:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1780:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1805:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1798:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1798:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1791:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1791:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1773:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1773:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1773:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1697:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1708:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1719:4:8",
														"type": ""
													}
												],
												"src": "1633:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1946:476:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1956:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1966:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1960:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1984:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1995:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1977:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1977:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2007:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2027:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2021:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2021:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2011:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2054:9:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2065:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2050:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2050:18:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2070:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2043:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2043:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2043:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2086:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2095:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2090:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2155:90:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2184:9:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2195:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2180:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2180:17:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2199:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2176:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2176:26:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2218:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2226:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2214:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2214:14:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2230:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2210:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2210:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2204:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2204:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2169:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2169:66:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2169:66:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2116:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2119:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2113:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2113:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2127:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2129:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2138:1:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2141:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2134:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2134:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2129:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2109:3:8",
																"statements": []
															},
															"src": "2105:140:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2279:66:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2308:9:8"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "2319:6:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2304:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2304:22:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2300:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2300:31:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2333:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2293:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2293:42:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2293:42:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2260:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2263:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2257:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2257:13:8"
															},
															"nodeType": "YulIf",
															"src": "2254:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2354:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2370:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2389:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2397:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2385:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2385:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2406:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2402:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2402:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2381:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2381:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2366:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2366:45:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2413:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2362:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2362:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2354:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1915:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1926:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1937:4:8",
														"type": ""
													}
												],
												"src": "1825:597:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2601:225:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2618:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2629:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2611:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2611:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2611:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2663:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2648:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2648:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2668:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2641:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2641:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2641:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2691:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2702:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2687:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2707:34:8",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2680:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2680:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2680:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2762:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2773:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2758:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2758:18:8"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2778:5:8",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2751:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2751:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2751:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2793:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2805:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2816:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2801:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2801:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2793:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2578:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2592:4:8",
														"type": ""
													}
												],
												"src": "2427:399:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3005:170:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3022:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3033:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3015:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3015:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3015:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3056:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3067:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3052:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3052:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3072:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3045:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3045:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3045:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3095:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3106:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3091:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3091:18:8"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3111:22:8",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3084:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3084:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3084:50:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3143:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3155:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3166:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3151:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3151:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2982:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2996:4:8",
														"type": ""
													}
												],
												"src": "2831:344:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3354:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3371:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3382:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3364:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3364:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3364:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3405:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3416:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3401:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3401:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3421:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3394:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3394:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3394:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3444:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3455:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3440:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3440:18:8"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3460:34:8",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3433:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3433:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3433:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3515:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3526:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3511:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3511:18:8"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3531:4:8",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3504:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3504:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3504:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3545:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3557:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3568:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3553:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3553:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3545:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3331:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3345:4:8",
														"type": ""
													}
												],
												"src": "3180:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3757:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3774:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3785:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3767:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3767:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3767:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3808:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3819:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3804:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3804:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3824:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3797:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3797:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3797:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3847:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3858:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3843:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3843:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3863:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3836:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3836:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3836:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3918:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3929:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3914:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3914:18:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3934:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3907:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3907:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3907:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3952:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3964:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3975:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3960:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3960:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3952:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3734:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3748:4:8",
														"type": ""
													}
												],
												"src": "3583:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4164:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4181:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4192:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4174:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4174:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4174:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4215:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4226:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4211:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4211:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4231:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4204:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4204:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4254:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4265:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4250:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4250:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4270:34:8",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4243:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4243:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4243:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4325:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4336:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4321:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4321:18:8"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4341:4:8",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4314:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4314:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4314:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4355:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4367:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4378:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4363:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4363:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4355:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4141:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4155:4:8",
														"type": ""
													}
												],
												"src": "3990:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4567:179:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4584:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4595:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4577:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4577:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4577:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4618:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4629:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4614:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4614:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4634:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4607:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4607:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4607:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4657:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4668:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4653:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4653:18:8"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4673:31:8",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4646:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4646:59:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4646:59:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4714:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4726:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4737:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4722:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4722:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4714:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4544:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4558:4:8",
														"type": ""
													}
												],
												"src": "4393:353:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4925:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4942:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4953:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4935:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4935:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4935:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4976:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4987:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4972:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4972:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4992:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4965:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5015:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5026:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5011:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5011:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5031:34:8",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5004:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5004:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5004:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5086:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5097:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5082:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5082:18:8"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5102:8:8",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5075:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5075:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5075:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5120:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5132:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5143:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5128:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5128:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5120:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4902:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4916:4:8",
														"type": ""
													}
												],
												"src": "4751:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5332:166:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5349:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5360:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5342:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5342:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5342:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5383:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5394:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5379:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5379:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5399:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5372:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5372:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5422:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5433:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5418:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5418:18:8"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5438:18:8",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5411:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5411:46:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5411:46:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5466:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5478:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5489:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5474:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5474:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5466:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5309:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5323:4:8",
														"type": ""
													}
												],
												"src": "5158:340:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5677:182:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5694:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5705:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5687:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5687:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5687:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5728:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5739:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5724:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5724:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5744:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5717:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5717:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5717:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5767:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5778:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5763:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5763:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5783:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5756:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5756:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5756:62:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5827:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5839:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5850:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5835:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5835:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5827:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5654:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5668:4:8",
														"type": ""
													}
												],
												"src": "5503:356:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6038:223:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6055:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6066:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6048:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6048:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6089:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6100:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6085:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6085:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:8",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6078:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6078:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6078:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6128:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6139:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6124:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6124:18:8"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6144:34:8",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6117:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6117:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6117:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6199:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6210:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6195:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6195:18:8"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6215:3:8",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6188:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6188:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6188:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6228:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6240:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6251:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6236:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6236:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6228:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6015:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6029:4:8",
														"type": ""
													}
												],
												"src": "5864:397:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6440:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6457:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6468:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6450:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6450:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6450:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6491:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6502:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6487:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6487:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6507:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6480:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6480:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6480:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6530:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6541:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6526:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6526:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6546:34:8",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6519:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6519:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6519:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6601:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6612:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6597:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6597:18:8"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6617:7:8",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6590:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6590:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6590:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6634:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6646:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6657:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6642:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6642:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6634:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6417:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6431:4:8",
														"type": ""
													}
												],
												"src": "6266:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6846:226:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6863:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6874:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6856:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6856:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6856:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6897:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6908:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6893:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6893:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6913:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6886:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6886:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6886:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6936:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6947:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6932:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6932:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6952:34:8",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6925:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6925:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6925:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7007:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7018:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7003:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7003:18:8"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7023:6:8",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6996:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6996:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6996:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7039:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7051:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7062:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7047:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7047:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7039:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6823:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6837:4:8",
														"type": ""
													}
												],
												"src": "6672:400:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7251:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7268:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7279:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7261:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7261:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7261:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7302:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7313:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7298:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7298:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7318:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7291:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7291:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7291:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7341:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7352:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7337:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7337:18:8"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7357:34:8",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7330:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7330:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7330:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7412:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7423:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7408:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7408:18:8"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7428:7:8",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7401:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7401:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7401:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7445:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7457:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7468:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7453:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7453:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7445:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7228:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7242:4:8",
														"type": ""
													}
												],
												"src": "7077:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7657:181:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7674:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7685:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7667:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7667:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7667:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7708:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7719:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7704:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7704:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7724:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7697:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7697:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7697:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7747:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7758:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7743:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:18:8"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7763:33:8",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7736:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7736:61:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7736:61:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7806:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7818:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7829:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7814:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7814:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7806:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7634:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7648:4:8",
														"type": ""
													}
												],
												"src": "7483:355:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7944:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7954:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7966:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7977:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7962:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7962:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7954:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7996:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8007:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7989:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7989:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7989:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7913:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7924:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7935:4:8",
														"type": ""
													}
												],
												"src": "7843:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8073:80:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8100:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8102:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8102:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8102:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8089:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8096:1:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8092:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8092:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8086:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8086:13:8"
															},
															"nodeType": "YulIf",
															"src": "8083:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8131:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8142:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8145:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8138:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8138:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8131:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8056:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8059:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8065:3:8",
														"type": ""
													}
												],
												"src": "8025:128:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8207:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8229:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8231:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8231:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8231:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8223:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8226:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8220:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8220:8:8"
															},
															"nodeType": "YulIf",
															"src": "8217:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8260:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8272:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8275:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8268:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8268:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8260:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8189:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8192:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8198:4:8",
														"type": ""
													}
												],
												"src": "8158:125:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8343:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8353:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8367:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8370:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8363:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8363:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8353:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8384:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8414:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8420:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8410:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8410:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8388:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8461:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8463:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8477:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8485:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8473:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8473:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8463:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8441:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8434:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8434:26:8"
															},
															"nodeType": "YulIf",
															"src": "8431:2:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8551:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8572:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8579:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8584:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8575:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8575:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8565:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8565:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8565:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8616:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8619:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8609:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8609:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8609:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8644:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8647:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8637:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8637:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8637:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8507:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8530:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8538:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8527:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8527:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8504:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8504:38:8"
															},
															"nodeType": "YulIf",
															"src": "8501:2:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8323:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8332:6:8",
														"type": ""
													}
												],
												"src": "8288:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8705:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8722:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8729:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8734:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8725:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8725:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8715:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8715:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8715:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8762:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8765:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8755:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8755:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8755:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8786:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8789:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8779:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8779:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8779:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8673:127:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad57806395d89b411161007157806395d89b4114610261578063a457c2d714610269578063a9059cbb1461027c578063dd62ed3e1461028f578063f2fde38b146102a257600080fd5b806370a08231146101ec578063715018a61461021557806379cc67901461021d5780638456cb59146102305780638da5cb5b1461023857600080fd5b806339509351116100f4578063395093511461019e5780633f4ba83a146101b157806340c10f19146101bb57806342966c68146101ce5780635c975abb146101e157600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017257806323b872dd14610184578063313ce56714610197575b600080fd5b6101396102b5565b6040516101469190610e4a565b60405180910390f35b61016261015d366004610e07565b610347565b6040519015158152602001610146565b6002545b604051908152602001610146565b610162610192366004610dcb565b61035f565b6012610176565b6101626101ac366004610e07565b610383565b6101b96103a5565b005b6101b96101c9366004610e07565b6103e8565b6101b96101dc366004610e31565b6103f6565b60055460ff16610162565b6101766101fa366004610d76565b6001600160a01b031660009081526020819052604090205490565b6101b9610403565b6101b961022b366004610e07565b61043d565b6101b9610452565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610146565b61013961048a565b610162610277366004610e07565b610499565b61016261028a366004610e07565b610514565b61017661029d366004610d98565b610522565b6101b96102b0366004610d76565b61054d565b6060600380546102c490610f03565b80601f01602080910402602001604051908101604052809291908181526020018280546102f090610f03565b801561033d5780601f106103125761010080835404028352916020019161033d565b820191906000526020600020905b81548152906001019060200180831161032057829003601f168201915b5050505050905090565b6000336103558185856105f0565b5060019392505050565b60003361036d858285610714565b61037885858561078e565b506001949350505050565b6000336103558185856103968383610522565b6103a09190610ed4565b6105f0565b6005546001600160a01b036101009091041633146103de5760405162461bcd60e51b81526004016103d590610e9f565b60405180910390fd5b6103e6610967565b565b6103f282826109fa565b5050565b6104003382610ae5565b50565b6005546001600160a01b036101009091041633146104335760405162461bcd60e51b81526004016103d590610e9f565b6103e66000610c3f565b610448823383610714565b6103f28282610ae5565b6005546001600160a01b036101009091041633146104825760405162461bcd60e51b81526004016103d590610e9f565b6103e6610c99565b6060600480546102c490610f03565b600033816104a78286610522565b9050838110156105075760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103d5565b61037882868684036105f0565b60003361035581858561078e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b0361010090910416331461057d5760405162461bcd60e51b81526004016103d590610e9f565b6001600160a01b0381166105e25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103d5565b61040081610c3f565b505050565b6001600160a01b0383166106525760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d5565b6001600160a01b0382166106b35760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d5565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006107208484610522565b90506000198114610788578181101561077b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103d5565b61078884848484036105f0565b50505050565b6001600160a01b0383166107f25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d5565b6001600160a01b0382166108545760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d5565b61085f838383610d14565b6001600160a01b038316600090815260208190526040902054818110156108d75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103d5565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061090e908490610ed4565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161095a91815260200190565b60405180910390a3610788565b60055460ff166109b05760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016103d5565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610a505760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103d5565b610a5c60008383610d14565b8060026000828254610a6e9190610ed4565b90915550506001600160a01b03821660009081526020819052604081208054839290610a9b908490610ed4565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610b455760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103d5565b610b5182600083610d14565b6001600160a01b03821660009081526020819052604090205481811015610bc55760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103d5565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610bf4908490610eec565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60055460ff1615610cdf5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016103d5565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586109dd3390565b60055460ff16156105eb5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016103d5565b80356001600160a01b0381168114610d7157600080fd5b919050565b600060208284031215610d8857600080fd5b610d9182610d5a565b9392505050565b60008060408385031215610dab57600080fd5b610db483610d5a565b9150610dc260208401610d5a565b90509250929050565b600080600060608486031215610de057600080fd5b610de984610d5a565b9250610df760208501610d5a565b9150604084013590509250925092565b60008060408385031215610e1a57600080fd5b610e2383610d5a565b946020939093013593505050565b600060208284031215610e4357600080fd5b5035919050565b600060208083528351808285015260005b81811015610e7757858101830151858201604001528201610e5b565b81811115610e89576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610ee757610ee7610f3e565b500190565b600082821015610efe57610efe610f3e565b500390565b600181811c90821680610f1757607f821691505b60208210811415610f3857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea264697066735822122054385bf6dd49fe0ef092753c768753e9de904e307e7b7692279c63693bc03c5764736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0xDCB JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST PUSH1 0x12 PUSH2 0x176 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x383 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x3A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0xE31 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x162 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x403 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x452 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x48A JUMP JUMPDEST PUSH2 0x162 PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x514 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0xD98 JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xD76 JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2C4 SWAP1 PUSH2 0xF03 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F0 SWAP1 PUSH2 0xF03 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x33D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x312 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x33D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x320 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x355 DUP2 DUP6 DUP6 PUSH2 0x5F0 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x36D DUP6 DUP3 DUP6 PUSH2 0x714 JUMP JUMPDEST PUSH2 0x378 DUP6 DUP6 DUP6 PUSH2 0x78E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x355 DUP2 DUP6 DUP6 PUSH2 0x396 DUP4 DUP4 PUSH2 0x522 JUMP JUMPDEST PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0xED4 JUMP JUMPDEST PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x3DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E6 PUSH2 0x967 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3F2 DUP3 DUP3 PUSH2 0x9FA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x400 CALLER DUP3 PUSH2 0xAE5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x433 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xE9F JUMP JUMPDEST PUSH2 0x3E6 PUSH1 0x0 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0x448 DUP3 CALLER DUP4 PUSH2 0x714 JUMP JUMPDEST PUSH2 0x3F2 DUP3 DUP3 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x482 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xE9F JUMP JUMPDEST PUSH2 0x3E6 PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2C4 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x4A7 DUP3 DUP7 PUSH2 0x522 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x507 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x378 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x355 DUP2 DUP6 DUP6 PUSH2 0x78E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x400 DUP2 PUSH2 0xC3F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x652 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x720 DUP5 DUP5 PUSH2 0x522 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x788 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x77B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x788 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5F0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x854 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x85F DUP4 DUP4 DUP4 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x90E SWAP1 DUP5 SWAP1 PUSH2 0xED4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x95A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x788 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0xA5C PUSH1 0x0 DUP4 DUP4 PUSH2 0xD14 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA6E SWAP2 SWAP1 PUSH2 0xED4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA9B SWAP1 DUP5 SWAP1 PUSH2 0xED4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0xB51 DUP3 PUSH1 0x0 DUP4 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xBC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xBF4 SWAP1 DUP5 SWAP1 PUSH2 0xEEC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x9DD CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD91 DUP3 PUSH2 0xD5A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB4 DUP4 PUSH2 0xD5A JUMP JUMPDEST SWAP2 POP PUSH2 0xDC2 PUSH1 0x20 DUP5 ADD PUSH2 0xD5A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE9 DUP5 PUSH2 0xD5A JUMP JUMPDEST SWAP3 POP PUSH2 0xDF7 PUSH1 0x20 DUP6 ADD PUSH2 0xD5A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE23 DUP4 PUSH2 0xD5A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE77 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xE5B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xE89 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xEE7 JUMPI PUSH2 0xEE7 PUSH2 0xF3E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xEFE JUMPI PUSH2 0xEFE PUSH2 0xF3E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF17 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF38 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD CODESIZE JUMPDEST 0xF6 0xDD 0x49 INVALID 0xE CREATE SWAP3 PUSH22 0x3C768753E9DE904E307E7B7692279C63693BC03C5764 PUSH20 0x6F6C634300080500330000000000000000000000 ",
							"sourceMap": "181:627:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2204:100:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4557:201;;;;;;:::i;:::-;;:::i;:::-;;;1798:14:8;;1791:22;1773:41;;1761:2;1746:18;4557:201:0;1728:92:8;3326:108:0;3414:12;;3326:108;;;7989:25:8;;;7977:2;7962:18;3326:108:0;7944:76:8;5338:295:0;;;;;;:::i;:::-;;:::i;3166:95::-;3251:2;3166:95;;6042:238;;;;;;:::i;:::-;;:::i;440:65:4:-;;;:::i;:::-;;513:85;;;;;;:::i;:::-;;:::i;590:91:1:-;;;;;;:::i;:::-;;:::i;1130:86:7:-;1201:7;;;;1130:86;;3497:127:0;;;;;;:::i;:::-;-1:-1:-1;;;;;3598:18:0;3571:7;3598:18;;;;;;;;;;;;3497:127;1714:103:6;;;:::i;1000:164:1:-;;;;;;:::i;:::-;;:::i;371:61:4:-;;;:::i;1063:87:6:-;1136:6;;;;;-1:-1:-1;;;;;1136:6:6;1063:87;;-1:-1:-1;;;;;1589:32:8;;;1571:51;;1559:2;1544:18;1063:87:6;1526:102:8;2423:104:0;;;:::i;6783:436::-;;;;;;:::i;:::-;;:::i;3830:193::-;;;;;;:::i;:::-;;:::i;4086:151::-;;;;;;:::i;:::-;;:::i;1972:201:6:-;;;;;;:::i;:::-;;:::i;2204:100:0:-;2258:13;2291:5;2284:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2204:100;:::o;4557:201::-;4640:4;736:10:5;4696:32:0;736:10:5;4712:7:0;4721:6;4696:8;:32::i;:::-;-1:-1:-1;4746:4:0;;4557:201;-1:-1:-1;;;4557:201:0:o;5338:295::-;5469:4;736:10:5;5527:38:0;5543:4;736:10:5;5558:6:0;5527:15;:38::i;:::-;5576:27;5586:4;5592:2;5596:6;5576:9;:27::i;:::-;-1:-1:-1;5621:4:0;;5338:295;-1:-1:-1;;;;5338:295:0:o;6042:238::-;6130:4;736:10:5;6186:64:0;736:10:5;6202:7:0;6239:10;6211:25;736:10:5;6202:7:0;6211:9;:25::i;:::-;:38;;;;:::i;:::-;6186:8;:64::i;440:65:4:-;1136:6:6;;-1:-1:-1;;;;;1136:6:6;;;;;736:10:5;1283:23:6;1275:68;;;;-1:-1:-1;;;1275:68:6;;;;;;;:::i;:::-;;;;;;;;;487:10:4::1;:8;:10::i;:::-;440:65::o:0;513:85::-;573:17;579:2;583:6;573:5;:17::i;:::-;513:85;;:::o;590:91:1:-;646:27;736:10:5;666:6:1;646:5;:27::i;:::-;590:91;:::o;1714:103:6:-;1136:6;;-1:-1:-1;;;;;1136:6:6;;;;;736:10:5;1283:23:6;1275:68;;;;-1:-1:-1;;;1275:68:6;;;;;;;:::i;:::-;1779:30:::1;1806:1;1779:18;:30::i;1000:164:1:-:0;1077:46;1093:7;736:10:5;1116:6:1;1077:15;:46::i;:::-;1134:22;1140:7;1149:6;1134:5;:22::i;371:61:4:-;1136:6:6;;-1:-1:-1;;;;;1136:6:6;;;;;736:10:5;1283:23:6;1275:68;;;;-1:-1:-1;;;1275:68:6;;;;;;;:::i;:::-;416:8:4::1;:6;:8::i;2423:104:0:-:0;2479:13;2512:7;2505:14;;;;;:::i;6783:436::-;6876:4;736:10:5;6876:4:0;6959:25;736:10:5;6976:7:0;6959:9;:25::i;:::-;6932:52;;7023:15;7003:16;:35;;6995:85;;;;-1:-1:-1;;;6995:85:0;;7279:2:8;6995:85:0;;;7261:21:8;7318:2;7298:18;;;7291:30;7357:34;7337:18;;;7330:62;-1:-1:-1;;;7408:18:8;;;7401:35;7453:19;;6995:85:0;7251:227:8;6995:85:0;7116:60;7125:5;7132:7;7160:15;7141:16;:34;7116:8;:60::i;3830:193::-;3909:4;736:10:5;3965:28:0;736:10:5;3982:2:0;3986:6;3965:9;:28::i;4086:151::-;-1:-1:-1;;;;;4202:18:0;;;4175:7;4202:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4086:151::o;1972:201:6:-;1136:6;;-1:-1:-1;;;;;1136:6:6;;;;;736:10:5;1283:23:6;1275:68;;;;-1:-1:-1;;;1275:68:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;2061:22:6;::::1;2053:73;;;::::0;-1:-1:-1;;;2053:73:6;;3785:2:8;2053:73:6::1;::::0;::::1;3767:21:8::0;3824:2;3804:18;;;3797:30;3863:34;3843:18;;;3836:62;-1:-1:-1;;;3914:18:8;;;3907:36;3960:19;;2053:73:6::1;3757:228:8::0;2053:73:6::1;2137:28;2156:8;2137:18;:28::i;12141:125:0:-:0;;;;:::o;10417:380::-;-1:-1:-1;;;;;10553:19:0;;10545:68;;;;-1:-1:-1;;;10545:68:0;;6874:2:8;10545:68:0;;;6856:21:8;6913:2;6893:18;;;6886:30;6952:34;6932:18;;;6925:62;-1:-1:-1;;;7003:18:8;;;6996:34;7047:19;;10545:68:0;6846:226:8;10545:68:0;-1:-1:-1;;;;;10632:21:0;;10624:68;;;;-1:-1:-1;;;10624:68:0;;4192:2:8;10624:68:0;;;4174:21:8;4231:2;4211:18;;;4204:30;4270:34;4250:18;;;4243:62;-1:-1:-1;;;4321:18:8;;;4314:32;4363:19;;10624:68:0;4164:224:8;10624:68:0;-1:-1:-1;;;;;10705:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10757:32;;7989:25:8;;;10757:32:0;;7962:18:8;10757:32:0;;;;;;;10417:380;;;:::o;11088:453::-;11223:24;11250:25;11260:5;11267:7;11250:9;:25::i;:::-;11223:52;;-1:-1:-1;;11290:16:0;:37;11286:248;;11372:6;11352:16;:26;;11344:68;;;;-1:-1:-1;;;11344:68:0;;4595:2:8;11344:68:0;;;4577:21:8;4634:2;4614:18;;;4607:30;4673:31;4653:18;;;4646:59;4722:18;;11344:68:0;4567:179:8;11344:68:0;11456:51;11465:5;11472:7;11500:6;11481:16;:25;11456:8;:51::i;:::-;11212:329;11088:453;;;:::o;7698:671::-;-1:-1:-1;;;;;7829:18:0;;7821:68;;;;-1:-1:-1;;;7821:68:0;;6468:2:8;7821:68:0;;;6450:21:8;6507:2;6487:18;;;6480:30;6546:34;6526:18;;;6519:62;-1:-1:-1;;;6597:18:8;;;6590:35;6642:19;;7821:68:0;6440:227:8;7821:68:0;-1:-1:-1;;;;;7908:16:0;;7900:64;;;;-1:-1:-1;;;7900:64:0;;2629:2:8;7900:64:0;;;2611:21:8;2668:2;2648:18;;;2641:30;2707:34;2687:18;;;2680:62;-1:-1:-1;;;2758:18:8;;;2751:33;2801:19;;7900:64:0;2601:225:8;7900:64:0;7977:38;7998:4;8004:2;8008:6;7977:20;:38::i;:::-;-1:-1:-1;;;;;8050:15:0;;8028:19;8050:15;;;;;;;;;;;8084:21;;;;8076:72;;;;-1:-1:-1;;;8076:72:0;;4953:2:8;8076:72:0;;;4935:21:8;4992:2;4972:18;;;4965:30;5031:34;5011:18;;;5004:62;-1:-1:-1;;;5082:18:8;;;5075:36;5128:19;;8076:72:0;4925:228:8;8076:72:0;-1:-1:-1;;;;;8184:15:0;;;:9;:15;;;;;;;;;;;8202:20;;;8184:38;;8244:13;;;;;;;;:23;;8216:6;;8184:9;8244:23;;8216:6;;8244:23;:::i;:::-;;;;;;;;8300:2;-1:-1:-1;;;;;8285:26:0;8294:4;-1:-1:-1;;;;;8285:26:0;;8304:6;8285:26;;;;7989:25:8;;7977:2;7962:18;;7944:76;8285:26:0;;;;;;;;8324:37;12141:125;2189:120:7;1201:7;;;;1725:41;;;;-1:-1:-1;;;1725:41:7;;3033:2:8;1725:41:7;;;3015:21:8;3072:2;3052:18;;;3045:30;-1:-1:-1;;;3091:18:8;;;3084:50;3151:18;;1725:41:7;3005:170:8;1725:41:7;2248:7:::1;:15:::0;;-1:-1:-1;;2248:15:7::1;::::0;;2279:22:::1;736:10:5::0;2288:12:7::1;2279:22;::::0;-1:-1:-1;;;;;1589:32:8;;;1571:51;;1559:2;1544:18;2279:22:7::1;;;;;;;2189:120::o:0;8656:399:0:-;-1:-1:-1;;;;;8740:21:0;;8732:65;;;;-1:-1:-1;;;8732:65:0;;7685:2:8;8732:65:0;;;7667:21:8;7724:2;7704:18;;;7697:30;7763:33;7743:18;;;7736:61;7814:18;;8732:65:0;7657:181:8;8732:65:0;8810:49;8839:1;8843:7;8852:6;8810:20;:49::i;:::-;8888:6;8872:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8905:18:0;;:9;:18;;;;;;;;;;:28;;8927:6;;8905:9;:28;;8927:6;;8905:28;:::i;:::-;;;;-1:-1:-1;;8949:37:0;;7989:25:8;;;-1:-1:-1;;;;;8949:37:0;;;8966:1;;8949:37;;7977:2:8;7962:18;8949:37:0;;;;;;;513:85:4;;:::o;9388:591:0:-;-1:-1:-1;;;;;9472:21:0;;9464:67;;;;-1:-1:-1;;;9464:67:0;;6066:2:8;9464:67:0;;;6048:21:8;6105:2;6085:18;;;6078:30;6144:34;6124:18;;;6117:62;-1:-1:-1;;;6195:18:8;;;6188:31;6236:19;;9464:67:0;6038:223:8;9464:67:0;9544:49;9565:7;9582:1;9586:6;9544:20;:49::i;:::-;-1:-1:-1;;;;;9631:18:0;;9606:22;9631:18;;;;;;;;;;;9668:24;;;;9660:71;;;;-1:-1:-1;;;9660:71:0;;3382:2:8;9660:71:0;;;3364:21:8;3421:2;3401:18;;;3394:30;3460:34;3440:18;;;3433:62;-1:-1:-1;;;3511:18:8;;;3504:32;3553:19;;9660:71:0;3354:224:8;9660:71:0;-1:-1:-1;;;;;9767:18:0;;:9;:18;;;;;;;;;;9788:23;;;9767:44;;9833:12;:22;;9805:6;;9767:9;9833:22;;9805:6;;9833:22;:::i;:::-;;;;-1:-1:-1;;9873:37:0;;7989:25:8;;;9899:1:0;;-1:-1:-1;;;;;9873:37:0;;;;;7977:2:8;7962:18;9873:37:0;;;;;;;12141:125;;;:::o;2333:191:6:-;2426:6;;;-1:-1:-1;;;;;2443:17:6;;;2426:6;2443:17;;;-1:-1:-1;;;;;;2443:17:6;;;;;;2476:40;;2426:6;;;;;;;;2476:40;;2407:16;;2476:40;2396:128;2333:191;:::o;1930:118:7:-;1201:7;;;;1455:9;1447:38;;;;-1:-1:-1;;;1447:38:7;;5360:2:8;1447:38:7;;;5342:21:8;5399:2;5379:18;;;5372:30;-1:-1:-1;;;5418:18:8;;;5411:46;5474:18;;1447:38:7;5332:166:8;1447:38:7;1990:7:::1;:14:::0;;-1:-1:-1;;1990:14:7::1;2000:4;1990:14;::::0;;2020:20:::1;2027:12;736:10:5::0;;656:98;606:199:4;1201:7:7;;;;1455:9;1447:38;;;;-1:-1:-1;;;1447:38:7;;5360:2:8;1447:38:7;;;5342:21:8;5399:2;5379:18;;;5372:30;-1:-1:-1;;;5418:18:8;;;5411:46;5474:18;;1447:38:7;5332:166:8;14:173;82:20;;-1:-1:-1;;;;;131:31:8;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;320:1;317;310:12;272:2;343:29;362:9;343:29;:::i;:::-;333:39;262:116;-1:-1:-1;;;262:116:8:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:2;;;528:1;525;518:12;480:2;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;470:173;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:2;;;810:1;807;800:12;762:2;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;752:224;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:2;;;1126:1;1123;1116:12;1078:2;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;1068:167:8:o;1240:180::-;1299:6;1352:2;1340:9;1331:7;1327:23;1323:32;1320:2;;;1368:1;1365;1358:12;1320:2;-1:-1:-1;1391:23:8;;1310:110;-1:-1:-1;1310:110:8:o;1825:597::-;1937:4;1966:2;1995;1984:9;1977:21;2027:6;2021:13;2070:6;2065:2;2054:9;2050:18;2043:34;2095:1;2105:140;2119:6;2116:1;2113:13;2105:140;;;2214:14;;;2210:23;;2204:30;2180:17;;;2199:2;2176:26;2169:66;2134:10;;2105:140;;;2263:6;2260:1;2257:13;2254:2;;;2333:1;2328:2;2319:6;2308:9;2304:22;2300:31;2293:42;2254:2;-1:-1:-1;2406:2:8;2385:15;-1:-1:-1;;2381:29:8;2366:45;;;;2413:2;2362:54;;1946:476;-1:-1:-1;;;1946:476:8:o;5503:356::-;5705:2;5687:21;;;5724:18;;;5717:30;5783:34;5778:2;5763:18;;5756:62;5850:2;5835:18;;5677:182::o;8025:128::-;8065:3;8096:1;8092:6;8089:1;8086:13;8083:2;;;8102:18;;:::i;:::-;-1:-1:-1;8138:9:8;;8073:80::o;8158:125::-;8198:4;8226:1;8223;8220:8;8217:2;;;8231:18;;:::i;:::-;-1:-1:-1;8268:9:8;;8207:76::o;8288:380::-;8367:1;8363:12;;;;8410;;;8431:2;;8485:4;8477:6;8473:17;8463:27;;8431:2;8538;8530:6;8527:14;8507:18;8504:38;8501:2;;;8584:10;8579:3;8575:20;8572:1;8565:31;8619:4;8616:1;8609:15;8647:4;8644:1;8637:15;8501:2;;8343:325;;;:::o;8673:127::-;8734:10;8729:3;8725:20;8722:1;8715:31;8765:4;8762:1;8755:15;8789:4;8786:1;8779:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "795600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24647",
								"balanceOf(address)": "2563",
								"burn(uint256)": "53103",
								"burnFrom(address,uint256)": "79791",
								"decimals()": "304",
								"decreaseAllowance(address,uint256)": "26994",
								"increaseAllowance(address,uint256)": "27001",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2441",
								"pause()": "29853",
								"paused()": "2415",
								"renounceOwnership()": "28195",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "53413",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28455",
								"unpause()": "29786"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 251,
									"end": 363,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 251,
									"end": 363,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 251,
									"end": 363,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 251,
									"end": 363,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 363,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 251,
									"end": 363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 363,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 251,
									"end": 363,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 251,
									"end": 363,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 363,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2A34BA30B72A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2A34BA30B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2090,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2085,
									"end": 2090,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2116,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2109,
									"end": 2116,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1007,
									"end": 1014,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1022,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1007,
									"end": 1022,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1007,
									"end": 1022,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1007,
									"end": 1022,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1007,
									"end": 1022,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 942,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 942,
									"end": 960,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 305,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 311,
									"end": 321,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 338,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3251,
									"end": 3253,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 338,
									"end": 340,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 338,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 338,
									"end": 354,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 338,
									"end": 354,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 338,
									"end": 354,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 323,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 323,
									"end": 354,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 323,
									"end": 335,
									"name": "PUSH",
									"source": 4,
									"value": "174876E800"
								},
								{
									"begin": 323,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 323,
									"end": 354,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 323,
									"end": 354,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 323,
									"end": 354,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 305,
									"end": 310,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 305,
									"end": 355,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 305,
									"end": 355,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 305,
									"end": 355,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 6,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "LOG3",
									"source": 6
								},
								{
									"begin": 2396,
									"end": 2524,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 8656,
									"end": 9055,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 8656,
									"end": 9055,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8740,
									"end": 8761,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8740,
									"end": 8761,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8732,
									"end": 8797,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 8732,
									"end": 8797,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8732,
									"end": 8797,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8732,
									"end": 8797,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8732,
									"end": 8797,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8732,
									"end": 8797,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 561,
									"end": 563,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8732,
									"end": 8797,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8732,
									"end": 8797,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8732,
									"end": 8797,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 543,
									"end": 564,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 600,
									"end": 602,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 580,
									"end": 598,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 580,
									"end": 598,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 580,
									"end": 598,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 573,
									"end": 603,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 639,
									"end": 672,
									"name": "PUSH",
									"source": 8,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 619,
									"end": 637,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 619,
									"end": 637,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 619,
									"end": 637,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 612,
									"end": 673,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 690,
									"end": 708,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 690,
									"end": 708,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8732,
									"end": 8797,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 8732,
									"end": 8797,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8732,
									"end": 8797,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8732,
									"end": 8797,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8732,
									"end": 8797,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8732,
									"end": 8797,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8732,
									"end": 8797,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8732,
									"end": 8797,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8732,
									"end": 8797,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8732,
									"end": 8797,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 8732,
									"end": 8797,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8810,
									"end": 8859,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 8839,
									"end": 8840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8843,
									"end": 8850,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8852,
									"end": 8858,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8810,
									"end": 8830,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 8810,
									"end": 8859,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8810,
									"end": 8859,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 8810,
									"end": 8859,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8888,
									"end": 8894,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 8884,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8872,
									"end": 8884,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8872,
									"end": 8894,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 8894,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 8894,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 8894,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 8872,
									"end": 8894,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 8894,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 8894,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 8872,
									"end": 8894,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8872,
									"end": 8894,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 8872,
									"end": 8894,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 8894,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 8894,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8872,
									"end": 8894,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8905,
									"end": 8923,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8905,
									"end": 8923,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8905,
									"end": 8914,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8905,
									"end": 8923,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8905,
									"end": 8923,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8905,
									"end": 8923,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8905,
									"end": 8923,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8905,
									"end": 8923,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8905,
									"end": 8923,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8905,
									"end": 8923,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8905,
									"end": 8923,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8905,
									"end": 8923,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8905,
									"end": 8923,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 8905,
									"end": 8933,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8905,
									"end": 8933,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8927,
									"end": 8933,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8927,
									"end": 8933,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8905,
									"end": 8914,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8905,
									"end": 8933,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 8905,
									"end": 8933,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8927,
									"end": 8933,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8927,
									"end": 8933,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8905,
									"end": 8933,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 8905,
									"end": 8933,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8905,
									"end": 8933,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 8905,
									"end": 8933,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8905,
									"end": 8933,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8905,
									"end": 8933,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8905,
									"end": 8933,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8949,
									"end": 8986,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8949,
									"end": 8986,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 865,
									"end": 890,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 865,
									"end": 890,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 865,
									"end": 890,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8949,
									"end": 8986,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8949,
									"end": 8986,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8949,
									"end": 8986,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8966,
									"end": 8967,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8966,
									"end": 8967,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8949,
									"end": 8986,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8949,
									"end": 8986,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 853,
									"end": 855,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 838,
									"end": 856,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8949,
									"end": 8986,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8949,
									"end": 8986,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8949,
									"end": 8986,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8949,
									"end": 8986,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8949,
									"end": 8986,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8949,
									"end": 8986,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8949,
									"end": 8986,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 8656,
									"end": 9055,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8656,
									"end": 9055,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8656,
									"end": 9055,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 606,
									"end": 805,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 606,
									"end": 805,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1201,
									"end": 1208,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1201,
									"end": 1208,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1201,
									"end": 1208,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1201,
									"end": 1208,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1464,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1485,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1447,
									"end": 1485,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1485,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1447,
									"end": 1485,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1447,
									"end": 1485,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1485,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1447,
									"end": 1485,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1447,
									"end": 1485,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1485,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "14185D5CD8589B194E881C185D5CD959"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "82"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 267,
									"end": 313,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 330,
									"end": 348,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 330,
									"end": 348,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1447,
									"end": 1485,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 188,
									"end": 354,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1447,
									"end": 1485,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1447,
									"end": 1485,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 780,
									"end": 784,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 786,
									"end": 788,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 790,
									"end": 796,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 753,
									"end": 779,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 753,
									"end": 779,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 753,
									"end": 779,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 753,
									"end": 779,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18446744073709551715"
								},
								{
									"begin": 753,
									"end": 779,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 753,
									"end": 797,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 753,
									"end": 797,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 753,
									"end": 797,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 753,
									"end": 797,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 753,
									"end": 797,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 606,
									"end": 805,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 606,
									"end": 805,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 606,
									"end": 805,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 606,
									"end": 805,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "tag",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "tag",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "tag",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "tag",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "tag",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 901,
									"end": 1029,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 901,
									"end": 1029,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 941,
									"end": 944,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 972,
									"end": 973,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 968,
									"end": 974,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 965,
									"end": 966,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 962,
									"end": 975,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 959,
									"end": 961,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 959,
									"end": 961,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 959,
									"end": 961,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 978,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 978,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 978,
									"end": 996,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 978,
									"end": 996,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 978,
									"end": 996,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1014,
									"end": 1023,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1014,
									"end": 1023,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 949,
									"end": 1029,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1034,
									"end": 1456,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1034,
									"end": 1456,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1123,
									"end": 1124,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1166,
									"end": 1171,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1123,
									"end": 1124,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1180,
									"end": 1450,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 1180,
									"end": 1450,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1201,
									"end": 1208,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1191,
									"end": 1199,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1188,
									"end": 1209,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1180,
									"end": 1450,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1180,
									"end": 1450,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 1180,
									"end": 1450,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1260,
									"end": 1264,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1256,
									"end": 1257,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1252,
									"end": 1258,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1248,
									"end": 1265,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1242,
									"end": 1246,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1239,
									"end": 1266,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1236,
									"end": 1238,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1236,
									"end": 1238,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 1236,
									"end": 1238,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1269,
									"end": 1287,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 1269,
									"end": 1287,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 1269,
									"end": 1287,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1269,
									"end": 1287,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 1269,
									"end": 1287,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1319,
									"end": 1326,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1317,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1305,
									"end": 1327,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1302,
									"end": 1304,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1302,
									"end": 1304,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1302,
									"end": 1304,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1339,
									"end": 1355,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1339,
									"end": 1355,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1339,
									"end": 1355,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1339,
									"end": 1355,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1302,
									"end": 1304,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1302,
									"end": 1304,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1418,
									"end": 1440,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1418,
									"end": 1440,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1418,
									"end": 1440,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1418,
									"end": 1440,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1378,
									"end": 1393,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1378,
									"end": 1393,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1378,
									"end": 1393,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1378,
									"end": 1393,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1180,
									"end": 1450,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 1180,
									"end": 1450,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1180,
									"end": 1450,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 1180,
									"end": 1450,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1184,
									"end": 1187,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1456,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1456,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1456,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1456,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1456,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1456,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1461,
									"end": 1592,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1461,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1521,
									"end": 1526,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1550,
									"end": 1586,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 1577,
									"end": 1585,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1571,
									"end": 1575,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1550,
									"end": 1586,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 1550,
									"end": 1586,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1550,
									"end": 1586,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 1550,
									"end": 1586,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1541,
									"end": 1586,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1531,
									"end": 1592,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1531,
									"end": 1592,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1597,
									"end": 2403,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 1597,
									"end": 2403,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1651,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1676,
									"end": 1684,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1668,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 1666,
									"end": 1668,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1717,
									"end": 1718,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1731,
									"end": 1736,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 1731,
									"end": 1736,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1668,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 1666,
									"end": 1668,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1765,
									"end": 1769,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 1757,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 1755,
									"end": 1757,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1802,
									"end": 1803,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1816,
									"end": 1821,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 1816,
									"end": 1821,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 1757,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 1755,
									"end": 1757,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1847,
									"end": 1851,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1866,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1860,
									"end": 1919,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1860,
									"end": 1919,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1860,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 1860,
									"end": 1919,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1933,
									"end": 1934,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1928,
									"end": 2058,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1928,
									"end": 2058,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1928,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 1928,
									"end": 2058,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1840,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 1840,
									"end": 2058,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1860,
									"end": 1919,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 1860,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1890,
									"end": 1891,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1881,
									"end": 1891,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1881,
									"end": 1891,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1904,
									"end": 1909,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1904,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 1904,
									"end": 1909,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1928,
									"end": 2058,
									"name": "tag",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 1928,
									"end": 2058,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1965,
									"end": 1968,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1955,
									"end": 1963,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1952,
									"end": 1969,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1949,
									"end": 1951,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1949,
									"end": 1951,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 1949,
									"end": 1951,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1972,
									"end": 1990,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 1972,
									"end": 1990,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 1972,
									"end": 1990,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1972,
									"end": 1990,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 1972,
									"end": 1990,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2028,
									"end": 2029,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2014,
									"end": 2030,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2014,
									"end": 2030,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2043,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 2043,
									"end": 2048,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1840,
									"end": 2058,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 1840,
									"end": 2058,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1840,
									"end": 2058,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2142,
									"end": 2144,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2132,
									"end": 2140,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2129,
									"end": 2145,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2123,
									"end": 2126,
									"name": "PUSH",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 2117,
									"end": 2121,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2114,
									"end": 2127,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2110,
									"end": 2146,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2104,
									"end": 2106,
									"name": "PUSH",
									"source": 8,
									"value": "4E"
								},
								{
									"begin": 2094,
									"end": 2102,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2091,
									"end": 2107,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2086,
									"end": 2088,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 2080,
									"end": 2084,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2077,
									"end": 2089,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2073,
									"end": 2108,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2070,
									"end": 2147,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2067,
									"end": 2069,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2067,
									"end": 2069,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 2067,
									"end": 2069,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2179,
									"end": 2198,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2179,
									"end": 2198,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2179,
									"end": 2198,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2216,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 2211,
									"end": 2216,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2067,
									"end": 2069,
									"name": "tag",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 2067,
									"end": 2069,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2258,
									"end": 2292,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 2283,
									"end": 2291,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2258,
									"end": 2292,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 2258,
									"end": 2292,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2258,
									"end": 2292,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 2258,
									"end": 2292,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2328,
									"end": 2334,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2324,
									"end": 2325,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2320,
									"end": 2326,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2335,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2307,
									"end": 2314,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2304,
									"end": 2336,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2301,
									"end": 2303,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2301,
									"end": 2303,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 2301,
									"end": 2303,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2339,
									"end": 2357,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 2339,
									"end": 2357,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2339,
									"end": 2357,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2339,
									"end": 2357,
									"name": "tag",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 2339,
									"end": 2357,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2377,
									"end": 2397,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2377,
									"end": 2397,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1656,
									"end": 2403,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 1656,
									"end": 2403,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1656,
									"end": 2403,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1656,
									"end": 2403,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1656,
									"end": 2403,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1656,
									"end": 2403,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1656,
									"end": 2403,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 2408,
									"end": 2576,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 2408,
									"end": 2576,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2448,
									"end": 2455,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2514,
									"end": 2515,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2510,
									"end": 2511,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2506,
									"end": 2512,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2502,
									"end": 2516,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2499,
									"end": 2500,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2496,
									"end": 2517,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2491,
									"end": 2492,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2484,
									"end": 2493,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2477,
									"end": 2494,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2473,
									"end": 2518,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2470,
									"end": 2472,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2470,
									"end": 2472,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 2470,
									"end": 2472,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2539,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 2521,
									"end": 2539,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2521,
									"end": 2539,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2521,
									"end": 2539,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 2521,
									"end": 2539,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2561,
									"end": 2570,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2561,
									"end": 2570,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2460,
									"end": 2576,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 2581,
									"end": 2961,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 2581,
									"end": 2961,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2660,
									"end": 2661,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2656,
									"end": 2668,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2656,
									"end": 2668,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2656,
									"end": 2668,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2656,
									"end": 2668,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2703,
									"end": 2715,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2703,
									"end": 2715,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2703,
									"end": 2715,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2724,
									"end": 2726,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2724,
									"end": 2726,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2778,
									"end": 2782,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 2770,
									"end": 2776,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2766,
									"end": 2783,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2756,
									"end": 2783,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2756,
									"end": 2783,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2724,
									"end": 2726,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2724,
									"end": 2726,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2831,
									"end": 2833,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2823,
									"end": 2829,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2820,
									"end": 2834,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2800,
									"end": 2818,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2797,
									"end": 2835,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2794,
									"end": 2796,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2794,
									"end": 2796,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 2794,
									"end": 2796,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2877,
									"end": 2887,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 2872,
									"end": 2875,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 2868,
									"end": 2888,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2865,
									"end": 2866,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2858,
									"end": 2889,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 2916,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2909,
									"end": 2910,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2902,
									"end": 2917,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2940,
									"end": 2944,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2937,
									"end": 2938,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2945,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2794,
									"end": 2796,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 2794,
									"end": 2796,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2794,
									"end": 2796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2636,
									"end": 2961,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2636,
									"end": 2961,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2636,
									"end": 2961,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2636,
									"end": 2961,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 2966,
									"end": 3093,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2966,
									"end": 3093,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3027,
									"end": 3037,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 3022,
									"end": 3025,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 3018,
									"end": 3038,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3015,
									"end": 3016,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3008,
									"end": 3039,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3058,
									"end": 3062,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 3055,
									"end": 3056,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3048,
									"end": 3063,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3082,
									"end": 3086,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3079,
									"end": 3080,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3072,
									"end": 3087,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2998,
									"end": 3093,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2998,
									"end": 3093,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 181,
									"end": 808,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 808,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122054385bf6dd49fe0ef092753c768753e9de904e307e7b7692279c63693bc03c5764736f6c63430008050033",
									".code": [
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "79CC6790"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "8456CB59"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "3F4BA83A"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "40C10F19"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "42966C68"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "5C975ABB"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 808,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1812,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1812,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1791,
											"end": 1813,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1773,
											"end": 1814,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1773,
											"end": 1814,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1761,
											"end": 1763,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 1764,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1728,
											"end": 1820,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7989,
											"end": 8014,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7989,
											"end": 8014,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7989,
											"end": 8014,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7977,
											"end": 7979,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7962,
											"end": 7980,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7944,
											"end": 8020,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3166,
											"end": 3261,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3166,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3251,
											"end": 3253,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3166,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3166,
											"end": 3261,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 440,
											"end": 505,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 440,
											"end": 505,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 440,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 440,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 440,
											"end": 505,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 440,
											"end": 505,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 440,
											"end": 505,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 440,
											"end": 505,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 513,
											"end": 598,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 513,
											"end": 598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 513,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 513,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 513,
											"end": 598,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 513,
											"end": 598,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 513,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 513,
											"end": 598,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 513,
											"end": 598,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 513,
											"end": 598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 513,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 513,
											"end": 598,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 590,
											"end": 681,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 590,
											"end": 681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 590,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 590,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 590,
											"end": 681,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 590,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 590,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 590,
											"end": 681,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 590,
											"end": 681,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 590,
											"end": 681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 590,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 590,
											"end": 681,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1130,
											"end": 1216,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1130,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1130,
											"end": 1216,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1000,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1000,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1000,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1000,
											"end": 1164,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1000,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1000,
											"end": 1164,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1000,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1000,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1000,
											"end": 1164,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 371,
											"end": 432,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 371,
											"end": 432,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 371,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 371,
											"end": 432,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1589,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1621,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1621,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1571,
											"end": 1622,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1571,
											"end": 1622,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1559,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1544,
											"end": 1562,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1526,
											"end": 1628,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2258,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2291,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4640,
											"end": 4644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4696,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4712,
											"end": 4719,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4721,
											"end": 4727,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4696,
											"end": 4728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4696,
											"end": 4728,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4696,
											"end": 4728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4746,
											"end": 4750,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4746,
											"end": 4750,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5469,
											"end": 5473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5527,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5543,
											"end": 5547,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5564,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 5527,
											"end": 5565,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5527,
											"end": 5565,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5527,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5576,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5586,
											"end": 5590,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5592,
											"end": 5594,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5602,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5576,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 5576,
											"end": 5603,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5576,
											"end": 5603,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5576,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6186,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6209,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6239,
											"end": 6249,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6209,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6211,
											"end": 6236,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6211,
											"end": 6236,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 6211,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6186,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6186,
											"end": 6250,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 440,
											"end": 505,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 440,
											"end": 505,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 487,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 487,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 487,
											"end": 497,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 487,
											"end": 497,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 487,
											"end": 497,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 440,
											"end": 505,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 513,
											"end": 598,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 513,
											"end": 598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 573,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 579,
											"end": 581,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 583,
											"end": 589,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 573,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 573,
											"end": 590,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 573,
											"end": 590,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 573,
											"end": 590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 513,
											"end": 598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 513,
											"end": 598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 513,
											"end": 598,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 590,
											"end": 681,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 590,
											"end": 681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 646,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 666,
											"end": 672,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 646,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 646,
											"end": 673,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 646,
											"end": 673,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 646,
											"end": 673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 590,
											"end": 681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 590,
											"end": 681,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1000,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1000,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1093,
											"end": 1100,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1122,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1077,
											"end": 1123,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1077,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1140,
											"end": 1147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1155,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1134,
											"end": 1156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 371,
											"end": 432,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 371,
											"end": 432,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 416,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 416,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 416,
											"end": 424,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2492,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2512,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6876,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6959,
											"end": 6984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6976,
											"end": 6983,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6959,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6959,
											"end": 6984,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6959,
											"end": 6984,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6959,
											"end": 6984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6932,
											"end": 6984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6932,
											"end": 6984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7023,
											"end": 7038,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7038,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7038,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7281,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7261,
											"end": 7282,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7318,
											"end": 7320,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 7298,
											"end": 7316,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7298,
											"end": 7316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7298,
											"end": 7316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7291,
											"end": 7321,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7357,
											"end": 7391,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 7337,
											"end": 7355,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7337,
											"end": 7355,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7337,
											"end": 7355,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7330,
											"end": 7392,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7408,
											"end": 7426,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7408,
											"end": 7426,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7408,
											"end": 7426,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7401,
											"end": 7436,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7453,
											"end": 7472,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7453,
											"end": 7472,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7251,
											"end": 7478,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 7125,
											"end": 7130,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7132,
											"end": 7139,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7157,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7116,
											"end": 7176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3965,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3982,
											"end": 3984,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3965,
											"end": 3993,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4175,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3787,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3788,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3824,
											"end": 3826,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3797,
											"end": 3827,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3863,
											"end": 3897,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3843,
											"end": 3861,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3843,
											"end": 3861,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3843,
											"end": 3861,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 3898,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3914,
											"end": 3932,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3914,
											"end": 3932,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 3932,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3907,
											"end": 3943,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 3979,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3960,
											"end": 3979,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3757,
											"end": 3985,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2156,
											"end": 2164,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12141,
											"end": 12266,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 12141,
											"end": 12266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12266,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10553,
											"end": 10572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10553,
											"end": 10572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6874,
											"end": 6876,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6856,
											"end": 6877,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6913,
											"end": 6915,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6893,
											"end": 6911,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6893,
											"end": 6911,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6893,
											"end": 6911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6886,
											"end": 6916,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6952,
											"end": 6986,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6925,
											"end": 6987,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7003,
											"end": 7021,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7003,
											"end": 7021,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7003,
											"end": 7021,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7047,
											"end": 7066,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7047,
											"end": 7066,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6846,
											"end": 7072,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10632,
											"end": 10653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10632,
											"end": 10653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4192,
											"end": 4194,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4174,
											"end": 4195,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4231,
											"end": 4233,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4204,
											"end": 4234,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4270,
											"end": 4304,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4243,
											"end": 4305,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4321,
											"end": 4339,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4321,
											"end": 4339,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4321,
											"end": 4339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4346,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4363,
											"end": 4382,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4363,
											"end": 4382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4164,
											"end": 4388,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10741,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10741,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7989,
											"end": 8014,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7989,
											"end": 8014,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7989,
											"end": 8014,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7962,
											"end": 7980,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11223,
											"end": 11247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11250,
											"end": 11275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 11260,
											"end": 11265,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11274,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11250,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 11250,
											"end": 11275,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11250,
											"end": 11275,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 11250,
											"end": 11275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11223,
											"end": 11275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11223,
											"end": 11275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11290,
											"end": 11306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11290,
											"end": 11327,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 11286,
											"end": 11534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11372,
											"end": 11378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11352,
											"end": 11368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11352,
											"end": 11378,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11352,
											"end": 11378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4597,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4577,
											"end": 4598,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4634,
											"end": 4636,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 4614,
											"end": 4632,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4614,
											"end": 4632,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4614,
											"end": 4632,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4607,
											"end": 4637,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4704,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4653,
											"end": 4671,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4653,
											"end": 4671,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4653,
											"end": 4671,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4705,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4722,
											"end": 4740,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4722,
											"end": 4740,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4567,
											"end": 4746,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11456,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 11465,
											"end": 11470,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11472,
											"end": 11479,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11500,
											"end": 11506,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11481,
											"end": 11497,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11481,
											"end": 11506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11456,
											"end": 11464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 11456,
											"end": 11507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11456,
											"end": 11507,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 11456,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11212,
											"end": 11541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7698,
											"end": 8369,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 7698,
											"end": 8369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7829,
											"end": 7847,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7829,
											"end": 7847,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6470,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6450,
											"end": 6471,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6507,
											"end": 6509,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 6487,
											"end": 6505,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6487,
											"end": 6505,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6487,
											"end": 6505,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6480,
											"end": 6510,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6546,
											"end": 6580,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 6526,
											"end": 6544,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6526,
											"end": 6544,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6526,
											"end": 6544,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6581,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6597,
											"end": 6615,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6597,
											"end": 6615,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6597,
											"end": 6615,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6590,
											"end": 6625,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6642,
											"end": 6661,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 6642,
											"end": 6661,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6440,
											"end": 6667,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7908,
											"end": 7924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7908,
											"end": 7924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2631,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 2632,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2641,
											"end": 2671,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2741,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2742,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2751,
											"end": 2784,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2801,
											"end": 2820,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2801,
											"end": 2820,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2601,
											"end": 2826,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7977,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 7998,
											"end": 8002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8006,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8008,
											"end": 8014,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7977,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 7977,
											"end": 8015,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7977,
											"end": 8015,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 7977,
											"end": 8015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8028,
											"end": 8047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8105,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8105,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4955,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4935,
											"end": 4956,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 4994,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4965,
											"end": 4995,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5031,
											"end": 5065,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5011,
											"end": 5029,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5011,
											"end": 5029,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5029,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5004,
											"end": 5066,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5075,
											"end": 5111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5147,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5128,
											"end": 5147,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4925,
											"end": 5153,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8222,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8222,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8222,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8222,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8294,
											"end": 8298,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8304,
											"end": 8310,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7989,
											"end": 8014,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7989,
											"end": 8014,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7977,
											"end": 7979,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7962,
											"end": 7980,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7962,
											"end": 7980,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7944,
											"end": 8020,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8324,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 12141,
											"end": 12266,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2309,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2189,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1725,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 1725,
											"end": 1766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1725,
											"end": 1766,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1766,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1725,
											"end": 1766,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1725,
											"end": 1766,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3035,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1725,
											"end": 1766,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1725,
											"end": 1766,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1725,
											"end": 1766,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3036,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3072,
											"end": 3074,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3075,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3091,
											"end": 3109,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3091,
											"end": 3109,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3091,
											"end": 3109,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 3005,
											"end": 3175,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1766,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 1725,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2248,
											"end": 2263,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2248,
											"end": 2263,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2248,
											"end": 2263,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2248,
											"end": 2263,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2248,
											"end": 2263,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2301,
											"name": "PUSH",
											"source": 7,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2300,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2288,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2301,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2279,
											"end": 2301,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1589,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1621,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1621,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1571,
											"end": 1622,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1571,
											"end": 1622,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1559,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1544,
											"end": 1562,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2301,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2279,
											"end": 2301,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2301,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2301,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2301,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2301,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2301,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2189,
											"end": 2309,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8656,
											"end": 9055,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 8656,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8740,
											"end": 8761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8740,
											"end": 8761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8732,
											"end": 8797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 8732,
											"end": 8797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8732,
											"end": 8797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8732,
											"end": 8797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8732,
											"end": 8797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8732,
											"end": 8797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7687,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8732,
											"end": 8797,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8732,
											"end": 8797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8732,
											"end": 8797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7667,
											"end": 7688,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7724,
											"end": 7726,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7704,
											"end": 7722,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7704,
											"end": 7722,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7704,
											"end": 7722,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7697,
											"end": 7727,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7763,
											"end": 7796,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7743,
											"end": 7761,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7743,
											"end": 7761,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7743,
											"end": 7761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7736,
											"end": 7797,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7814,
											"end": 7832,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7814,
											"end": 7832,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8732,
											"end": 8797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7657,
											"end": 7838,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8732,
											"end": 8797,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 8732,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8810,
											"end": 8859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8839,
											"end": 8840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8843,
											"end": 8850,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8852,
											"end": 8858,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8810,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 8810,
											"end": 8859,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8810,
											"end": 8859,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8810,
											"end": 8859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8888,
											"end": 8894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8872,
											"end": 8884,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8872,
											"end": 8884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8905,
											"end": 8923,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8923,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8905,
											"end": 8923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8923,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8905,
											"end": 8923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8905,
											"end": 8923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8923,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8933,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 8905,
											"end": 8933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 8905,
											"end": 8933,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8905,
											"end": 8933,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 8905,
											"end": 8933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8933,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8949,
											"end": 8986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8949,
											"end": 8986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7989,
											"end": 8014,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7989,
											"end": 8014,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7989,
											"end": 8014,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8949,
											"end": 8986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8949,
											"end": 8986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8949,
											"end": 8986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8966,
											"end": 8967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8966,
											"end": 8967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8949,
											"end": 8986,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8949,
											"end": 8986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7977,
											"end": 7979,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7962,
											"end": 7980,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8949,
											"end": 8986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8949,
											"end": 8986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8949,
											"end": 8986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8949,
											"end": 8986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8949,
											"end": 8986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8949,
											"end": 8986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8949,
											"end": 8986,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 513,
											"end": 598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 513,
											"end": 598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 513,
											"end": 598,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9388,
											"end": 9979,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 9388,
											"end": 9979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9472,
											"end": 9493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9472,
											"end": 9493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9464,
											"end": 9531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 9464,
											"end": 9531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9464,
											"end": 9531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9464,
											"end": 9531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9464,
											"end": 9531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9464,
											"end": 9531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6066,
											"end": 6068,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9464,
											"end": 9531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9464,
											"end": 9531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9464,
											"end": 9531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6048,
											"end": 6069,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 6085,
											"end": 6103,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6085,
											"end": 6103,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6085,
											"end": 6103,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6078,
											"end": 6108,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6144,
											"end": 6178,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6117,
											"end": 6179,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6195,
											"end": 6213,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6195,
											"end": 6213,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6195,
											"end": 6213,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6188,
											"end": 6219,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6236,
											"end": 6255,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 6236,
											"end": 6255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9464,
											"end": 9531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6038,
											"end": 6261,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9464,
											"end": 9531,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 9464,
											"end": 9531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9544,
											"end": 9593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 9565,
											"end": 9572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9582,
											"end": 9583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9586,
											"end": 9592,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9544,
											"end": 9564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 9544,
											"end": 9593,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9544,
											"end": 9593,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 9544,
											"end": 9593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9631,
											"end": 9649,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9631,
											"end": 9649,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9606,
											"end": 9628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9631,
											"end": 9649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9631,
											"end": 9649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9631,
											"end": 9649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9631,
											"end": 9649,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9631,
											"end": 9649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9631,
											"end": 9649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9631,
											"end": 9649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9631,
											"end": 9649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9631,
											"end": 9649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9631,
											"end": 9649,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9631,
											"end": 9649,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9668,
											"end": 9692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9668,
											"end": 9692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9668,
											"end": 9692,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9668,
											"end": 9692,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9660,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 9660,
											"end": 9731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9660,
											"end": 9731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9660,
											"end": 9731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9660,
											"end": 9731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9660,
											"end": 9731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3384,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9660,
											"end": 9731,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9660,
											"end": 9731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9660,
											"end": 9731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3385,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3423,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3401,
											"end": 3419,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3401,
											"end": 3419,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3401,
											"end": 3419,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3424,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3460,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3433,
											"end": 3495,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3511,
											"end": 3529,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3511,
											"end": 3529,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3511,
											"end": 3529,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3504,
											"end": 3536,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9660,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3354,
											"end": 3578,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9660,
											"end": 9731,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 9660,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9767,
											"end": 9776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9788,
											"end": 9811,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9788,
											"end": 9811,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9788,
											"end": 9811,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9767,
											"end": 9811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9767,
											"end": 9811,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9845,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9833,
											"end": 9855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9855,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9767,
											"end": 9776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 9833,
											"end": 9855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 9833,
											"end": 9855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9833,
											"end": 9855,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 9833,
											"end": 9855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9855,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9873,
											"end": 9910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9873,
											"end": 9910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7989,
											"end": 8014,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7989,
											"end": 8014,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7989,
											"end": 8014,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9899,
											"end": 9900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9899,
											"end": 9900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9873,
											"end": 9910,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9873,
											"end": 9910,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9873,
											"end": 9910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9873,
											"end": 9910,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9873,
											"end": 9910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7977,
											"end": 7979,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7962,
											"end": 7980,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9873,
											"end": 9910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9873,
											"end": 9910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9873,
											"end": 9910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9873,
											"end": 9910,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9873,
											"end": 9910,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9873,
											"end": 9910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9873,
											"end": 9910,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12266,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 6,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1930,
											"end": 2048,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1930,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1464,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5360,
											"end": 5362,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5342,
											"end": 5363,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5401,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 5379,
											"end": 5397,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5379,
											"end": 5397,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5379,
											"end": 5397,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5402,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5418,
											"end": 5436,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5418,
											"end": 5436,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5436,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5411,
											"end": 5457,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 5332,
											"end": 5498,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1990,
											"end": 1997,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2004,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2040,
											"name": "PUSH",
											"source": 7,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2027,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 736,
											"end": 746,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 606,
											"end": 805,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 606,
											"end": 805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1464,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5360,
											"end": 5362,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5342,
											"end": 5363,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5401,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 5379,
											"end": 5397,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5379,
											"end": 5397,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5379,
											"end": 5397,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5402,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5418,
											"end": 5436,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5418,
											"end": 5436,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5436,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5411,
											"end": 5457,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1447,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 5332,
											"end": 5498,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 63,
											"end": 187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 63,
											"end": 187,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 262,
											"end": 378,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 262,
											"end": 378,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 480,
											"end": 482,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 480,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 480,
											"end": 482,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 480,
											"end": 482,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 480,
											"end": 482,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 470,
											"end": 643,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 470,
											"end": 643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 470,
											"end": 643,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 470,
											"end": 643,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 470,
											"end": 643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 470,
											"end": 643,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 762,
											"end": 764,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 762,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 762,
											"end": 764,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 762,
											"end": 764,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 762,
											"end": 764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 752,
											"end": 976,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 752,
											"end": 976,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 752,
											"end": 976,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 752,
											"end": 976,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 752,
											"end": 976,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 752,
											"end": 976,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1068,
											"end": 1235,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1240,
											"end": 1420,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1240,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1299,
											"end": 1305,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1354,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1349,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1338,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1327,
											"end": 1350,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1355,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1322,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 1320,
											"end": 1322,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1322,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 1320,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1414,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1414,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1420,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1310,
											"end": 1420,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1825,
											"end": 2422,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1825,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1937,
											"end": 1941,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1968,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1995,
											"end": 1997,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1984,
											"end": 1993,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1998,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2034,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2070,
											"end": 2076,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2067,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2054,
											"end": 2063,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2050,
											"end": 2068,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2043,
											"end": 2077,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2096,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2119,
											"end": 2125,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2116,
											"end": 2117,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2126,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2214,
											"end": 2228,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2214,
											"end": 2228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2214,
											"end": 2228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2233,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2233,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2204,
											"end": 2234,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2180,
											"end": 2197,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2180,
											"end": 2197,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2180,
											"end": 2197,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2201,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2176,
											"end": 2202,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2169,
											"end": 2235,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2134,
											"end": 2144,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2134,
											"end": 2144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2261,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2270,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2254,
											"end": 2256,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2254,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 2254,
											"end": 2256,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2334,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2330,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2325,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2308,
											"end": 2317,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2304,
											"end": 2326,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2331,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2335,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2254,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 2254,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2406,
											"end": 2408,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2385,
											"end": 2400,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2381,
											"end": 2410,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2411,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2411,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2411,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2415,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2362,
											"end": 2416,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2362,
											"end": 2416,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 2422,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1946,
											"end": 2422,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5503,
											"end": 5859,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 5503,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5705,
											"end": 5707,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5687,
											"end": 5708,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5687,
											"end": 5708,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5687,
											"end": 5708,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5724,
											"end": 5742,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5724,
											"end": 5742,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5724,
											"end": 5742,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5747,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5783,
											"end": 5817,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5763,
											"end": 5781,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5781,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5756,
											"end": 5818,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5850,
											"end": 5852,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5835,
											"end": 5853,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5835,
											"end": 5853,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5677,
											"end": 5859,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8025,
											"end": 8153,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 8025,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8068,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8096,
											"end": 8097,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8092,
											"end": 8098,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 8089,
											"end": 8090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8086,
											"end": 8099,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8083,
											"end": 8085,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8083,
											"end": 8085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 8083,
											"end": 8085,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8102,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 8102,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 8102,
											"end": 8120,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8102,
											"end": 8120,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 8102,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8138,
											"end": 8147,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8138,
											"end": 8147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8073,
											"end": 8153,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8158,
											"end": 8283,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 8158,
											"end": 8283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8198,
											"end": 8202,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8227,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8223,
											"end": 8224,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8228,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8217,
											"end": 8219,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8217,
											"end": 8219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 8217,
											"end": 8219,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8268,
											"end": 8277,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8268,
											"end": 8277,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8207,
											"end": 8283,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8288,
											"end": 8668,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 8288,
											"end": 8668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8367,
											"end": 8368,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8363,
											"end": 8375,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8363,
											"end": 8375,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8363,
											"end": 8375,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 8363,
											"end": 8375,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8410,
											"end": 8422,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8410,
											"end": 8422,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8410,
											"end": 8422,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8431,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 8431,
											"end": 8433,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8485,
											"end": 8489,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 8477,
											"end": 8483,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8490,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8463,
											"end": 8490,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8463,
											"end": 8490,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8431,
											"end": 8433,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 8431,
											"end": 8433,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8538,
											"end": 8540,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8530,
											"end": 8536,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8527,
											"end": 8541,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8507,
											"end": 8525,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8504,
											"end": 8542,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8501,
											"end": 8503,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8501,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 8501,
											"end": 8503,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 8594,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 8579,
											"end": 8582,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 8575,
											"end": 8595,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 8572,
											"end": 8573,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8565,
											"end": 8596,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8619,
											"end": 8623,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 8616,
											"end": 8617,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8609,
											"end": 8624,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8647,
											"end": 8651,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8644,
											"end": 8645,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8637,
											"end": 8652,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8501,
											"end": 8503,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 8501,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8501,
											"end": 8503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8673,
											"end": 8800,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 8673,
											"end": 8800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8734,
											"end": 8744,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 8729,
											"end": 8732,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 8725,
											"end": 8745,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 8722,
											"end": 8723,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8715,
											"end": 8746,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8765,
											"end": 8769,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 8762,
											"end": 8763,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8755,
											"end": 8770,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8789,
											"end": 8793,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8786,
											"end": 8787,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8779,
											"end": 8794,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/TitanToken.sol\":\"TitanToken\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/ERC20.sol\":{\"keccak256\":\"0x06de64a6e4f0f98aaf7bc91b3826b714e7ce7827a08da3031f8f2f91c14c5687\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79cb85a1ebbc907f8b80a26cfce98cd61eb1dfc5dbed47f2cc5f6e7a3e87d2db\",\"dweb:/ipfs/QmWzRXkG6oFwtNiGz98zduSDVYhnTKkCE5YMTVE15fBFse\"]},\"ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xabef7cdf0e1d800c26452949f60f3c79c16bccf4ea10cb216242b9df40c2fe1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c0145f12a950b664c844e87a8599e3eeb9d83f67758b06b8ee8d6e09b05e9c1\",\"dweb:/ipfs/Qmemrx4imD5KC3isN3WfgjyynxWxj64q4Lb62S22eAGnJn\"]},\"ERC20/IERC20.sol\":{\"keccak256\":\"0x62e7e272bf9d2c10b294645ea698d7fc41dadc18146ac88e9b9cc18514faacc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e09024b0f1ddb94bdc13008d4c221747b1a6f1e07b0ca599d8d213925982af34\",\"dweb:/ipfs/QmcL6X4KCFc45tk5xSEgBDFUrsKap8G74aJtti5sUYzYCL\"]},\"ERC20/IERC20Metadata.sol\":{\"keccak256\":\"0x2095e6b6cd9fc67a55c1dce6c4a4282036fef487baf848e399adc2f571f6c47b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbdbc5c7af217e674e7c45ab729cf3ffe1c2756c4438e5818f39f30266b836e2\",\"dweb:/ipfs/QmPkmQQ6bAVYGRKR1KMqRhU1kPL49aFc5zqCLmJZEMsavE\"]},\"ERC20/TitanToken.sol\":{\"keccak256\":\"0x44d07a775f7505d99ec2e5da1932deeebd49e6c78b5a08af474f185bb88f1ac4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58054cb72ec8ccce9ef943328c3b816b8bdc27c47a2a7ed67daf6bde2194b7b\",\"dweb:/ipfs/QmeWjAUJE59pnmspDThnFfGHPVwEQqtzjFvVZAKdSYtCbf\"]},\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"Utils/Ownable.sol\":{\"keccak256\":\"0x5eeb86897007c578f301464fceac720c7330486c54ae85c0c09068b46197cfb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edefd9ff4f087a3016763a687eaae449c0e8f6dcda9d86032a49de900f129050\",\"dweb:/ipfs/Qmc4adiPdGKgEJLxqgd8JuKkwrNBNtB78kkGinnnuUnyJN\"]},\"Utils/Pausable.sol\":{\"keccak256\":\"0x4537e3414aa00aef5f09d492f339302326635bc79e5435e62101fb8cf0afbbe0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38c691ac261a8298ac4eb0e5128902811cb26867fafc3adec06b9b824a3a08d5\",\"dweb:/ipfs/QmXrwXWLMs3FbczKPZnWJf1XezesQX94K2VXNchQCTGUuQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "ERC20/TitanToken.sol:TitanToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "ERC20/TitanToken.sol:TitanToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "ERC20/TitanToken.sol:TitanToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "ERC20/TitanToken.sol:TitanToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "ERC20/TitanToken.sol:TitanToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 963,
								"contract": "ERC20/TitanToken.sol:TitanToken",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 848,
								"contract": "ERC20/TitanToken.sol:TitanToken",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/Context.sol\":\"Context\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"Utils/Ownable.sol\":{\"keccak256\":\"0x5eeb86897007c578f301464fceac720c7330486c54ae85c0c09068b46197cfb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edefd9ff4f087a3016763a687eaae449c0e8f6dcda9d86032a49de900f129050\",\"dweb:/ipfs/Qmc4adiPdGKgEJLxqgd8JuKkwrNBNtB78kkGinnnuUnyJN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 848,
								"contract": "Utils/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"Utils/Pausable.sol\":{\"keccak256\":\"0x4537e3414aa00aef5f09d492f339302326635bc79e5435e62101fb8cf0afbbe0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38c691ac261a8298ac4eb0e5128902811cb26867fafc3adec06b9b824a3a08d5\",\"dweb:/ipfs/QmXrwXWLMs3FbczKPZnWJf1XezesQX94K2VXNchQCTGUuQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 963,
								"contract": "Utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							840
						],
						"ERC20": [
							585
						],
						"IERC20": [
							707
						],
						"IERC20Metadata": [
							732
						]
					},
					"id": 586,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 708,
							"src": "135:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20/IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 733,
							"src": "159:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/Context.sol",
							"file": "../Utils/Context.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 841,
							"src": "191:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 840,
										"src": "1442:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "1442:7:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 707,
										"src": "1451:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "1451:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 732,
										"src": "1459:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1459:14:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "225:1197:0",
								"text": " @dev Implementation of the {IERC20} interface.\nz\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 585,
							"linearizedBaseContracts": [
								585,
								732,
								707,
								840
							],
							"name": "ERC20",
							"nameLocation": "1433:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1517:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1481:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1489:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1481:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1500:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1591:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1535:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1543:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1535:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 19,
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1554:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1573:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1627:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1611:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1611:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1663:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1648:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1648:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1690:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1675:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1675:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2074:60:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2085:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 36,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2093:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2085:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2085:13:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2109:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2119:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2109:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2109:17:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1706:306:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2044:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2030:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2030:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2065:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2051:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 31,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2051:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:44:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2074:0:0"
									},
									"scope": 585,
									"src": "2018:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										719
									],
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2273:31:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2291:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "2284:12:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2142:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2213:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 47,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2240:8:0"
									},
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2217:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2258:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 48,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2258:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2257:15:0"
									},
									"scope": 585,
									"src": "2204:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										725
									],
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "2494:33:0",
										"statements": [
											{
												"expression": {
													"id": 61,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 60,
												"id": 62,
												"nodeType": "Return",
												"src": "2505:14:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2312:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2432:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 57,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2461:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2438:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2479:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 58,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2479:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2478:15:0"
									},
									"scope": 585,
									"src": "2423:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										731
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3233:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3251:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "3244:9:0"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2535:625:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3175:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3206:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3183:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3224:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3223:9:0"
									},
									"scope": 585,
									"src": "3166:95:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										656
									],
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "3396:38:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "3414:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "3407:19:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3269:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3335:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 77,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3369:8:0"
									},
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3346:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3387:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3386:9:0"
									},
									"scope": 585,
									"src": "3326:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										664
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "3580:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 93,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "3598:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 95,
													"indexExpression": {
														"id": 94,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3608:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 96,
												"nodeType": "Return",
												"src": "3591:25:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3442:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3506:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3553:8:0"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3524:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3516:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3516:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3515:17:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3571:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3571:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3570:9:0"
									},
									"scope": 585,
									"src": "3497:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										674
									],
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3915:108:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3934:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3926:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3926:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "3942:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3942:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3926:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 115,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3975:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "3982:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3986:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 114,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3965:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3965:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3965:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4011:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 108,
												"id": 121,
												"nodeType": "Return",
												"src": "4004:11:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3632:192:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3839:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3891:8:0"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3856:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3848:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:28:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3909:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3909:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3908:6:0"
									},
									"scope": 585,
									"src": "3830:193:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										684
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4184:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 134,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4202:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4214:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4202:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"id": 137,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4221:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4202:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "4195:34:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "4031:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4095:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 130,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4157:8:0"
									},
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4113:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4105:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4128:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4120:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4120:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4104:32:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4175:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4174:9:0"
									},
									"scope": 585,
									"src": "4086:151:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										694
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4646:112:0",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4665:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 165,
														"src": "4657:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 152,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4657:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "4673:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4673:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4657:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4705:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4712:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4721:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "4696:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4696:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "4696:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4746:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 151,
												"id": 164,
												"nodeType": "Return",
												"src": "4739:11:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4245:306:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4566:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4622:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4582:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4574:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4599:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4591:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4573:33:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4640:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4640:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:6:0"
									},
									"scope": 585,
									"src": "4557:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5475:158:0",
										"statements": [
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5494:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "5486:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5486:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 181,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "5504:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5504:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5486:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5543:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5549:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5558:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "5527:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5527:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "5527:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5586:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5592:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5596:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 190,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "5576:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5576:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5576:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5621:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 178,
												"id": 197,
												"nodeType": "Return",
												"src": "5614:11:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4766:566:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5347:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5451:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5378:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5370:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5401:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5393:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5422:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5414:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5359:76:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5469:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5469:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5468:6:0"
									},
									"scope": 585,
									"src": "5338:295:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "6136:144:0",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6155:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "6147:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6147:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 211,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "6163:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6163:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6147:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "6195:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6202:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 218,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "6221:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 219,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "6228:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 217,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "6211:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6211:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 221,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "6239:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6211:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "6186:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6186:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "6186:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6268:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 208,
												"id": 226,
												"nodeType": "Return",
												"src": "6261:11:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5641:395:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6051:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6077:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6069:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6094:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6086:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6086:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6068:37:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6130:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6130:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6129:6:0"
									},
									"scope": 585,
									"src": "6042:238:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "6882:337:0",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6901:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6893:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 238,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6893:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 240,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "6909:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6909:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6893:28:0"
											},
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6940:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6932:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6932:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6969:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "6976:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "6959:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6959:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6932:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "7003:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 252,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "7023:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7003:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7040:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6995:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6995:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "6995:85:0"
											},
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "7091:97:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "7125:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 259,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "7132:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "7141:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 261,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "7160:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7141:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 257,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "7116:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7116:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 264,
														"nodeType": "ExpressionStatement",
														"src": "7116:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7207:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 237,
												"id": 267,
												"nodeType": "Return",
												"src": "7200:11:0"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6288:489:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6792:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6818:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6810:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6835:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6827:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6809:42:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6876:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6876:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6875:6:0"
									},
									"scope": 585,
									"src": "6783:436:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7810:559:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "7829:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7837:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 281,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7837:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7837:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7829:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7849:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7821:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "7821:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "7908:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7922:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7914:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7914:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7914:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7908:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7926:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7900:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7900:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "7900:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7998:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8004:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8008:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "7977:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7977:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "7977:38:0"
											},
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "8036:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "8028:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8028:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"baseExpression": {
														"id": 307,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "8050:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "8060:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8050:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8028:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "8084:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "8099:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8084:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8107:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8076:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8076:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "8076:72:0"
											},
											{
												"id": 326,
												"nodeType": "UncheckedBlock",
												"src": "8159:75:0",
												"statements": [
													{
														"expression": {
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 318,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "8184:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 320,
																"indexExpression": {
																	"id": 319,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "8194:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8184:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 321,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "8202:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 322,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "8216:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8202:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8184:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "8184:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 327,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8244:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 329,
														"indexExpression": {
															"id": 328,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8254:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8244:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 330,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "8261:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8244:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "8244:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8294:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8300:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8304:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "8285:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8285:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "8280:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8344:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8350:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8354:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8324:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8324:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "8324:37:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "7227:465:0",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7707:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7735:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7727:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7758:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7750:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7750:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7779:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7771:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7716:76:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7810:0:0"
									},
									"scope": 585,
									"src": "7698:671:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "8721:334:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "8740:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8759:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8751:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8751:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8740:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8763:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8732:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8732:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "8732:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8839:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8831:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8831:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8831:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8843:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8852:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "8810:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "8810:49:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8872:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 374,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8888:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8872:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "8872:22:0"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 377,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8905:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 379,
														"indexExpression": {
															"id": 378,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8915:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8905:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 380,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8927:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8905:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "8905:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8966:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8958:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 384,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8958:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8958:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8970:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8979:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 383,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "8949:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8949:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "EmitStatement",
												"src": "8944:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9027:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9019:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 393,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9019:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9019:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "9031:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "9040:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 392,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8999:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8999:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "8999:48:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "8377:273:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8665:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8679:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8671:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8671:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8696:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8688:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8688:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8670:33:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8721:0:0"
									},
									"scope": 585,
									"src": "8656:399:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "9453:526:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "9472:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9491:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9483:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 412,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9483:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9483:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9472:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9495:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9464:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9464:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "9464:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9565:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9582:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9574:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 422,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9574:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9574:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9586:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "9544:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9544:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "9544:49:0"
											},
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9614:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "9606:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 429,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9606:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"baseExpression": {
														"id": 431,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "9631:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 433,
													"indexExpression": {
														"id": 432,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "9641:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9631:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9606:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 436,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "9668:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 437,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "9686:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9668:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9694:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9660:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9660:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "9660:71:0"
											},
											{
												"id": 450,
												"nodeType": "UncheckedBlock",
												"src": "9742:81:0",
												"statements": [
													{
														"expression": {
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 442,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "9767:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 444,
																"indexExpression": {
																	"id": 443,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "9777:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9767:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 445,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "9788:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 446,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "9805:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9788:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9767:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 449,
														"nodeType": "ExpressionStatement",
														"src": "9767:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 451,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "9833:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 452,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "9849:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9833:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "9833:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 456,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9882:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9899:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9891:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9891:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9891:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9903:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 455,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "9873:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9873:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "EmitStatement",
												"src": "9868:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9943:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9960:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9952:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9952:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9952:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9964:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "9923:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9923:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "9923:48:0"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "9063:319:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9397:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9411:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "9403:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9428:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "9420:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9402:33:0"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9453:0:0"
									},
									"scope": 585,
									"src": "9388:591:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "10534:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 485,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "10553:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10570:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10562:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 486,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10562:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10562:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10553:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10574:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10545:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10545:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "10545:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "10632:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10651:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10643:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 496,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10643:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10643:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10632:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10655:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10624:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10624:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "10624:68:0"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 504,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "10705:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 507,
															"indexExpression": {
																"id": 505,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "10717:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10705:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 508,
														"indexExpression": {
															"id": 506,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10724:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10705:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 509,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "10735:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10705:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "10705:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "10766:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10773:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "10782:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 512,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "10757:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10757:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "EmitStatement",
												"src": "10752:37:0"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "9987:424:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10426:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10445:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10477:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10469:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10503:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10495:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10434:82:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10534:0:0"
									},
									"scope": 585,
									"src": "10417:380:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "11212:329:0",
										"statements": [
											{
												"assignments": [
													530
												],
												"declarations": [
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11231:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "11223:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 529,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11223:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 535,
												"initialValue": {
													"arguments": [
														{
															"id": 532,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "11260:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "11267:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 531,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "11250:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11250:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11223:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 536,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "11290:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11315:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 538,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11315:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 537,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11310:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11310:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11310:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11290:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "11286:248:0",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "11329:205:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 544,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 530,
																			"src": "11352:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 545,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "11372:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11352:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11380:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 543,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11344:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11344:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "11344:68:0"
														},
														{
															"id": 558,
															"nodeType": "UncheckedBlock",
															"src": "11427:96:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 551,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 522,
																				"src": "11465:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 552,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "11472:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 555,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 553,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "11481:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 554,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 526,
																					"src": "11500:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11481:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 550,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "11456:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11456:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 557,
																	"nodeType": "ExpressionStatement",
																	"src": "11456:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "10805:277:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11097:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11131:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "11123:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11155:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "11147:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11181:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "11173:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11112:82:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11212:0:0"
									},
									"scope": 585,
									"src": "11088:453:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "12264:2:0",
										"statements": []
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "11549:586:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12150:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12189:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "12181:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12212:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "12204:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12233:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "12225:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12170:76:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12264:0:0"
									},
									"scope": 585,
									"src": "12141:125:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "12992:2:0",
										"statements": []
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "12274:590:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12879:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12917:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12909:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12940:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12932:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12961:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12953:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12898:76:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12992:0:0"
									},
									"scope": 585,
									"src": "12870:124:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 586,
							"src": "1424:11573:0",
							"usedErrors": []
						}
					],
					"src": "108:12889:0"
				},
				"id": 0
			},
			"ERC20/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "ERC20/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							840
						],
						"ERC20": [
							585
						],
						"ERC20Burnable": [
							629
						],
						"IERC20": [
							707
						],
						"IERC20Metadata": [
							732
						]
					},
					"id": 630,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 587,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "127:23:1"
						},
						{
							"absolutePath": "ERC20/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 588,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 630,
							"sourceUnit": 586,
							"src": "154:21:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/Context.sol",
							"file": "../Utils/Context.sol",
							"id": 589,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 630,
							"sourceUnit": 841,
							"src": "177:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 591,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 840,
										"src": "460:7:1"
									},
									"id": 592,
									"nodeType": "InheritanceSpecifier",
									"src": "460:7:1"
								},
								{
									"baseName": {
										"id": 593,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 585,
										"src": "469:5:1"
									},
									"id": 594,
									"nodeType": "InheritanceSpecifier",
									"src": "469:5:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 590,
								"nodeType": "StructuredDocumentation",
								"src": "211:212:1",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": false,
							"id": 629,
							"linearizedBaseContracts": [
								629,
								585,
								732,
								707,
								840
							],
							"name": "ERC20Burnable",
							"nameLocation": "443:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "635:46:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 601,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "652:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "652:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 603,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "666:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 600,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "646:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "646:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "646:27:1"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "482:102:1",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "599:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "612:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "604:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "603:16:1"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "635:0:1"
									},
									"scope": 629,
									"src": "590:91:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "1066:98:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 616,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "1093:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 617,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "1102:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1102:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 619,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "1116:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 615,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "1077:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1077:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "1077:46:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 623,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "1140:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 624,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "1149:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 622,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "1134:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1134:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "1134:22:1"
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "689:305:1",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1009:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1026:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "1018:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1043:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "1035:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:33:1"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1066:0:1"
									},
									"scope": 629,
									"src": "1000:164:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 630,
							"src": "425:742:1",
							"usedErrors": []
						}
					],
					"src": "127:1040:1"
				},
				"id": 1
			},
			"ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							707
						]
					},
					"id": 708,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 631,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 632,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 707,
							"linearizedBaseContracts": [
								707
							],
							"name": "IERC20",
							"nameLocation": "220:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 641,
									"name": "Transfer",
									"nameLocation": "409:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "434:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "418:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "456:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "440:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "460:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:2"
									},
									"src": "403:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 650,
									"name": "Approval",
									"nameLocation": "646:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "655:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "694:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "678:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "711:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "703:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:2"
									},
									"src": "640:78:2"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:2"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "846:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:2"
									},
									"scope": 707,
									"src": "800:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "952:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "962:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:2"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "1002:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:2"
									},
									"scope": 707,
									"src": "943:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "1027:208:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 674,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1250:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1267:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "1259:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1259:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1279:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "1271:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:28:2"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "1305:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1305:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1304:6:2"
									},
									"scope": 707,
									"src": "1241:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "1319:270:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1604:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1622:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1614:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1637:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1629:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1629:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1613:32:2"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1669:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1668:9:2"
									},
									"scope": 707,
									"src": "1595:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "1686:655:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 694,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2356:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2372:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "2364:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2389:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "2381:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2381:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:33:2"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "2415:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 691,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2415:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2414:6:2"
									},
									"scope": 707,
									"src": "2347:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "2429:295:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2739:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2770:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "2762:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2762:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2793:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "2785:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2785:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2814:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "2806:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2806:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2751:76:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "2846:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 703,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2846:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2845:6:2"
									},
									"scope": 707,
									"src": "2730:122:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 708,
							"src": "210:2645:2",
							"usedErrors": []
						}
					],
					"src": "109:2748:2"
				},
				"id": 2
			},
			"ERC20/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "ERC20/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							707
						],
						"IERC20Metadata": [
							732
						]
					},
					"id": 733,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 709,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:3"
						},
						{
							"absolutePath": "ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 710,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 733,
							"sourceUnit": 708,
							"src": "140:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 712,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 707,
										"src": "316:6:3"
									},
									"id": 713,
									"nodeType": "InheritanceSpecifier",
									"src": "316:6:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 711,
								"nodeType": "StructuredDocumentation",
								"src": "166:120:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 732,
							"linearizedBaseContracts": [
								732,
								707
							],
							"name": "IERC20Metadata",
							"nameLocation": "298:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "330:56:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 719,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "401:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:2:3"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "431:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 716,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "431:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:15:3"
									},
									"scope": 732,
									"src": "392:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "454:58:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "527:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:2:3"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "559:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 722,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:15:3"
									},
									"scope": 732,
									"src": "518:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "582:67:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 731,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "664:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "672:2:3"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "698:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:9:3"
									},
									"scope": 732,
									"src": "655:52:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 733,
							"src": "288:422:3",
							"usedErrors": []
						}
					],
					"src": "113:599:3"
				},
				"id": 3
			},
			"ERC20/TitanToken.sol": {
				"ast": {
					"absolutePath": "ERC20/TitanToken.sol",
					"exportedSymbols": {
						"Context": [
							840
						],
						"ERC20": [
							585
						],
						"ERC20Burnable": [
							629
						],
						"IERC20": [
							707
						],
						"IERC20Metadata": [
							732
						],
						"Ownable": [
							945
						],
						"Pausable": [
							1037
						],
						"TitanToken": [
							818
						]
					},
					"id": 819,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 734,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "ERC20/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 735,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 819,
							"sourceUnit": 586,
							"src": "60:21:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20/ERC20Burnable.sol",
							"file": "./ERC20Burnable.sol",
							"id": 736,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 819,
							"sourceUnit": 630,
							"src": "83:29:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/Pausable.sol",
							"file": "../Utils/Pausable.sol",
							"id": 737,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 819,
							"sourceUnit": 1038,
							"src": "114:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/Ownable.sol",
							"file": "../Utils/Ownable.sol",
							"id": 738,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 819,
							"sourceUnit": 946,
							"src": "147:30:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 739,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 585,
										"src": "204:5:4"
									},
									"id": 740,
									"nodeType": "InheritanceSpecifier",
									"src": "204:5:4"
								},
								{
									"baseName": {
										"id": 741,
										"name": "ERC20Burnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 629,
										"src": "211:13:4"
									},
									"id": 742,
									"nodeType": "InheritanceSpecifier",
									"src": "211:13:4"
								},
								{
									"baseName": {
										"id": 743,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1037,
										"src": "226:8:4"
									},
									"id": 744,
									"nodeType": "InheritanceSpecifier",
									"src": "226:8:4"
								},
								{
									"baseName": {
										"id": 745,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 945,
										"src": "236:7:4"
									},
									"id": 746,
									"nodeType": "InheritanceSpecifier",
									"src": "236:7:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 818,
							"linearizedBaseContracts": [
								818,
								945,
								1037,
								629,
								585,
								732,
								707,
								840
							],
							"name": "TitanToken",
							"nameLocation": "190:10:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "294:69:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 754,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "311:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "311:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "313030303030303030303030",
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "323:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000_by_1",
																	"typeString": "int_const 100000000000"
																},
																"value": "100000000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "338:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 758,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 74,
																		"src": "344:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "344:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "338:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "323:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "305:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "305:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "305:50:4"
											}
										]
									},
									"id": 765,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "546974616e546f6b656e",
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "271:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0954a74f572ad8c8615834e1c29f8d01893355133fb8491ff982848786b76fde",
														"typeString": "literal_string \"TitanToken\""
													},
													"value": "TitanToken"
												},
												{
													"hexValue": "546974616e",
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "285:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_346f9ef1a9e35446b88cb522ec0c58d3e6389d5f7e2249e7cc2b9492d416747e",
														"typeString": "literal_string \"Titan\""
													},
													"value": "Titan"
												}
											],
											"id": 751,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 748,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 585,
												"src": "265:5:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "265:28:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "262:2:4"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:0:4"
									},
									"scope": 818,
									"src": "251:112:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "405:27:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 770,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "416:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "416:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "416:8:4"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 768,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 767,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 887,
												"src": "395:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "395:9:4"
										}
									],
									"name": "pause",
									"nameLocation": "380:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "385:2:4"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:0:4"
									},
									"scope": 818,
									"src": "371:61:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "476:29:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 779,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "487:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "487:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "487:10:4"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 777,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 776,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 887,
												"src": "466:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "466:9:4"
										}
									],
									"name": "unpause",
									"nameLocation": "449:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "456:2:4"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "476:0:4"
									},
									"scope": 818,
									"src": "440:65:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "562:36:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 791,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "579:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "583:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 790,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "573:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "573:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 794,
												"nodeType": "ExpressionStatement",
												"src": "573:17:4"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "522:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "535:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "527:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "547:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "539:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:28:4"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "562:0:4"
									},
									"scope": 818,
									"src": "513:85:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										573
									],
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "742:63:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 811,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "780:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 812,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "786:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 813,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "790:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 808,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "753:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TitanToken_$818_$",
																"typeString": "type(contract super TitanToken)"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 573,
														"src": "753:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "753:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "753:44:4"
											}
										]
									},
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 805,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 804,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 993,
												"src": "705:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "705:13:4"
										}
									],
									"name": "_beforeTokenTransfer",
									"nameLocation": "615:20:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 806,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "728:8:4"
									},
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "644:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "636:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "658:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "650:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "650:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "670:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "662:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:42:4"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "742:0:4"
									},
									"scope": 818,
									"src": "606:199:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 819,
							"src": "181:627:4",
							"usedErrors": []
						}
					],
					"src": "33:777:4"
				},
				"id": 4
			},
			"Utils/Context.sol": {
				"ast": {
					"absolutePath": "Utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							840
						]
					},
					"id": 841,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 820,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 821,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 840,
							"linearizedBaseContracts": [
								840
							],
							"name": "Context",
							"nameLocation": "641:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "718:36:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 826,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 825,
												"id": 828,
												"nodeType": "Return",
												"src": "729:17:5"
											}
										]
									},
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 840,
									"src": "656:98:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "829:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 835,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 834,
												"id": 837,
												"nodeType": "Return",
												"src": "840:15:5"
											}
										]
									},
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:5"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "813:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 832,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:5"
									},
									"scope": 840,
									"src": "762:101:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 841,
							"src": "623:243:5",
							"usedErrors": []
						}
					],
					"src": "89:779:5"
				},
				"id": 5
			},
			"Utils/Ownable.sol": {
				"ast": {
					"absolutePath": "Utils/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							840
						],
						"Ownable": [
							945
						]
					},
					"id": 946,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 842,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:6"
						},
						{
							"absolutePath": "Utils/Context.sol",
							"file": "./Context.sol",
							"id": 843,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 946,
							"sourceUnit": 841,
							"src": "117:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 845,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 840,
										"src": "680:7:6"
									},
									"id": 846,
									"nodeType": "InheritanceSpecifier",
									"src": "680:7:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 844,
								"nodeType": "StructuredDocumentation",
								"src": "144:505:6",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 945,
							"linearizedBaseContracts": [
								945,
								840
							],
							"name": "Ownable",
							"nameLocation": "669:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 848,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "711:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 945,
									"src": "695:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 847,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "695:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 854,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "753:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "784:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:6"
									},
									"src": "726:84:6"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "931:51:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 859,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "961:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "961:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 858,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "942:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "942:32:6"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "818:93:6",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 864,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "928:2:6"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "931:0:6"
									},
									"scope": 945,
									"src": "917:65:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "1118:32:6",
										"statements": [
											{
												"expression": {
													"id": 870,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 848,
													"src": "1136:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 869,
												"id": 871,
												"nodeType": "Return",
												"src": "1129:13:6"
											}
										]
									},
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "990:67:6",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1072:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1077:2:6"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "1109:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:9:6"
									},
									"scope": 945,
									"src": "1063:87:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "1264:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 877,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "1283:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1283:7:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 879,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "1294:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1294:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1283:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1308:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 876,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1275:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1275:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "1275:68:6"
											},
											{
												"id": 885,
												"nodeType": "PlaceholderStatement",
												"src": "1354:1:6"
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "1158:79:6",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 887,
									"name": "onlyOwner",
									"nameLocation": "1252:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1261:2:6"
									},
									"src": "1243:120:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "1768:49:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1806:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1798:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 894,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1798:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1798:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 893,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "1779:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1779:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "1779:30:6"
											}
										]
									},
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "1371:337:6",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 891,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 890,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 887,
												"src": "1758:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1758:9:6"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1723:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1740:2:6"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1768:0:6"
									},
									"scope": 945,
									"src": "1714:103:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "2042:131:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 910,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "2061:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2081:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2073:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 911,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2073:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2073:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2061:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2085:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 909,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2053:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2053:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "2053:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 920,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "2156:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 919,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "2137:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "2137:28:6"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "1825:141:6",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 907,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 906,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 887,
												"src": "2032:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2032:9:6"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1981:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2007:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "1999:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1999:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1998:18:6"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2042:0:6"
									},
									"scope": 945,
									"src": "1972:201:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "2396:128:6",
										"statements": [
											{
												"assignments": [
													931
												],
												"declarations": [
													{
														"constant": false,
														"id": 931,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2415:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 943,
														"src": "2407:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 930,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2407:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 933,
												"initialValue": {
													"id": 932,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 848,
													"src": "2426:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2407:25:6"
											},
											{
												"expression": {
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 934,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "2443:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 935,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "2452:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2443:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "2443:17:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 939,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "2497:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "2507:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 938,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "2476:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2476:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "EmitStatement",
												"src": "2471:45:6"
											}
										]
									},
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "2181:146:6",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2342:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2369:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "2361:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2360:18:6"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2396:0:6"
									},
									"scope": 945,
									"src": "2333:191:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 946,
							"src": "651:1876:6",
							"usedErrors": []
						}
					],
					"src": "90:2437:6"
				},
				"id": 6
			},
			"Utils/Pausable.sol": {
				"ast": {
					"absolutePath": "Utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							840
						],
						"Pausable": [
							1037
						]
					},
					"id": 1038,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 947,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:7"
						},
						{
							"absolutePath": "Utils/Context.sol",
							"file": "./Context.sol",
							"id": 948,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1038,
							"sourceUnit": 841,
							"src": "120:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 950,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 840,
										"src": "626:7:7"
									},
									"id": 951,
									"nodeType": "InheritanceSpecifier",
									"src": "626:7:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 949,
								"nodeType": "StructuredDocumentation",
								"src": "147:447:7",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1037,
							"linearizedBaseContracts": [
								1037,
								840
							],
							"name": "Pausable",
							"nameLocation": "614:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "641:75:7",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 956,
									"name": "Paused",
									"nameLocation": "728:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "743:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "735:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "735:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "734:17:7"
									},
									"src": "722:30:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "760:72:7",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 961,
									"name": "Unpaused",
									"nameLocation": "844:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "861:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "853:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:17:7"
									},
									"src": "838:32:7"
								},
								{
									"constant": false,
									"id": 963,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "891:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1037,
									"src": "878:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 962,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "878:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "996:34:7",
										"statements": [
											{
												"expression": {
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 967,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "1007:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1017:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1007:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "1007:15:7"
											}
										]
									},
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "907:69:7",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 972,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "993:2:7"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "996:0:7"
									},
									"scope": 1037,
									"src": "982:48:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "1183:33:7",
										"statements": [
											{
												"expression": {
													"id": 978,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 963,
													"src": "1201:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 977,
												"id": 979,
												"nodeType": "Return",
												"src": "1194:14:7"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "1038:86:7",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1139:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1145:2:7"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1177:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 975,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1177:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:6:7"
									},
									"scope": 1037,
									"src": "1130:86:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "1436:69:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1455:9:7",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 985,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "1456:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1456:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1466:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 984,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1447:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1447:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "1447:38:7"
											},
											{
												"id": 991,
												"nodeType": "PlaceholderStatement",
												"src": "1496:1:7"
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "1224:181:7",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 993,
									"name": "whenNotPaused",
									"nameLocation": "1420:13:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1433:2:7"
									},
									"src": "1411:94:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "1714:72:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 997,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 981,
																"src": "1733:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1733:8:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1743:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 996,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1725:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1725:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "1725:41:7"
											},
											{
												"id": 1002,
												"nodeType": "PlaceholderStatement",
												"src": "1777:1:7"
											}
										]
									},
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "1513:173:7",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1004,
									"name": "whenPaused",
									"nameLocation": "1701:10:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1711:2:7"
									},
									"src": "1692:94:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "1979:69:7",
										"statements": [
											{
												"expression": {
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1010,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "1990:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2000:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1990:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "1990:14:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1015,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "2027:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2027:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1014,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "2020:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2020:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1018,
												"nodeType": "EmitStatement",
												"src": "2015:25:7"
											}
										]
									},
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "1794:130:7",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1008,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1007,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 993,
												"src": "1965:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1965:13:7"
										}
									],
									"name": "_pause",
									"nameLocation": "1939:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:2:7"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1979:0:7"
									},
									"scope": 1037,
									"src": "1930:118:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "2237:72:7",
										"statements": [
											{
												"expression": {
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1026,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "2248:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2258:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2248:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "2248:15:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1031,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "2288:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2288:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1030,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "2279:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2279:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1034,
												"nodeType": "EmitStatement",
												"src": "2274:27:7"
											}
										]
									},
									"documentation": {
										"id": 1021,
										"nodeType": "StructuredDocumentation",
										"src": "2056:127:7",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1024,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1023,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1004,
												"src": "2226:10:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2226:10:7"
										}
									],
									"name": "_unpause",
									"nameLocation": "2198:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2206:2:7"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2237:0:7"
									},
									"scope": 1037,
									"src": "2189:120:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1038,
							"src": "596:1716:7",
							"usedErrors": []
						}
					],
					"src": "93:2219:7"
				},
				"id": 7
			}
		}
	}
}