{
	"id": "76d553304827d20283314b656b07b646",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.8",
	"solcLongVersion": "0.8.8+commit.dddeac2f",
	"input": {
		"language": "Solidity",
		"sources": {
			"ECR1155/ERC1155Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/ERC1155.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC1155Upgradeable.sol\";\r\nimport \"./IERC1155ReceiverUpgradeable.sol\";\r\nimport \"./IERC1155MetadataURIUpgradeable.sol\";\r\nimport \"../../Utils/AddressUpgradeable.sol\";\r\nimport \"../../Utils/ContextUpgradeable.sol\";\r\nimport \"../../Utils/ERC165/ERC165Upgradeable.sol\";\r\nimport \"../../Utils/Initializable.sol\";\r\n\r\n/**\r\n * @dev Implementation of the basic standard multi-token.\r\n * See https://eips.ethereum.org/EIPS/eip-1155\r\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\r\n *\r\n * _Available since v3.1._\r\n */\r\ncontract ERC1155Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC1155Upgradeable, IERC1155MetadataURIUpgradeable {\r\n    using AddressUpgradeable for address;\r\n\r\n    // Mapping from token ID to account balances\r\n    mapping(uint256 => mapping(address => uint256)) private _balances;\r\n\r\n    // Mapping from account to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\r\n    string private _uri;\r\n\r\n    /**\r\n     * @dev See {_setURI}.\r\n     */\r\n    function __ERC1155_init(string memory uri_) internal onlyInitializing {\r\n        __ERC1155_init_unchained(uri_);\r\n    }\r\n\r\n    function __ERC1155_init_unchained(string memory uri_) internal onlyInitializing {\r\n        _setURI(uri_);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC1155Upgradeable).interfaceId ||\r\n            interfaceId == type(IERC1155MetadataURIUpgradeable).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155MetadataURI-uri}.\r\n     *\r\n     * This implementation returns the same URI for *all* token types. It relies\r\n     * on the token type ID substitution mechanism\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\r\n     *\r\n     * Clients calling this function must replace the `\\{id\\}` substring with the\r\n     * actual token type ID.\r\n     */\r\n    function uri(uint256) public view virtual override returns (string memory) {\r\n        return _uri;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-balanceOf}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\r\n        return _balances[id][account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-balanceOfBatch}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `accounts` and `ids` must have the same length.\r\n     */\r\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256[] memory)\r\n    {\r\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\r\n\r\n        uint256[] memory batchBalances = new uint256[](accounts.length);\r\n\r\n        for (uint256 i = 0; i < accounts.length; ++i) {\r\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\r\n        }\r\n\r\n        return batchBalances;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        _setApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[account][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) public virtual override {\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: caller is not owner nor approved\"\r\n        );\r\n        _safeTransferFrom(from, to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-safeBatchTransferFrom}.\r\n     */\r\n    function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) public virtual override {\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: transfer caller is not owner nor approved\"\r\n        );\r\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n        uint256[] memory ids = _asSingletonArray(id);\r\n        uint256[] memory amounts = _asSingletonArray(amount);\r\n\r\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        uint256 fromBalance = _balances[id][from];\r\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\r\n        unchecked {\r\n            _balances[id][from] = fromBalance - amount;\r\n        }\r\n        _balances[id][to] += amount;\r\n\r\n        emit TransferSingle(operator, from, to, id, amount);\r\n\r\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        for (uint256 i = 0; i < ids.length; ++i) {\r\n            uint256 id = ids[i];\r\n            uint256 amount = amounts[i];\r\n\r\n            uint256 fromBalance = _balances[id][from];\r\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\r\n            unchecked {\r\n                _balances[id][from] = fromBalance - amount;\r\n            }\r\n            _balances[id][to] += amount;\r\n        }\r\n\r\n        emit TransferBatch(operator, from, to, ids, amounts);\r\n\r\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets a new URI for all token types, by relying on the token type ID\r\n     * substitution mechanism\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\r\n     *\r\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\r\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\r\n     * clients with the token type ID.\r\n     *\r\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\r\n     * interpreted by clients as\r\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\r\n     * for token type ID 0x4cce0.\r\n     *\r\n     * See {uri}.\r\n     *\r\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\r\n     * this function emits no events.\r\n     */\r\n    function _setURI(string memory newuri) internal virtual {\r\n        _uri = newuri;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _mint(\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: mint to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n        uint256[] memory ids = _asSingletonArray(id);\r\n        uint256[] memory amounts = _asSingletonArray(amount);\r\n\r\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        _balances[id][to] += amount;\r\n        emit TransferSingle(operator, address(0), to, id, amount);\r\n\r\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _mintBatch(\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: mint to the zero address\");\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        for (uint256 i = 0; i < ids.length; i++) {\r\n            _balances[ids[i]][to] += amounts[i];\r\n        }\r\n\r\n        emit TransferBatch(operator, address(0), to, ids, amounts);\r\n\r\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens of token type `id` from `from`\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `from` must have at least `amount` tokens of token type `id`.\r\n     */\r\n    function _burn(\r\n        address from,\r\n        uint256 id,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC1155: burn from the zero address\");\r\n\r\n        address operator = _msgSender();\r\n        uint256[] memory ids = _asSingletonArray(id);\r\n        uint256[] memory amounts = _asSingletonArray(amount);\r\n\r\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n\r\n        uint256 fromBalance = _balances[id][from];\r\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[id][from] = fromBalance - amount;\r\n        }\r\n\r\n        emit TransferSingle(operator, from, address(0), id, amount);\r\n\r\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     */\r\n    function _burnBatch(\r\n        address from,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC1155: burn from the zero address\");\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n\r\n        for (uint256 i = 0; i < ids.length; i++) {\r\n            uint256 id = ids[i];\r\n            uint256 amount = amounts[i];\r\n\r\n            uint256 fromBalance = _balances[id][from];\r\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\r\n            unchecked {\r\n                _balances[id][from] = fromBalance - amount;\r\n            }\r\n        }\r\n\r\n        emit TransferBatch(operator, from, address(0), ids, amounts);\r\n\r\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Emits a {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(\r\n        address owner,\r\n        address operator,\r\n        bool approved\r\n    ) internal virtual {\r\n        require(owner != operator, \"ERC1155: setting approval status for self\");\r\n        _operatorApprovals[owner][operator] = approved;\r\n        emit ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any token transfer. This includes minting\r\n     * and burning, as well as batched variants.\r\n     *\r\n     * The same hook is called on both single and batched variants. For single\r\n     * transfers, the length of the `id` and `amount` arrays will be 1.\r\n     *\r\n     * Calling conditions (for each `id` and `amount` pair):\r\n     *\r\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * of token type `id` will be  transferred to `to`.\r\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\r\n     * for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\r\n     * will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     * - `ids` and `amounts` have the same, non-zero length.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any token transfer. This includes minting\r\n     * and burning, as well as batched variants.\r\n     *\r\n     * The same hook is called on both single and batched variants. For single\r\n     * transfers, the length of the `id` and `amount` arrays will be 1.\r\n     *\r\n     * Calling conditions (for each `id` and `amount` pair):\r\n     *\r\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * of token type `id` will be  transferred to `to`.\r\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\r\n     * for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\r\n     * will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     * - `ids` and `amounts` have the same, non-zero length.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {}\r\n\r\n    function _doSafeTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) private {\r\n        if (to.isContract()) {\r\n            try IERC1155ReceiverUpgradeable(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\r\n                if (response != IERC1155ReceiverUpgradeable.onERC1155Received.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _doSafeBatchTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) private {\r\n        if (to.isContract()) {\r\n            try IERC1155ReceiverUpgradeable(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r\n                bytes4 response\r\n            ) {\r\n                if (response != IERC1155ReceiverUpgradeable.onERC1155BatchReceived.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\r\n        uint256[] memory array = new uint256[](1);\r\n        array[0] = element;\r\n\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * @dev This empty reserved space is put in place to allow future versions to add new\r\n     * variables without shifting down storage in the inheritance chain.\r\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\r\n     */\r\n    uint256[47] private __gap;\r\n}"
			},
			"Utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/utils/Initializable.sol)\r\n\r\npragma solidity ^0.8.2;\r\n\r\nimport \"./AddressUpgradeable.sol\";\r\n\r\n/**\r\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\r\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\r\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\r\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\r\n *\r\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\r\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\r\n * case an upgrade adds a module that needs to be initialized.\r\n *\r\n * For example:\r\n *\r\n * [.hljs-theme-light.nopadding]\r\n * ```\r\n * contract MyToken is ERC20Upgradeable {\r\n *     function initialize() initializer public {\r\n *         __ERC20_init(\"MyToken\", \"MTK\");\r\n *     }\r\n * }\r\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\r\n *     function initializeV2() reinitializer(2) public {\r\n *         __ERC20Permit_init(\"MyToken\");\r\n *     }\r\n * }\r\n * ```\r\n *\r\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\r\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\r\n *\r\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\r\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\r\n *\r\n * [CAUTION]\r\n * ====\r\n * Avoid leaving a contract uninitialized.\r\n *\r\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\r\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\r\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\r\n *\r\n * [.hljs-theme-light.nopadding]\r\n * ```\r\n * /// @custom:oz-upgrades-unsafe-allow constructor\r\n * constructor() {\r\n *     _disableInitializers();\r\n * }\r\n * ```\r\n * ====\r\n */\r\nabstract contract Initializable {\r\n    /**\r\n     * @dev Indicates that the contract has been initialized.\r\n     * @custom:oz-retyped-from bool\r\n     */\r\n    uint8 private _initialized;\r\n\r\n    /**\r\n     * @dev Indicates that the contract is in the process of being initialized.\r\n     */\r\n    bool private _initializing;\r\n\r\n    /**\r\n     * @dev Triggered when the contract has been initialized or reinitialized.\r\n     */\r\n    event Initialized(uint8 version);\r\n\r\n    /**\r\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\r\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\r\n     */\r\n    modifier initializer() {\r\n        bool isTopLevelCall = _setInitializedVersion(1);\r\n        if (isTopLevelCall) {\r\n            _initializing = true;\r\n        }\r\n        _;\r\n        if (isTopLevelCall) {\r\n            _initializing = false;\r\n            emit Initialized(1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\r\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\r\n     * used to initialize parent contracts.\r\n     *\r\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\r\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\r\n     * initialization.\r\n     *\r\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\r\n     * a contract, executing them in the right order is up to the developer or operator.\r\n     */\r\n    modifier reinitializer(uint8 version) {\r\n        bool isTopLevelCall = _setInitializedVersion(version);\r\n        if (isTopLevelCall) {\r\n            _initializing = true;\r\n        }\r\n        _;\r\n        if (isTopLevelCall) {\r\n            _initializing = false;\r\n            emit Initialized(version);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\r\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\r\n     */\r\n    modifier onlyInitializing() {\r\n        require(_initializing, \"Initializable: contract is not initializing\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\r\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\r\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\r\n     * through proxies.\r\n     */\r\n    function _disableInitializers() internal virtual {\r\n        _setInitializedVersion(type(uint8).max);\r\n    }\r\n\r\n    function _setInitializedVersion(uint8 version) private returns (bool) {\r\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\r\n        // inheritance patterns, but we only do this in the context of a constructor, and for the lowest level\r\n        // of initializers, because in other contexts the contract may have been reentered.\r\n        if (_initializing) {\r\n            require(\r\n                version == 1 && !AddressUpgradeable.isContract(address(this)),\r\n                \"Initializable: contract is already initialized\"\r\n            );\r\n            return false;\r\n        } else {\r\n            require(_initialized < version, \"Initializable: contract is already initialized\");\r\n            _initialized = version;\r\n            return true;\r\n        }\r\n    }\r\n}"
			},
			"Utils/ERC165/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC165Upgradeable.sol\";\r\nimport \"../../Utils/Initializable.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n *\r\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\r\n */\r\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\r\n    function __ERC165_init() internal onlyInitializing {\r\n    }\r\n\r\n    function __ERC165_init_unchained() internal onlyInitializing {\r\n    }\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\r\n    }\r\n\r\n    /**\r\n     * @dev This empty reserved space is put in place to allow future versions to add new\r\n     * variables without shifting down storage in the inheritance chain.\r\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\r\n     */\r\n    uint256[50] private __gap;\r\n}\r\n"
			},
			"Utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\nimport \"./Initializable.sol\";\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract ContextUpgradeable is Initializable {\r\n    function __Context_init() internal onlyInitializing {\r\n    }\r\n\r\n    function __Context_init_unchained() internal onlyInitializing {\r\n    }\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    /**\r\n     * @dev This empty reserved space is put in place to allow future versions to add new\r\n     * variables without shifting down storage in the inheritance chain.\r\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\r\n     */\r\n    uint256[50] private __gap;\r\n}\r\n"
			},
			"Utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\r\n\r\npragma solidity ^0.8.1;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary AddressUpgradeable {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			},
			"ECR1155/IERC1155MetadataURIUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC1155Upgradeable.sol\";\r\n\r\n/**\r\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\r\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\r\n *\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155MetadataURIUpgradeable is IERC1155Upgradeable {\r\n    /**\r\n     * @dev Returns the URI for token type `id`.\r\n     *\r\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\r\n     * clients with the actual token type ID.\r\n     */\r\n    function uri(uint256 id) external view returns (string memory);\r\n}\r\n"
			},
			"ECR1155/IERC1155ReceiverUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../../Utils/ERC165/IERC165Upgradeable.sol\";\r\n\r\n/**\r\n * @dev _Available since v3.1._\r\n */\r\ninterface IERC1155ReceiverUpgradeable is IERC165Upgradeable {\r\n    /**\r\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\r\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\r\n     *\r\n     * NOTE: To accept the transfer, this must return\r\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\r\n     * (i.e. 0xf23a6e61, or its own function selector).\r\n     *\r\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\r\n     * @param from The address which previously owned the token\r\n     * @param id The ID of the token being transferred\r\n     * @param value The amount of tokens being transferred\r\n     * @param data Additional data with no specified format\r\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\r\n     */\r\n    function onERC1155Received(\r\n        address operator,\r\n        address from,\r\n        uint256 id,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n\r\n    /**\r\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\r\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\r\n     * been updated.\r\n     *\r\n     * NOTE: To accept the transfer(s), this must return\r\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\r\n     * (i.e. 0xbc197c81, or its own function selector).\r\n     *\r\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\r\n     * @param from The address which previously owned the token\r\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\r\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\r\n     * @param data Additional data with no specified format\r\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\r\n     */\r\n    function onERC1155BatchReceived(\r\n        address operator,\r\n        address from,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata values,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n"
			},
			"ECR1155/IERC1155Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../../Utils/ERC165/IERC165Upgradeable.sol\";\r\n\r\n/**\r\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\r\n *\r\n * _Available since v3.1._s\r\n */\r\n \r\ninterface IERC1155Upgradeable is IERC165Upgradeable {\r\n    /**\r\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\r\n     */\r\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\r\n\r\n    /**\r\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\r\n     * transfers.\r\n     */\r\n    event TransferBatch(\r\n        address indexed operator,\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256[] ids,\r\n        uint256[] values\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\r\n     * `approved`.\r\n     */\r\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\r\n     *\r\n     * If an {URI} event was emitted for `id`, the standard\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\r\n     * returned by {IERC1155MetadataURI-uri}.\r\n     */\r\n    event URI(string value, uint256 indexed id);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function balanceOf(address account, uint256 id) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `accounts` and `ids` must have the same length.\r\n     */\r\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\r\n        external\r\n        view\r\n        returns (uint256[] memory);\r\n\r\n    /**\r\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `operator` cannot be the caller.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\r\n     *\r\n     * See {setApprovalForAll}.\r\n     */\r\n    function isApprovedForAll(address account, address operator) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\r\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata amounts,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n"
			},
			"Utils/ERC165/IERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165Upgradeable {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ECR1155/ERC1155Upgradeable.sol": {
				"ERC1155Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ECR1155/ERC1155Upgradeable.sol\":678:18361  contract ERC1155Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC1155Upgradeable, IERC1155MetadataURIUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ECR1155/ERC1155Upgradeable.sol\":678:18361  contract ERC1155Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC1155Upgradeable, IERC1155MetadataURIUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2643:2874  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ECR1155/ERC1155Upgradeable.sol\":1622:1976  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2387:2492  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4582:5024  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3040:3564  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3637:3792  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3864:4032  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4104:4505  function safeTransferFrom(... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2643:2874  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2729:2736  uint256 */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2776:2777  0 */\n      dup1\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2757:2778  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2757:2764  account */\n      dup4\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2757:2778  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2749:2826  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2844:2853  _balances */\n      0x65\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2844:2857  _balances[id] */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2854:2856  id */\n      dup4\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2844:2857  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2844:2866  _balances[id][account] */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2858:2865  account */\n      dup5\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2844:2866  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2837:2866  return _balances[id][account] */\n      swap1\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2643:2874  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ECR1155/ERC1155Upgradeable.sol\":1622:1976  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {... */\n    tag_21:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":1746:1750  bool */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":1798:1835  type(IERC1155Upgradeable).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"ECR1155/ERC1155Upgradeable.sol\":1783:1835  interfaceId == type(IERC1155Upgradeable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ECR1155/ERC1155Upgradeable.sol\":1783:1794  interfaceId */\n      dup3\n        /* \"ECR1155/ERC1155Upgradeable.sol\":1783:1835  interfaceId == type(IERC1155Upgradeable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ECR1155/ERC1155Upgradeable.sol\":1783:1915  interfaceId == type(IERC1155Upgradeable).interfaceId ||... */\n      dup1\n      tag_58\n      jumpi\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":1867:1915  type(IERC1155MetadataURIUpgradeable).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"ECR1155/ERC1155Upgradeable.sol\":1852:1915  interfaceId == type(IERC1155MetadataURIUpgradeable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ECR1155/ERC1155Upgradeable.sol\":1852:1863  interfaceId */\n      dup3\n        /* \"ECR1155/ERC1155Upgradeable.sol\":1852:1915  interfaceId == type(IERC1155MetadataURIUpgradeable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ECR1155/ERC1155Upgradeable.sol\":1783:1915  interfaceId == type(IERC1155Upgradeable).interfaceId ||... */\n    tag_58:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":1783:1968  interfaceId == type(IERC1155Upgradeable).interfaceId ||... */\n      dup1\n      tag_59\n      jumpi\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":1932:1968  super.supportsInterface(interfaceId) */\n      tag_60\n        /* \"ECR1155/ERC1155Upgradeable.sol\":1956:1967  interfaceId */\n      dup3\n        /* \"ECR1155/ERC1155Upgradeable.sol\":1932:1955  super.supportsInterface */\n      tag_61\n        /* \"ECR1155/ERC1155Upgradeable.sol\":1932:1968  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_60:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":1783:1968  interfaceId == type(IERC1155Upgradeable).interfaceId ||... */\n    tag_59:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":1763:1968  return... */\n      swap1\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":1622:1976  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2387:2492  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2447:2460  string memory */\n      0x60\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2480:2484  _uri */\n      0x67\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2473:2484  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":2387:2492  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4582:5024  function safeBatchTransferFrom(... */\n    tag_33:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4823:4835  _msgSender() */\n      tag_70\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4823:4833  _msgSender */\n      tag_71\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4823:4835  _msgSender() */\n      jump\t// in\n    tag_70:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4815:4835  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4815:4819  from */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4815:4835  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4815:4875  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_72\n      jumpi\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4839:4875  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4856:4860  from */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4862:4874  _msgSender() */\n      tag_74\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4862:4872  _msgSender */\n      tag_71\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4862:4874  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4839:4855  isApprovedForAll */\n      tag_47\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4839:4875  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_73:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4815:4875  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_72:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4793:4953  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4964:5016  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4987:4991  from */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4993:4995  to */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4997:5000  ids */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5002:5009  amounts */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5011:5015  data */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4964:4986  _safeBatchTransferFrom */\n      tag_79\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4964:5016  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4582:5024  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3040:3564  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3196:3212  uint256[] memory */\n      0x60\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3257:3260  ids */\n      dup2\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3257:3267  ids.length */\n      mload\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3238:3246  accounts */\n      dup4\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3238:3253  accounts.length */\n      mload\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3238:3267  accounts.length == ids.length */\n      eq\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3230:3313  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3326:3356  uint256[] memory batchBalances */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3373:3381  accounts */\n      dup4\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3373:3388  accounts.length */\n      mload\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3359:3389  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_84\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n    tag_84:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3326:3389  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3407:3416  uint256 i */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3402:3524  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3426:3434  accounts */\n      dup5\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3426:3441  accounts.length */\n      mload\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3422:3423  i */\n      dup2\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3422:3441  i < accounts.length */\n      lt\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3402:3524  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3482:3512  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3492:3500  accounts */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3501:3502  i */\n      dup3\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3492:3503  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_92\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n    tag_92:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3505:3508  ids */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3509:3510  i */\n      dup4\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3505:3511  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_95\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n    tag_95:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3482:3491  balanceOf */\n      tag_15\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3482:3512  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3463:3476  batchBalances */\n      dup3\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3477:3478  i */\n      dup3\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3463:3479  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_97\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n    tag_97:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3463:3512  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3443:3446  ++i */\n      dup1\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3402:3524  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3543:3556  batchBalances */\n      dup1\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3536:3556  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3040:3564  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3637:3792  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3732:3784  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3751:3763  _msgSender() */\n      tag_103\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3751:3761  _msgSender */\n      tag_71\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3751:3763  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3765:3773  operator */\n      dup4\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3775:3783  approved */\n      dup4\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3732:3750  _setApprovalForAll */\n      tag_104\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3732:3784  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3637:3792  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3864:4032  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_47:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3963:3967  bool */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3987:4005  _operatorApprovals */\n      0x66\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3987:4014  _operatorApprovals[account] */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4006:4013  account */\n      dup5\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3987:4014  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3987:4024  _operatorApprovals[account][operator] */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4015:4023  operator */\n      dup4\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3987:4024  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3980:4024  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":3864:4032  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4104:4505  function safeTransferFrom(... */\n    tag_52:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4320:4332  _msgSender() */\n      tag_107\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4320:4330  _msgSender */\n      tag_71\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4320:4332  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4312:4332  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4312:4316  from */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4312:4332  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4312:4372  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_108\n      jumpi\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4336:4372  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4353:4357  from */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4359:4371  _msgSender() */\n      tag_110\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4359:4369  _msgSender */\n      tag_71\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4359:4371  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4336:4352  isApprovedForAll */\n      tag_47\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4336:4372  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_109:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4312:4372  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_108:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4290:4441  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4452:4497  _safeTransferFrom(from, to, id, amount, data) */\n      tag_114\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4470:4474  from */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4476:4478  to */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4480:4482  id */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4484:4490  amount */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4492:4496  data */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4452:4469  _safeTransferFrom */\n      tag_115\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4452:4497  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n    tag_114:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":4104:4505  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Utils/ERC165/ERC165Upgradeable.sol\":1085:1253  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_61:\n        /* \"Utils/ERC165/ERC165Upgradeable.sol\":1170:1174  bool */\n      0x00\n        /* \"Utils/ERC165/ERC165Upgradeable.sol\":1209:1245  type(IERC165Upgradeable).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"Utils/ERC165/ERC165Upgradeable.sol\":1194:1245  interfaceId == type(IERC165Upgradeable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"Utils/ERC165/ERC165Upgradeable.sol\":1194:1205  interfaceId */\n      dup3\n        /* \"Utils/ERC165/ERC165Upgradeable.sol\":1194:1245  interfaceId == type(IERC165Upgradeable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"Utils/ERC165/ERC165Upgradeable.sol\":1187:1245  return interfaceId == type(IERC165Upgradeable).interfaceId */\n      swap1\n      pop\n        /* \"Utils/ERC165/ERC165Upgradeable.sol\":1085:1253  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Utils/ContextUpgradeable.sol\":859:957  function _msgSender() internal view virtual returns (address) {... */\n    tag_71:\n        /* \"Utils/ContextUpgradeable.sol\":912:919  address */\n      0x00\n        /* \"Utils/ContextUpgradeable.sol\":939:949  msg.sender */\n      caller\n        /* \"Utils/ContextUpgradeable.sol\":932:949  return msg.sender */\n      swap1\n      pop\n        /* \"Utils/ContextUpgradeable.sol\":859:957  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6820:7966  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7047:7054  amounts */\n      dup2\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7047:7061  amounts.length */\n      mload\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7033:7036  ids */\n      dup4\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7033:7043  ids.length */\n      mload\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7033:7061  ids.length == amounts.length */\n      eq\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7025:7106  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7139:7140  0 */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7125:7141  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7125:7127  to */\n      dup5\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7125:7141  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7117:7183  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7196:7212  address operator */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7215:7227  _msgSender() */\n      tag_125\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7215:7225  _msgSender */\n      tag_71\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7215:7227  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7196:7227  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7240:7300  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_126\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7261:7269  operator */\n      dup2\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7271:7275  from */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7277:7279  to */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7281:7284  ids */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7286:7293  amounts */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7295:7299  data */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7240:7260  _beforeTokenTransfer */\n      tag_127\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7240:7300  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_126:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7318:7327  uint256 i */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7313:7734  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_128:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7337:7340  ids */\n      dup5\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7337:7347  ids.length */\n      mload\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7333:7334  i */\n      dup2\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7333:7347  i < ids.length */\n      lt\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7313:7734  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7369:7379  uint256 id */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7382:7385  ids */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7386:7387  i */\n      dup3\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7382:7388  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_131\n      jumpi\n      tag_132\n      tag_94\n      jump\t// in\n    tag_132:\n    tag_131:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7369:7388  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7403:7417  uint256 amount */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7420:7427  amounts */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7428:7429  i */\n      dup4\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7420:7430  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_133\n      jumpi\n      tag_134\n      tag_94\n      jump\t// in\n    tag_134:\n    tag_133:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7403:7430  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7447:7466  uint256 fromBalance */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7469:7478  _balances */\n      0x65\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7469:7482  _balances[id] */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7479:7481  id */\n      dup5\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7469:7482  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7469:7488  _balances[id][from] */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7483:7487  from */\n      dup12\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7469:7488  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7447:7488  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7526:7532  amount */\n      dup2\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7511:7522  fromBalance */\n      dup2\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7511:7532  fromBalance >= amount */\n      lt\n      iszero\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7503:7579  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7659:7665  amount */\n      dup2\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7645:7656  fromBalance */\n      dup2\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7645:7665  fromBalance - amount */\n      sub\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7623:7632  _balances */\n      0x65\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7623:7636  _balances[id] */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7633:7635  id */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7623:7636  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7623:7642  _balances[id][from] */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7637:7641  from */\n      dup13\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7623:7642  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7623:7665  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7716:7722  amount */\n      dup2\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7695:7704  _balances */\n      0x65\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7695:7708  _balances[id] */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7705:7707  id */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7695:7708  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7695:7712  _balances[id][to] */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7709:7711  to */\n      dup12\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7695:7712  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7695:7722  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7354:7734  {... */\n      pop\n      pop\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7349:7352  ++i */\n      dup1\n      tag_140\n      swap1\n      tag_100\n      jump\t// in\n    tag_140:\n      swap1\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7313:7734  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_128)\n    tag_129:\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7781:7783  to */\n      dup5\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7751:7798  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7775:7779  from */\n      dup7\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7751:7798  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7765:7773  operator */\n      dup3\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7751:7798  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7785:7788  ids */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7790:7797  amounts */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7751:7798  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7811:7870  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_143\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7831:7839  operator */\n      dup2\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7841:7845  from */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7847:7849  to */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7851:7854  ids */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7856:7863  amounts */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7865:7869  data */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7811:7830  _afterTokenTransfer */\n      tag_144\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7811:7870  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_143:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7883:7958  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_145\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7919:7927  operator */\n      dup2\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7929:7933  from */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7935:7937  to */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7939:7942  ids */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7944:7951  amounts */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7953:7957  data */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7883:7918  _doSafeBatchTransferAcceptanceCheck */\n      tag_146\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7883:7958  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_145:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":7014:7966  {... */\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6820:7966  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13554:13885  function _setApprovalForAll(... */\n    tag_104:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13709:13717  operator */\n      dup2\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13700:13717  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13700:13705  owner */\n      dup4\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13700:13717  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13692:13763  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13812:13820  approved */\n      dup1\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13774:13792  _operatorApprovals */\n      0x66\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13774:13799  _operatorApprovals[owner] */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13793:13798  owner */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13774:13799  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13774:13809  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13800:13808  operator */\n      dup5\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13774:13809  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13774:13820  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13858:13866  operator */\n      dup2\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13836:13877  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13851:13856  owner */\n      dup4\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13836:13877  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13868:13876  approved */\n      dup4\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13836:13877  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ECR1155/ERC1155Upgradeable.sol\":13554:13885  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5488:6462  function _safeTransferFrom(... */\n    tag_115:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5690:5691  0 */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5676:5692  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5676:5678  to */\n      dup5\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5676:5692  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5668:5734  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_124\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5747:5763  address operator */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5766:5778  _msgSender() */\n      tag_155\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5766:5776  _msgSender */\n      tag_71\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5766:5778  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5747:5778  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5789:5809  uint256[] memory ids */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5812:5833  _asSingletonArray(id) */\n      tag_156\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5830:5832  id */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5812:5829  _asSingletonArray */\n      tag_157\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5812:5833  _asSingletonArray(id) */\n      jump\t// in\n    tag_156:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5789:5833  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5844:5868  uint256[] memory amounts */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5871:5896  _asSingletonArray(amount) */\n      tag_158\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5889:5895  amount */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5871:5888  _asSingletonArray */\n      tag_157\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5871:5896  _asSingletonArray(amount) */\n      jump\t// in\n    tag_158:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5844:5896  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5909:5969  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_159\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5930:5938  operator */\n      dup4\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5940:5944  from */\n      dup10\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5946:5948  to */\n      dup10\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5950:5953  ids */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5955:5962  amounts */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5964:5968  data */\n      dup10\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5909:5929  _beforeTokenTransfer */\n      tag_127\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5909:5969  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_159:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5982:6001  uint256 fromBalance */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6004:6013  _balances */\n      0x65\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6004:6017  _balances[id] */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6014:6016  id */\n      dup9\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6004:6017  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6004:6023  _balances[id][from] */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6018:6022  from */\n      dup11\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6004:6023  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5982:6023  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6057:6063  amount */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6042:6053  fromBalance */\n      dup2\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6042:6063  fromBalance >= amount */\n      lt\n      iszero\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6034:6110  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_137\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6182:6188  amount */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6168:6179  fromBalance */\n      dup2\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6168:6188  fromBalance - amount */\n      sub\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6146:6155  _balances */\n      0x65\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6146:6159  _balances[id] */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6156:6158  id */\n      dup10\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6146:6159  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6146:6165  _balances[id][from] */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6160:6164  from */\n      dup12\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6146:6165  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6146:6188  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6231:6237  amount */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6210:6219  _balances */\n      0x65\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6210:6223  _balances[id] */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6220:6222  id */\n      dup10\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6210:6223  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6210:6227  _balances[id][to] */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6224:6226  to */\n      dup11\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6210:6227  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6210:6237  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_162\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_162:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6286:6288  to */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6255:6301  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6280:6284  from */\n      dup10\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6255:6301  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6270:6278  operator */\n      dup6\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6255:6301  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6290:6292  id */\n      dup11\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6294:6300  amount */\n      dup11\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6255:6301  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      tag_163\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6314:6373  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_165\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6334:6342  operator */\n      dup5\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6344:6348  from */\n      dup11\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6350:6352  to */\n      dup11\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6354:6357  ids */\n      dup7\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6359:6366  amounts */\n      dup7\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6368:6372  data */\n      dup11\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6314:6333  _afterTokenTransfer */\n      tag_144\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6314:6373  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_165:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6386:6454  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_166\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6417:6425  operator */\n      dup5\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6427:6431  from */\n      dup11\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6433:6435  to */\n      dup11\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6437:6439  id */\n      dup11\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6441:6447  amount */\n      dup11\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6449:6453  data */\n      dup11\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6386:6416  _doSafeTransferAcceptanceCheck */\n      tag_167\n        /* \"ECR1155/ERC1155Upgradeable.sol\":6386:6454  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_166:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5657:6462  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":5488:6462  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ECR1155/ERC1155Upgradeable.sol\":14841:15062  function _beforeTokenTransfer(... */\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16017:16237  function _afterTokenTransfer(... */\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17019:17854  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_146:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17259:17274  to.isContract() */\n      tag_171\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17259:17261  to */\n      dup5\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17259:17272  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_172\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17259:17274  to.isContract() */\n      jump\t// in\n    tag_171:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17255:17847  if (to.isContract()) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17323:17325  to */\n      dup4\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17295:17349  IERC1155ReceiverUpgradeable(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17350:17358  operator */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17360:17364  from */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17366:17369  ids */\n      dup7\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17371:17378  amounts */\n      dup7\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17380:17384  data */\n      dup7\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17295:17385  IERC1155ReceiverUpgradeable(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_176:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_177\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_178\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      0x01\n    tag_177:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17291:17836  try IERC1155ReceiverUpgradeable(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_180\n      jumpi\n      tag_184\n      tag_185\n      jump\t// in\n    tag_184:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_183\n      jumpi\n      pop\n      tag_186\n      tag_187\n      jump\t// in\n    tag_186:\n      dup1\n      tag_188\n      jumpi\n      pop\n      jump(tag_182)\n    tag_188:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17709:17715  reason */\n      dup1\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17702:17716  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17291:17836  try IERC1155ReceiverUpgradeable(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_183:\n      pop\n    tag_182:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17758:17820  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17291:17836  try IERC1155ReceiverUpgradeable(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_180:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17479:17538  IERC1155ReceiverUpgradeable.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17467:17538  response != IERC1155ReceiverUpgradeable.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17467:17475  response */\n      dup2\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17467:17538  response != IERC1155ReceiverUpgradeable.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17463:17633  if (response != IERC1155ReceiverUpgradeable.onERC1155BatchReceived.selector) {... */\n      tag_193\n      jumpi\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17563:17613  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17463:17633  if (response != IERC1155ReceiverUpgradeable.onERC1155BatchReceived.selector) {... */\n    tag_193:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17386:17648  returns (... */\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17255:17847  if (to.isContract()) {... */\n    tag_173:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17019:17854  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17862:18060  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_157:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17928:17944  uint256[] memory */\n      0x60\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17957:17979  uint256[] memory array */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17996:17997  1 */\n      0x01\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17982:17998  new uint256[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_197\n      jumpi\n      tag_198\n      tag_86\n      jump\t// in\n    tag_198:\n    tag_197:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_199\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_199:\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17957:17998  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":18020:18027  element */\n      dup3\n        /* \"ECR1155/ERC1155Upgradeable.sol\":18009:18014  array */\n      dup2\n        /* \"ECR1155/ERC1155Upgradeable.sol\":18015:18016  0 */\n      0x00\n        /* \"ECR1155/ERC1155Upgradeable.sol\":18009:18017  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_200\n      jumpi\n      tag_201\n      tag_94\n      jump\t// in\n    tag_201:\n    tag_200:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ECR1155/ERC1155Upgradeable.sol\":18009:18027  array[0] = element */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":18047:18052  array */\n      dup1\n        /* \"ECR1155/ERC1155Upgradeable.sol\":18040:18052  return array */\n      swap2\n      pop\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":17862:18060  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16245:17011  function _doSafeTransferAcceptanceCheck(... */\n    tag_167:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16460:16475  to.isContract() */\n      tag_203\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16460:16462  to */\n      dup5\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16460:16473  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_172\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16460:16475  to.isContract() */\n      jump\t// in\n    tag_203:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16456:17004  if (to.isContract()) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16524:16526  to */\n      dup4\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16496:16545  IERC1155ReceiverUpgradeable(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16546:16554  operator */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16556:16560  from */\n      dup8\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16562:16564  id */\n      dup7\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16566:16572  amount */\n      dup7\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16574:16578  data */\n      dup7\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16496:16579  IERC1155ReceiverUpgradeable(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_207\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_207:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_208\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_209\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_209:\n      0x01\n    tag_208:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16492:16993  try IERC1155ReceiverUpgradeable(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_210\n      jumpi\n      tag_214\n      tag_185\n      jump\t// in\n    tag_214:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_213\n      jumpi\n      pop\n      tag_215\n      tag_187\n      jump\t// in\n    tag_215:\n      dup1\n      tag_216\n      jumpi\n      pop\n      jump(tag_212)\n    tag_216:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16866:16872  reason */\n      dup1\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16859:16873  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16492:16993  try IERC1155ReceiverUpgradeable(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_213:\n      pop\n    tag_212:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16915:16977  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap1\n      tag_191\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16492:16993  try IERC1155ReceiverUpgradeable(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_210:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16641:16695  IERC1155ReceiverUpgradeable.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16629:16695  response != IERC1155ReceiverUpgradeable.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16629:16637  response */\n      dup2\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16629:16695  response != IERC1155ReceiverUpgradeable.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16625:16790  if (response != IERC1155ReceiverUpgradeable.onERC1155Received.selector) {... */\n      tag_220\n      jumpi\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16720:16770  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_195\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16625:16790  if (response != IERC1155ReceiverUpgradeable.onERC1155Received.selector) {... */\n    tag_220:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16580:16805  returns (bytes4 response) {... */\n      pop\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16456:17004  if (to.isContract()) {... */\n    tag_204:\n        /* \"ECR1155/ERC1155Upgradeable.sol\":16245:17011  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Utils/AddressUpgradeable.sol\":1221:1547  function isContract(address account) internal view returns (bool) {... */\n    tag_172:\n        /* \"Utils/AddressUpgradeable.sol\":1281:1285  bool */\n      0x00\n        /* \"Utils/AddressUpgradeable.sol\":1538:1539  0 */\n      dup1\n        /* \"Utils/AddressUpgradeable.sol\":1516:1523  account */\n      dup3\n        /* \"Utils/AddressUpgradeable.sol\":1516:1535  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"Utils/AddressUpgradeable.sol\":1516:1539  account.code.length > 0 */\n      gt\n        /* \"Utils/AddressUpgradeable.sol\":1509:1539  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"Utils/AddressUpgradeable.sol\":1221:1547  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_223:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_224:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_225:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_226:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_227:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_302\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_226\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_228:\n        /* \"#utility.yul\":641:665   */\n      tag_304\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_227\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_305:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_229:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_307\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_228\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_230:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_231:\n        /* \"#utility.yul\":997:1021   */\n      tag_310\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_230\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_311:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_232:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_313\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_231\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_14:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_316\n      tag_224\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":1290:1409   */\n    tag_315:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_317\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_229\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_318\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_232\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_233:\n        /* \"#utility.yul\":1764:1788   */\n      tag_320\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_230\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_17:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_322\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_233\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_234:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_235:\n        /* \"#utility.yul\":2256:2279   */\n      tag_325\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_234\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_326\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_326:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_236:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_328\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_235\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_20:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_331\n      tag_224\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2528:2647   */\n    tag_330:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_332\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_236\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_237:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_238:\n        /* \"#utility.yul\":2963:2984   */\n      tag_335\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_237\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_23:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_337\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_238\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3542   */\n    tag_26:\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3309:3318   */\n      dup3\n        /* \"#utility.yul\":3300:3307   */\n      dup5\n        /* \"#utility.yul\":3296:3319   */\n      sub\n        /* \"#utility.yul\":3292:3324   */\n      slt\n        /* \"#utility.yul\":3289:3408   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":3327:3406   */\n      tag_340\n      tag_224\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":3289:3408   */\n    tag_339:\n        /* \"#utility.yul\":3447:3448   */\n      0x00\n        /* \"#utility.yul\":3472:3525   */\n      tag_341\n        /* \"#utility.yul\":3517:3524   */\n      dup5\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup6\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_232\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3418:3535   */\n      pop\n        /* \"#utility.yul\":3213:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3647   */\n    tag_239:\n        /* \"#utility.yul\":3600:3606   */\n      0x00\n        /* \"#utility.yul\":3634:3639   */\n      dup2\n        /* \"#utility.yul\":3628:3640   */\n      mload\n        /* \"#utility.yul\":3618:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3822   */\n    tag_240:\n        /* \"#utility.yul\":3737:3748   */\n      0x00\n        /* \"#utility.yul\":3771:3777   */\n      dup3\n        /* \"#utility.yul\":3766:3769   */\n      dup3\n        /* \"#utility.yul\":3759:3778   */\n      mstore\n        /* \"#utility.yul\":3811:3815   */\n      0x20\n        /* \"#utility.yul\":3806:3809   */\n      dup3\n        /* \"#utility.yul\":3802:3816   */\n      add\n        /* \"#utility.yul\":3787:3816   */\n      swap1\n      pop\n        /* \"#utility.yul\":3653:3822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3828:4135   */\n    tag_241:\n        /* \"#utility.yul\":3896:3897   */\n      0x00\n        /* \"#utility.yul\":3906:4019   */\n    tag_345:\n        /* \"#utility.yul\":3920:3926   */\n      dup4\n        /* \"#utility.yul\":3917:3918   */\n      dup2\n        /* \"#utility.yul\":3914:3927   */\n      lt\n        /* \"#utility.yul\":3906:4019   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":4005:4006   */\n      dup1\n        /* \"#utility.yul\":4000:4003   */\n      dup3\n        /* \"#utility.yul\":3996:4007   */\n      add\n        /* \"#utility.yul\":3990:4008   */\n      mload\n        /* \"#utility.yul\":3986:3987   */\n      dup2\n        /* \"#utility.yul\":3981:3984   */\n      dup5\n        /* \"#utility.yul\":3977:3988   */\n      add\n        /* \"#utility.yul\":3970:4009   */\n      mstore\n        /* \"#utility.yul\":3942:3944   */\n      0x20\n        /* \"#utility.yul\":3939:3940   */\n      dup2\n        /* \"#utility.yul\":3935:3945   */\n      add\n        /* \"#utility.yul\":3930:3945   */\n      swap1\n      pop\n        /* \"#utility.yul\":3906:4019   */\n      jump(tag_345)\n    tag_347:\n        /* \"#utility.yul\":4037:4043   */\n      dup4\n        /* \"#utility.yul\":4034:4035   */\n      dup2\n        /* \"#utility.yul\":4031:4044   */\n      gt\n        /* \"#utility.yul\":4028:4129   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":4117:4118   */\n      0x00\n        /* \"#utility.yul\":4108:4114   */\n      dup5\n        /* \"#utility.yul\":4103:4106   */\n      dup5\n        /* \"#utility.yul\":4099:4115   */\n      add\n        /* \"#utility.yul\":4092:4119   */\n      mstore\n        /* \"#utility.yul\":4028:4129   */\n    tag_348:\n        /* \"#utility.yul\":3877:4135   */\n      pop\n        /* \"#utility.yul\":3828:4135   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4141:4243   */\n    tag_242:\n        /* \"#utility.yul\":4182:4188   */\n      0x00\n        /* \"#utility.yul\":4233:4235   */\n      0x1f\n        /* \"#utility.yul\":4229:4236   */\n      not\n        /* \"#utility.yul\":4224:4226   */\n      0x1f\n        /* \"#utility.yul\":4217:4222   */\n      dup4\n        /* \"#utility.yul\":4213:4227   */\n      add\n        /* \"#utility.yul\":4209:4237   */\n      and\n        /* \"#utility.yul\":4199:4237   */\n      swap1\n      pop\n        /* \"#utility.yul\":4141:4243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4249:4613   */\n    tag_243:\n        /* \"#utility.yul\":4337:4340   */\n      0x00\n        /* \"#utility.yul\":4365:4404   */\n      tag_351\n        /* \"#utility.yul\":4398:4403   */\n      dup3\n        /* \"#utility.yul\":4365:4404   */\n      tag_239\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4420:4491   */\n      tag_352\n        /* \"#utility.yul\":4484:4490   */\n      dup2\n        /* \"#utility.yul\":4479:4482   */\n      dup6\n        /* \"#utility.yul\":4420:4491   */\n      tag_240\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":4413:4491   */\n      swap4\n      pop\n        /* \"#utility.yul\":4500:4552   */\n      tag_353\n        /* \"#utility.yul\":4545:4551   */\n      dup2\n        /* \"#utility.yul\":4540:4543   */\n      dup6\n        /* \"#utility.yul\":4533:4537   */\n      0x20\n        /* \"#utility.yul\":4526:4531   */\n      dup7\n        /* \"#utility.yul\":4522:4538   */\n      add\n        /* \"#utility.yul\":4500:4552   */\n      tag_241\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4577:4606   */\n      tag_354\n        /* \"#utility.yul\":4599:4605   */\n      dup2\n        /* \"#utility.yul\":4577:4606   */\n      tag_242\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4572:4575   */\n      dup5\n        /* \"#utility.yul\":4568:4607   */\n      add\n        /* \"#utility.yul\":4561:4607   */\n      swap2\n      pop\n        /* \"#utility.yul\":4341:4613   */\n      pop\n        /* \"#utility.yul\":4249:4613   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4619:4932   */\n    tag_29:\n        /* \"#utility.yul\":4732:4736   */\n      0x00\n        /* \"#utility.yul\":4770:4772   */\n      0x20\n        /* \"#utility.yul\":4759:4768   */\n      dup3\n        /* \"#utility.yul\":4755:4773   */\n      add\n        /* \"#utility.yul\":4747:4773   */\n      swap1\n      pop\n        /* \"#utility.yul\":4819:4828   */\n      dup2\n        /* \"#utility.yul\":4813:4817   */\n      dup2\n        /* \"#utility.yul\":4809:4829   */\n      sub\n        /* \"#utility.yul\":4805:4806   */\n      0x00\n        /* \"#utility.yul\":4794:4803   */\n      dup4\n        /* \"#utility.yul\":4790:4807   */\n      add\n        /* \"#utility.yul\":4783:4830   */\n      mstore\n        /* \"#utility.yul\":4847:4925   */\n      tag_356\n        /* \"#utility.yul\":4920:4924   */\n      dup2\n        /* \"#utility.yul\":4911:4917   */\n      dup5\n        /* \"#utility.yul\":4847:4925   */\n      tag_243\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4839:4925   */\n      swap1\n      pop\n        /* \"#utility.yul\":4619:4932   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4938:5055   */\n    tag_244:\n        /* \"#utility.yul\":5047:5048   */\n      0x00\n        /* \"#utility.yul\":5044:5045   */\n      dup1\n        /* \"#utility.yul\":5037:5049   */\n      revert\n        /* \"#utility.yul\":5061:5241   */\n    tag_86:\n        /* \"#utility.yul\":5109:5186   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5106:5107   */\n      0x00\n        /* \"#utility.yul\":5099:5187   */\n      mstore\n        /* \"#utility.yul\":5206:5210   */\n      0x41\n        /* \"#utility.yul\":5203:5204   */\n      0x04\n        /* \"#utility.yul\":5196:5211   */\n      mstore\n        /* \"#utility.yul\":5230:5234   */\n      0x24\n        /* \"#utility.yul\":5227:5228   */\n      0x00\n        /* \"#utility.yul\":5220:5235   */\n      revert\n        /* \"#utility.yul\":5247:5528   */\n    tag_245:\n        /* \"#utility.yul\":5330:5357   */\n      tag_360\n        /* \"#utility.yul\":5352:5356   */\n      dup3\n        /* \"#utility.yul\":5330:5357   */\n      tag_242\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":5322:5328   */\n      dup2\n        /* \"#utility.yul\":5318:5358   */\n      add\n        /* \"#utility.yul\":5460:5466   */\n      dup2\n        /* \"#utility.yul\":5448:5458   */\n      dup2\n        /* \"#utility.yul\":5445:5467   */\n      lt\n        /* \"#utility.yul\":5424:5442   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5412:5422   */\n      dup3\n        /* \"#utility.yul\":5409:5443   */\n      gt\n        /* \"#utility.yul\":5406:5468   */\n      or\n        /* \"#utility.yul\":5403:5491   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":5471:5489   */\n      tag_362\n      tag_86\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5403:5491   */\n    tag_361:\n        /* \"#utility.yul\":5511:5521   */\n      dup1\n        /* \"#utility.yul\":5507:5509   */\n      0x40\n        /* \"#utility.yul\":5500:5522   */\n      mstore\n        /* \"#utility.yul\":5290:5528   */\n      pop\n        /* \"#utility.yul\":5247:5528   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5534:5663   */\n    tag_246:\n        /* \"#utility.yul\":5568:5574   */\n      0x00\n        /* \"#utility.yul\":5595:5615   */\n      tag_364\n      tag_223\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":5585:5615   */\n      swap1\n      pop\n        /* \"#utility.yul\":5624:5657   */\n      tag_365\n        /* \"#utility.yul\":5652:5656   */\n      dup3\n        /* \"#utility.yul\":5644:5650   */\n      dup3\n        /* \"#utility.yul\":5624:5657   */\n      tag_245\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5534:5663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5669:5980   */\n    tag_247:\n        /* \"#utility.yul\":5746:5750   */\n      0x00\n        /* \"#utility.yul\":5836:5854   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5828:5834   */\n      dup3\n        /* \"#utility.yul\":5825:5855   */\n      gt\n        /* \"#utility.yul\":5822:5878   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":5858:5876   */\n      tag_368\n      tag_86\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5822:5878   */\n    tag_367:\n        /* \"#utility.yul\":5908:5912   */\n      0x20\n        /* \"#utility.yul\":5900:5906   */\n      dup3\n        /* \"#utility.yul\":5896:5913   */\n      mul\n        /* \"#utility.yul\":5888:5913   */\n      swap1\n      pop\n        /* \"#utility.yul\":5968:5972   */\n      0x20\n        /* \"#utility.yul\":5962:5966   */\n      dup2\n        /* \"#utility.yul\":5958:5973   */\n      add\n        /* \"#utility.yul\":5950:5973   */\n      swap1\n      pop\n        /* \"#utility.yul\":5669:5980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5986:6103   */\n    tag_248:\n        /* \"#utility.yul\":6095:6096   */\n      0x00\n        /* \"#utility.yul\":6092:6093   */\n      dup1\n        /* \"#utility.yul\":6085:6097   */\n      revert\n        /* \"#utility.yul\":6126:6836   */\n    tag_249:\n        /* \"#utility.yul\":6222:6227   */\n      0x00\n        /* \"#utility.yul\":6247:6328   */\n      tag_371\n        /* \"#utility.yul\":6263:6327   */\n      tag_372\n        /* \"#utility.yul\":6320:6326   */\n      dup5\n        /* \"#utility.yul\":6263:6327   */\n      tag_247\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":6247:6328   */\n      tag_246\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":6238:6328   */\n      swap1\n      pop\n        /* \"#utility.yul\":6348:6353   */\n      dup1\n        /* \"#utility.yul\":6377:6383   */\n      dup4\n        /* \"#utility.yul\":6370:6375   */\n      dup3\n        /* \"#utility.yul\":6363:6384   */\n      mstore\n        /* \"#utility.yul\":6411:6415   */\n      0x20\n        /* \"#utility.yul\":6404:6409   */\n      dup3\n        /* \"#utility.yul\":6400:6416   */\n      add\n        /* \"#utility.yul\":6393:6416   */\n      swap1\n      pop\n        /* \"#utility.yul\":6464:6468   */\n      0x20\n        /* \"#utility.yul\":6456:6462   */\n      dup5\n        /* \"#utility.yul\":6452:6469   */\n      mul\n        /* \"#utility.yul\":6444:6450   */\n      dup4\n        /* \"#utility.yul\":6440:6470   */\n      add\n        /* \"#utility.yul\":6493:6496   */\n      dup6\n        /* \"#utility.yul\":6485:6491   */\n      dup2\n        /* \"#utility.yul\":6482:6497   */\n      gt\n        /* \"#utility.yul\":6479:6601   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":6512:6591   */\n      tag_374\n      tag_248\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":6479:6601   */\n    tag_373:\n        /* \"#utility.yul\":6627:6633   */\n      dup4\n        /* \"#utility.yul\":6610:6830   */\n    tag_375:\n        /* \"#utility.yul\":6644:6650   */\n      dup2\n        /* \"#utility.yul\":6639:6642   */\n      dup2\n        /* \"#utility.yul\":6636:6651   */\n      lt\n        /* \"#utility.yul\":6610:6830   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":6719:6722   */\n      dup1\n        /* \"#utility.yul\":6748:6785   */\n      tag_378\n        /* \"#utility.yul\":6781:6784   */\n      dup9\n        /* \"#utility.yul\":6769:6779   */\n      dup3\n        /* \"#utility.yul\":6748:6785   */\n      tag_232\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6743:6746   */\n      dup5\n        /* \"#utility.yul\":6736:6786   */\n      mstore\n        /* \"#utility.yul\":6815:6819   */\n      0x20\n        /* \"#utility.yul\":6810:6813   */\n      dup5\n        /* \"#utility.yul\":6806:6820   */\n      add\n        /* \"#utility.yul\":6799:6820   */\n      swap4\n      pop\n        /* \"#utility.yul\":6686:6830   */\n      pop\n        /* \"#utility.yul\":6670:6674   */\n      0x20\n        /* \"#utility.yul\":6665:6668   */\n      dup2\n        /* \"#utility.yul\":6661:6675   */\n      add\n        /* \"#utility.yul\":6654:6675   */\n      swap1\n      pop\n        /* \"#utility.yul\":6610:6830   */\n      jump(tag_375)\n    tag_377:\n        /* \"#utility.yul\":6614:6635   */\n      pop\n        /* \"#utility.yul\":6228:6836   */\n      pop\n      pop\n        /* \"#utility.yul\":6126:6836   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6859:7229   */\n    tag_250:\n        /* \"#utility.yul\":6930:6935   */\n      0x00\n        /* \"#utility.yul\":6979:6982   */\n      dup3\n        /* \"#utility.yul\":6972:6976   */\n      0x1f\n        /* \"#utility.yul\":6964:6970   */\n      dup4\n        /* \"#utility.yul\":6960:6977   */\n      add\n        /* \"#utility.yul\":6956:6983   */\n      slt\n        /* \"#utility.yul\":6946:7068   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":6987:7066   */\n      tag_381\n      tag_244\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":6946:7068   */\n    tag_380:\n        /* \"#utility.yul\":7104:7110   */\n      dup2\n        /* \"#utility.yul\":7091:7111   */\n      calldataload\n        /* \"#utility.yul\":7129:7223   */\n      tag_382\n        /* \"#utility.yul\":7219:7222   */\n      dup5\n        /* \"#utility.yul\":7211:7217   */\n      dup3\n        /* \"#utility.yul\":7204:7208   */\n      0x20\n        /* \"#utility.yul\":7196:7202   */\n      dup7\n        /* \"#utility.yul\":7192:7209   */\n      add\n        /* \"#utility.yul\":7129:7223   */\n      tag_249\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":7120:7223   */\n      swap2\n      pop\n        /* \"#utility.yul\":6936:7229   */\n      pop\n        /* \"#utility.yul\":6859:7229   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7235:7352   */\n    tag_251:\n        /* \"#utility.yul\":7344:7345   */\n      0x00\n        /* \"#utility.yul\":7341:7342   */\n      dup1\n        /* \"#utility.yul\":7334:7346   */\n      revert\n        /* \"#utility.yul\":7358:7665   */\n    tag_252:\n        /* \"#utility.yul\":7419:7423   */\n      0x00\n        /* \"#utility.yul\":7509:7527   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7501:7507   */\n      dup3\n        /* \"#utility.yul\":7498:7528   */\n      gt\n        /* \"#utility.yul\":7495:7551   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":7531:7549   */\n      tag_386\n      tag_86\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":7495:7551   */\n    tag_385:\n        /* \"#utility.yul\":7569:7598   */\n      tag_387\n        /* \"#utility.yul\":7591:7597   */\n      dup3\n        /* \"#utility.yul\":7569:7598   */\n      tag_242\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":7561:7598   */\n      swap1\n      pop\n        /* \"#utility.yul\":7653:7657   */\n      0x20\n        /* \"#utility.yul\":7647:7651   */\n      dup2\n        /* \"#utility.yul\":7643:7658   */\n      add\n        /* \"#utility.yul\":7635:7658   */\n      swap1\n      pop\n        /* \"#utility.yul\":7358:7665   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7671:7825   */\n    tag_253:\n        /* \"#utility.yul\":7755:7761   */\n      dup3\n        /* \"#utility.yul\":7750:7753   */\n      dup2\n        /* \"#utility.yul\":7745:7748   */\n      dup4\n        /* \"#utility.yul\":7732:7762   */\n      calldatacopy\n        /* \"#utility.yul\":7817:7818   */\n      0x00\n        /* \"#utility.yul\":7808:7814   */\n      dup4\n        /* \"#utility.yul\":7803:7806   */\n      dup4\n        /* \"#utility.yul\":7799:7815   */\n      add\n        /* \"#utility.yul\":7792:7819   */\n      mstore\n        /* \"#utility.yul\":7671:7825   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7831:8241   */\n    tag_254:\n        /* \"#utility.yul\":7908:7913   */\n      0x00\n        /* \"#utility.yul\":7933:7998   */\n      tag_390\n        /* \"#utility.yul\":7949:7997   */\n      tag_391\n        /* \"#utility.yul\":7990:7996   */\n      dup5\n        /* \"#utility.yul\":7949:7997   */\n      tag_252\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":7933:7998   */\n      tag_246\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":7924:7998   */\n      swap1\n      pop\n        /* \"#utility.yul\":8021:8027   */\n      dup3\n        /* \"#utility.yul\":8014:8019   */\n      dup2\n        /* \"#utility.yul\":8007:8028   */\n      mstore\n        /* \"#utility.yul\":8059:8063   */\n      0x20\n        /* \"#utility.yul\":8052:8057   */\n      dup2\n        /* \"#utility.yul\":8048:8064   */\n      add\n        /* \"#utility.yul\":8097:8100   */\n      dup5\n        /* \"#utility.yul\":8088:8094   */\n      dup5\n        /* \"#utility.yul\":8083:8086   */\n      dup5\n        /* \"#utility.yul\":8079:8095   */\n      add\n        /* \"#utility.yul\":8076:8101   */\n      gt\n        /* \"#utility.yul\":8073:8185   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":8104:8183   */\n      tag_393\n      tag_251\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":8073:8185   */\n    tag_392:\n        /* \"#utility.yul\":8194:8235   */\n      tag_394\n        /* \"#utility.yul\":8228:8234   */\n      dup5\n        /* \"#utility.yul\":8223:8226   */\n      dup3\n        /* \"#utility.yul\":8218:8221   */\n      dup6\n        /* \"#utility.yul\":8194:8235   */\n      tag_253\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":7914:8241   */\n      pop\n        /* \"#utility.yul\":7831:8241   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8260:8598   */\n    tag_255:\n        /* \"#utility.yul\":8315:8320   */\n      0x00\n        /* \"#utility.yul\":8364:8367   */\n      dup3\n        /* \"#utility.yul\":8357:8361   */\n      0x1f\n        /* \"#utility.yul\":8349:8355   */\n      dup4\n        /* \"#utility.yul\":8345:8362   */\n      add\n        /* \"#utility.yul\":8341:8368   */\n      slt\n        /* \"#utility.yul\":8331:8453   */\n      tag_396\n      jumpi\n        /* \"#utility.yul\":8372:8451   */\n      tag_397\n      tag_244\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":8331:8453   */\n    tag_396:\n        /* \"#utility.yul\":8489:8495   */\n      dup2\n        /* \"#utility.yul\":8476:8496   */\n      calldataload\n        /* \"#utility.yul\":8514:8592   */\n      tag_398\n        /* \"#utility.yul\":8588:8591   */\n      dup5\n        /* \"#utility.yul\":8580:8586   */\n      dup3\n        /* \"#utility.yul\":8573:8577   */\n      0x20\n        /* \"#utility.yul\":8565:8571   */\n      dup7\n        /* \"#utility.yul\":8561:8578   */\n      add\n        /* \"#utility.yul\":8514:8592   */\n      tag_254\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":8505:8592   */\n      swap2\n      pop\n        /* \"#utility.yul\":8321:8598   */\n      pop\n        /* \"#utility.yul\":8260:8598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8604:10113   */\n    tag_32:\n        /* \"#utility.yul\":8758:8764   */\n      0x00\n        /* \"#utility.yul\":8766:8772   */\n      dup1\n        /* \"#utility.yul\":8774:8780   */\n      0x00\n        /* \"#utility.yul\":8782:8788   */\n      dup1\n        /* \"#utility.yul\":8790:8796   */\n      0x00\n        /* \"#utility.yul\":8839:8842   */\n      0xa0\n        /* \"#utility.yul\":8827:8836   */\n      dup7\n        /* \"#utility.yul\":8818:8825   */\n      dup9\n        /* \"#utility.yul\":8814:8837   */\n      sub\n        /* \"#utility.yul\":8810:8843   */\n      slt\n        /* \"#utility.yul\":8807:8927   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":8846:8925   */\n      tag_401\n      tag_224\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":8807:8927   */\n    tag_400:\n        /* \"#utility.yul\":8966:8967   */\n      0x00\n        /* \"#utility.yul\":8991:9044   */\n      tag_402\n        /* \"#utility.yul\":9036:9043   */\n      dup9\n        /* \"#utility.yul\":9027:9033   */\n      dup3\n        /* \"#utility.yul\":9016:9025   */\n      dup10\n        /* \"#utility.yul\":9012:9034   */\n      add\n        /* \"#utility.yul\":8991:9044   */\n      tag_229\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":8981:9044   */\n      swap6\n      pop\n        /* \"#utility.yul\":8937:9054   */\n      pop\n        /* \"#utility.yul\":9093:9095   */\n      0x20\n        /* \"#utility.yul\":9119:9172   */\n      tag_403\n        /* \"#utility.yul\":9164:9171   */\n      dup9\n        /* \"#utility.yul\":9155:9161   */\n      dup3\n        /* \"#utility.yul\":9144:9153   */\n      dup10\n        /* \"#utility.yul\":9140:9162   */\n      add\n        /* \"#utility.yul\":9119:9172   */\n      tag_229\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":9109:9172   */\n      swap5\n      pop\n        /* \"#utility.yul\":9064:9182   */\n      pop\n        /* \"#utility.yul\":9249:9251   */\n      0x40\n        /* \"#utility.yul\":9238:9247   */\n      dup7\n        /* \"#utility.yul\":9234:9252   */\n      add\n        /* \"#utility.yul\":9221:9253   */\n      calldataload\n        /* \"#utility.yul\":9280:9298   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9272:9278   */\n      dup2\n        /* \"#utility.yul\":9269:9299   */\n      gt\n        /* \"#utility.yul\":9266:9383   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":9302:9381   */\n      tag_405\n      tag_225\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":9266:9383   */\n    tag_404:\n        /* \"#utility.yul\":9407:9485   */\n      tag_406\n        /* \"#utility.yul\":9477:9484   */\n      dup9\n        /* \"#utility.yul\":9468:9474   */\n      dup3\n        /* \"#utility.yul\":9457:9466   */\n      dup10\n        /* \"#utility.yul\":9453:9475   */\n      add\n        /* \"#utility.yul\":9407:9485   */\n      tag_250\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":9397:9485   */\n      swap4\n      pop\n        /* \"#utility.yul\":9192:9495   */\n      pop\n        /* \"#utility.yul\":9562:9564   */\n      0x60\n        /* \"#utility.yul\":9551:9560   */\n      dup7\n        /* \"#utility.yul\":9547:9565   */\n      add\n        /* \"#utility.yul\":9534:9566   */\n      calldataload\n        /* \"#utility.yul\":9593:9611   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9585:9591   */\n      dup2\n        /* \"#utility.yul\":9582:9612   */\n      gt\n        /* \"#utility.yul\":9579:9696   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":9615:9694   */\n      tag_408\n      tag_225\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":9579:9696   */\n    tag_407:\n        /* \"#utility.yul\":9720:9798   */\n      tag_409\n        /* \"#utility.yul\":9790:9797   */\n      dup9\n        /* \"#utility.yul\":9781:9787   */\n      dup3\n        /* \"#utility.yul\":9770:9779   */\n      dup10\n        /* \"#utility.yul\":9766:9788   */\n      add\n        /* \"#utility.yul\":9720:9798   */\n      tag_250\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":9710:9798   */\n      swap3\n      pop\n        /* \"#utility.yul\":9505:9808   */\n      pop\n        /* \"#utility.yul\":9875:9878   */\n      0x80\n        /* \"#utility.yul\":9864:9873   */\n      dup7\n        /* \"#utility.yul\":9860:9879   */\n      add\n        /* \"#utility.yul\":9847:9880   */\n      calldataload\n        /* \"#utility.yul\":9907:9925   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9899:9905   */\n      dup2\n        /* \"#utility.yul\":9896:9926   */\n      gt\n        /* \"#utility.yul\":9893:10010   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":9929:10008   */\n      tag_411\n      tag_225\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":9893:10010   */\n    tag_410:\n        /* \"#utility.yul\":10034:10096   */\n      tag_412\n        /* \"#utility.yul\":10088:10095   */\n      dup9\n        /* \"#utility.yul\":10079:10085   */\n      dup3\n        /* \"#utility.yul\":10068:10077   */\n      dup10\n        /* \"#utility.yul\":10064:10086   */\n      add\n        /* \"#utility.yul\":10034:10096   */\n      tag_255\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":10024:10096   */\n      swap2\n      pop\n        /* \"#utility.yul\":9818:10106   */\n      pop\n        /* \"#utility.yul\":8604:10113   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10119:10430   */\n    tag_256:\n        /* \"#utility.yul\":10196:10200   */\n      0x00\n        /* \"#utility.yul\":10286:10304   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10278:10284   */\n      dup3\n        /* \"#utility.yul\":10275:10305   */\n      gt\n        /* \"#utility.yul\":10272:10328   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":10308:10326   */\n      tag_415\n      tag_86\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":10272:10328   */\n    tag_414:\n        /* \"#utility.yul\":10358:10362   */\n      0x20\n        /* \"#utility.yul\":10350:10356   */\n      dup3\n        /* \"#utility.yul\":10346:10363   */\n      mul\n        /* \"#utility.yul\":10338:10363   */\n      swap1\n      pop\n        /* \"#utility.yul\":10418:10422   */\n      0x20\n        /* \"#utility.yul\":10412:10416   */\n      dup2\n        /* \"#utility.yul\":10408:10423   */\n      add\n        /* \"#utility.yul\":10400:10423   */\n      swap1\n      pop\n        /* \"#utility.yul\":10119:10430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10453:11163   */\n    tag_257:\n        /* \"#utility.yul\":10549:10554   */\n      0x00\n        /* \"#utility.yul\":10574:10655   */\n      tag_417\n        /* \"#utility.yul\":10590:10654   */\n      tag_418\n        /* \"#utility.yul\":10647:10653   */\n      dup5\n        /* \"#utility.yul\":10590:10654   */\n      tag_256\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":10574:10655   */\n      tag_246\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":10565:10655   */\n      swap1\n      pop\n        /* \"#utility.yul\":10675:10680   */\n      dup1\n        /* \"#utility.yul\":10704:10710   */\n      dup4\n        /* \"#utility.yul\":10697:10702   */\n      dup3\n        /* \"#utility.yul\":10690:10711   */\n      mstore\n        /* \"#utility.yul\":10738:10742   */\n      0x20\n        /* \"#utility.yul\":10731:10736   */\n      dup3\n        /* \"#utility.yul\":10727:10743   */\n      add\n        /* \"#utility.yul\":10720:10743   */\n      swap1\n      pop\n        /* \"#utility.yul\":10791:10795   */\n      0x20\n        /* \"#utility.yul\":10783:10789   */\n      dup5\n        /* \"#utility.yul\":10779:10796   */\n      mul\n        /* \"#utility.yul\":10771:10777   */\n      dup4\n        /* \"#utility.yul\":10767:10797   */\n      add\n        /* \"#utility.yul\":10820:10823   */\n      dup6\n        /* \"#utility.yul\":10812:10818   */\n      dup2\n        /* \"#utility.yul\":10809:10824   */\n      gt\n        /* \"#utility.yul\":10806:10928   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":10839:10918   */\n      tag_420\n      tag_248\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":10806:10928   */\n    tag_419:\n        /* \"#utility.yul\":10954:10960   */\n      dup4\n        /* \"#utility.yul\":10937:11157   */\n    tag_421:\n        /* \"#utility.yul\":10971:10977   */\n      dup2\n        /* \"#utility.yul\":10966:10969   */\n      dup2\n        /* \"#utility.yul\":10963:10978   */\n      lt\n        /* \"#utility.yul\":10937:11157   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":11046:11049   */\n      dup1\n        /* \"#utility.yul\":11075:11112   */\n      tag_424\n        /* \"#utility.yul\":11108:11111   */\n      dup9\n        /* \"#utility.yul\":11096:11106   */\n      dup3\n        /* \"#utility.yul\":11075:11112   */\n      tag_229\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":11070:11073   */\n      dup5\n        /* \"#utility.yul\":11063:11113   */\n      mstore\n        /* \"#utility.yul\":11142:11146   */\n      0x20\n        /* \"#utility.yul\":11137:11140   */\n      dup5\n        /* \"#utility.yul\":11133:11147   */\n      add\n        /* \"#utility.yul\":11126:11147   */\n      swap4\n      pop\n        /* \"#utility.yul\":11013:11157   */\n      pop\n        /* \"#utility.yul\":10997:11001   */\n      0x20\n        /* \"#utility.yul\":10992:10995   */\n      dup2\n        /* \"#utility.yul\":10988:11002   */\n      add\n        /* \"#utility.yul\":10981:11002   */\n      swap1\n      pop\n        /* \"#utility.yul\":10937:11157   */\n      jump(tag_421)\n    tag_423:\n        /* \"#utility.yul\":10941:10962   */\n      pop\n        /* \"#utility.yul\":10555:11163   */\n      pop\n      pop\n        /* \"#utility.yul\":10453:11163   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11186:11556   */\n    tag_258:\n        /* \"#utility.yul\":11257:11262   */\n      0x00\n        /* \"#utility.yul\":11306:11309   */\n      dup3\n        /* \"#utility.yul\":11299:11303   */\n      0x1f\n        /* \"#utility.yul\":11291:11297   */\n      dup4\n        /* \"#utility.yul\":11287:11304   */\n      add\n        /* \"#utility.yul\":11283:11310   */\n      slt\n        /* \"#utility.yul\":11273:11395   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":11314:11393   */\n      tag_427\n      tag_244\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":11273:11395   */\n    tag_426:\n        /* \"#utility.yul\":11431:11437   */\n      dup2\n        /* \"#utility.yul\":11418:11438   */\n      calldataload\n        /* \"#utility.yul\":11456:11550   */\n      tag_428\n        /* \"#utility.yul\":11546:11549   */\n      dup5\n        /* \"#utility.yul\":11538:11544   */\n      dup3\n        /* \"#utility.yul\":11531:11535   */\n      0x20\n        /* \"#utility.yul\":11523:11529   */\n      dup7\n        /* \"#utility.yul\":11519:11536   */\n      add\n        /* \"#utility.yul\":11456:11550   */\n      tag_257\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":11447:11550   */\n      swap2\n      pop\n        /* \"#utility.yul\":11263:11556   */\n      pop\n        /* \"#utility.yul\":11186:11556   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11562:12456   */\n    tag_36:\n        /* \"#utility.yul\":11680:11686   */\n      0x00\n        /* \"#utility.yul\":11688:11694   */\n      dup1\n        /* \"#utility.yul\":11737:11739   */\n      0x40\n        /* \"#utility.yul\":11725:11734   */\n      dup4\n        /* \"#utility.yul\":11716:11723   */\n      dup6\n        /* \"#utility.yul\":11712:11735   */\n      sub\n        /* \"#utility.yul\":11708:11740   */\n      slt\n        /* \"#utility.yul\":11705:11824   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":11743:11822   */\n      tag_431\n      tag_224\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":11705:11824   */\n    tag_430:\n        /* \"#utility.yul\":11891:11892   */\n      0x00\n        /* \"#utility.yul\":11880:11889   */\n      dup4\n        /* \"#utility.yul\":11876:11893   */\n      add\n        /* \"#utility.yul\":11863:11894   */\n      calldataload\n        /* \"#utility.yul\":11921:11939   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11913:11919   */\n      dup2\n        /* \"#utility.yul\":11910:11940   */\n      gt\n        /* \"#utility.yul\":11907:12024   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":11943:12022   */\n      tag_433\n      tag_225\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":11907:12024   */\n    tag_432:\n        /* \"#utility.yul\":12048:12126   */\n      tag_434\n        /* \"#utility.yul\":12118:12125   */\n      dup6\n        /* \"#utility.yul\":12109:12115   */\n      dup3\n        /* \"#utility.yul\":12098:12107   */\n      dup7\n        /* \"#utility.yul\":12094:12116   */\n      add\n        /* \"#utility.yul\":12048:12126   */\n      tag_258\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":12038:12126   */\n      swap3\n      pop\n        /* \"#utility.yul\":11834:12136   */\n      pop\n        /* \"#utility.yul\":12203:12205   */\n      0x20\n        /* \"#utility.yul\":12192:12201   */\n      dup4\n        /* \"#utility.yul\":12188:12206   */\n      add\n        /* \"#utility.yul\":12175:12207   */\n      calldataload\n        /* \"#utility.yul\":12234:12252   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12226:12232   */\n      dup2\n        /* \"#utility.yul\":12223:12253   */\n      gt\n        /* \"#utility.yul\":12220:12337   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":12256:12335   */\n      tag_436\n      tag_225\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":12220:12337   */\n    tag_435:\n        /* \"#utility.yul\":12361:12439   */\n      tag_437\n        /* \"#utility.yul\":12431:12438   */\n      dup6\n        /* \"#utility.yul\":12422:12428   */\n      dup3\n        /* \"#utility.yul\":12411:12420   */\n      dup7\n        /* \"#utility.yul\":12407:12429   */\n      add\n        /* \"#utility.yul\":12361:12439   */\n      tag_250\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":12351:12439   */\n      swap2\n      pop\n        /* \"#utility.yul\":12146:12449   */\n      pop\n        /* \"#utility.yul\":11562:12456   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12462:12576   */\n    tag_259:\n        /* \"#utility.yul\":12529:12535   */\n      0x00\n        /* \"#utility.yul\":12563:12568   */\n      dup2\n        /* \"#utility.yul\":12557:12569   */\n      mload\n        /* \"#utility.yul\":12547:12569   */\n      swap1\n      pop\n        /* \"#utility.yul\":12462:12576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12582:12766   */\n    tag_260:\n        /* \"#utility.yul\":12681:12692   */\n      0x00\n        /* \"#utility.yul\":12715:12721   */\n      dup3\n        /* \"#utility.yul\":12710:12713   */\n      dup3\n        /* \"#utility.yul\":12703:12722   */\n      mstore\n        /* \"#utility.yul\":12755:12759   */\n      0x20\n        /* \"#utility.yul\":12750:12753   */\n      dup3\n        /* \"#utility.yul\":12746:12760   */\n      add\n        /* \"#utility.yul\":12731:12760   */\n      swap1\n      pop\n        /* \"#utility.yul\":12582:12766   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12772:12904   */\n    tag_261:\n        /* \"#utility.yul\":12839:12843   */\n      0x00\n        /* \"#utility.yul\":12862:12865   */\n      dup2\n        /* \"#utility.yul\":12854:12865   */\n      swap1\n      pop\n        /* \"#utility.yul\":12892:12896   */\n      0x20\n        /* \"#utility.yul\":12887:12890   */\n      dup3\n        /* \"#utility.yul\":12883:12897   */\n      add\n        /* \"#utility.yul\":12875:12897   */\n      swap1\n      pop\n        /* \"#utility.yul\":12772:12904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12910:13018   */\n    tag_262:\n        /* \"#utility.yul\":12987:13011   */\n      tag_442\n        /* \"#utility.yul\":13005:13010   */\n      dup2\n        /* \"#utility.yul\":12987:13011   */\n      tag_230\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":12982:12985   */\n      dup3\n        /* \"#utility.yul\":12975:13012   */\n      mstore\n        /* \"#utility.yul\":12910:13018   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13024:13203   */\n    tag_263:\n        /* \"#utility.yul\":13093:13103   */\n      0x00\n        /* \"#utility.yul\":13114:13160   */\n      tag_444\n        /* \"#utility.yul\":13156:13159   */\n      dup4\n        /* \"#utility.yul\":13148:13154   */\n      dup4\n        /* \"#utility.yul\":13114:13160   */\n      tag_262\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":13192:13196   */\n      0x20\n        /* \"#utility.yul\":13187:13190   */\n      dup4\n        /* \"#utility.yul\":13183:13197   */\n      add\n        /* \"#utility.yul\":13169:13197   */\n      swap1\n      pop\n        /* \"#utility.yul\":13024:13203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13209:13322   */\n    tag_264:\n        /* \"#utility.yul\":13279:13283   */\n      0x00\n        /* \"#utility.yul\":13311:13315   */\n      0x20\n        /* \"#utility.yul\":13306:13309   */\n      dup3\n        /* \"#utility.yul\":13302:13316   */\n      add\n        /* \"#utility.yul\":13294:13316   */\n      swap1\n      pop\n        /* \"#utility.yul\":13209:13322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13358:14090   */\n    tag_265:\n        /* \"#utility.yul\":13477:13480   */\n      0x00\n        /* \"#utility.yul\":13506:13560   */\n      tag_447\n        /* \"#utility.yul\":13554:13559   */\n      dup3\n        /* \"#utility.yul\":13506:13560   */\n      tag_259\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":13576:13662   */\n      tag_448\n        /* \"#utility.yul\":13655:13661   */\n      dup2\n        /* \"#utility.yul\":13650:13653   */\n      dup6\n        /* \"#utility.yul\":13576:13662   */\n      tag_260\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":13569:13662   */\n      swap4\n      pop\n        /* \"#utility.yul\":13686:13742   */\n      tag_449\n        /* \"#utility.yul\":13736:13741   */\n      dup4\n        /* \"#utility.yul\":13686:13742   */\n      tag_261\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":13765:13772   */\n      dup1\n        /* \"#utility.yul\":13796:13797   */\n      0x00\n        /* \"#utility.yul\":13781:14065   */\n    tag_450:\n        /* \"#utility.yul\":13806:13812   */\n      dup4\n        /* \"#utility.yul\":13803:13804   */\n      dup2\n        /* \"#utility.yul\":13800:13813   */\n      lt\n        /* \"#utility.yul\":13781:14065   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":13882:13888   */\n      dup2\n        /* \"#utility.yul\":13876:13889   */\n      mload\n        /* \"#utility.yul\":13909:13972   */\n      tag_453\n        /* \"#utility.yul\":13968:13971   */\n      dup9\n        /* \"#utility.yul\":13953:13966   */\n      dup3\n        /* \"#utility.yul\":13909:13972   */\n      tag_263\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":13902:13972   */\n      swap8\n      pop\n        /* \"#utility.yul\":13995:14055   */\n      tag_454\n        /* \"#utility.yul\":14048:14054   */\n      dup4\n        /* \"#utility.yul\":13995:14055   */\n      tag_264\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":13985:14055   */\n      swap3\n      pop\n        /* \"#utility.yul\":13841:14065   */\n      pop\n        /* \"#utility.yul\":13828:13829   */\n      0x01\n        /* \"#utility.yul\":13825:13826   */\n      dup2\n        /* \"#utility.yul\":13821:13830   */\n      add\n        /* \"#utility.yul\":13816:13830   */\n      swap1\n      pop\n        /* \"#utility.yul\":13781:14065   */\n      jump(tag_450)\n    tag_452:\n        /* \"#utility.yul\":13785:13799   */\n      pop\n        /* \"#utility.yul\":14081:14084   */\n      dup6\n        /* \"#utility.yul\":14074:14084   */\n      swap4\n      pop\n        /* \"#utility.yul\":13482:14090   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13358:14090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14096:14469   */\n    tag_39:\n        /* \"#utility.yul\":14239:14243   */\n      0x00\n        /* \"#utility.yul\":14277:14279   */\n      0x20\n        /* \"#utility.yul\":14266:14275   */\n      dup3\n        /* \"#utility.yul\":14262:14280   */\n      add\n        /* \"#utility.yul\":14254:14280   */\n      swap1\n      pop\n        /* \"#utility.yul\":14326:14335   */\n      dup2\n        /* \"#utility.yul\":14320:14324   */\n      dup2\n        /* \"#utility.yul\":14316:14336   */\n      sub\n        /* \"#utility.yul\":14312:14313   */\n      0x00\n        /* \"#utility.yul\":14301:14310   */\n      dup4\n        /* \"#utility.yul\":14297:14314   */\n      add\n        /* \"#utility.yul\":14290:14337   */\n      mstore\n        /* \"#utility.yul\":14354:14462   */\n      tag_456\n        /* \"#utility.yul\":14457:14461   */\n      dup2\n        /* \"#utility.yul\":14448:14454   */\n      dup5\n        /* \"#utility.yul\":14354:14462   */\n      tag_265\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":14346:14462   */\n      swap1\n      pop\n        /* \"#utility.yul\":14096:14469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14475:14591   */\n    tag_266:\n        /* \"#utility.yul\":14545:14566   */\n      tag_458\n        /* \"#utility.yul\":14560:14565   */\n      dup2\n        /* \"#utility.yul\":14545:14566   */\n      tag_237\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":14538:14543   */\n      dup2\n        /* \"#utility.yul\":14535:14567   */\n      eq\n        /* \"#utility.yul\":14525:14585   */\n      tag_459\n      jumpi\n        /* \"#utility.yul\":14581:14582   */\n      0x00\n        /* \"#utility.yul\":14578:14579   */\n      dup1\n        /* \"#utility.yul\":14571:14583   */\n      revert\n        /* \"#utility.yul\":14525:14585   */\n    tag_459:\n        /* \"#utility.yul\":14475:14591   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14597:14730   */\n    tag_267:\n        /* \"#utility.yul\":14640:14645   */\n      0x00\n        /* \"#utility.yul\":14678:14684   */\n      dup2\n        /* \"#utility.yul\":14665:14685   */\n      calldataload\n        /* \"#utility.yul\":14656:14685   */\n      swap1\n      pop\n        /* \"#utility.yul\":14694:14724   */\n      tag_461\n        /* \"#utility.yul\":14718:14723   */\n      dup2\n        /* \"#utility.yul\":14694:14724   */\n      tag_266\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":14597:14730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14736:15204   */\n    tag_42:\n        /* \"#utility.yul\":14801:14807   */\n      0x00\n        /* \"#utility.yul\":14809:14815   */\n      dup1\n        /* \"#utility.yul\":14858:14860   */\n      0x40\n        /* \"#utility.yul\":14846:14855   */\n      dup4\n        /* \"#utility.yul\":14837:14844   */\n      dup6\n        /* \"#utility.yul\":14833:14856   */\n      sub\n        /* \"#utility.yul\":14829:14861   */\n      slt\n        /* \"#utility.yul\":14826:14945   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":14864:14943   */\n      tag_464\n      tag_224\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":14826:14945   */\n    tag_463:\n        /* \"#utility.yul\":14984:14985   */\n      0x00\n        /* \"#utility.yul\":15009:15062   */\n      tag_465\n        /* \"#utility.yul\":15054:15061   */\n      dup6\n        /* \"#utility.yul\":15045:15051   */\n      dup3\n        /* \"#utility.yul\":15034:15043   */\n      dup7\n        /* \"#utility.yul\":15030:15052   */\n      add\n        /* \"#utility.yul\":15009:15062   */\n      tag_229\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":14999:15062   */\n      swap3\n      pop\n        /* \"#utility.yul\":14955:15072   */\n      pop\n        /* \"#utility.yul\":15111:15113   */\n      0x20\n        /* \"#utility.yul\":15137:15187   */\n      tag_466\n        /* \"#utility.yul\":15179:15186   */\n      dup6\n        /* \"#utility.yul\":15170:15176   */\n      dup3\n        /* \"#utility.yul\":15159:15168   */\n      dup7\n        /* \"#utility.yul\":15155:15177   */\n      add\n        /* \"#utility.yul\":15137:15187   */\n      tag_267\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":15127:15187   */\n      swap2\n      pop\n        /* \"#utility.yul\":15082:15197   */\n      pop\n        /* \"#utility.yul\":14736:15204   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15210:15684   */\n    tag_46:\n        /* \"#utility.yul\":15278:15284   */\n      0x00\n        /* \"#utility.yul\":15286:15292   */\n      dup1\n        /* \"#utility.yul\":15335:15337   */\n      0x40\n        /* \"#utility.yul\":15323:15332   */\n      dup4\n        /* \"#utility.yul\":15314:15321   */\n      dup6\n        /* \"#utility.yul\":15310:15333   */\n      sub\n        /* \"#utility.yul\":15306:15338   */\n      slt\n        /* \"#utility.yul\":15303:15422   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":15341:15420   */\n      tag_469\n      tag_224\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":15303:15422   */\n    tag_468:\n        /* \"#utility.yul\":15461:15462   */\n      0x00\n        /* \"#utility.yul\":15486:15539   */\n      tag_470\n        /* \"#utility.yul\":15531:15538   */\n      dup6\n        /* \"#utility.yul\":15522:15528   */\n      dup3\n        /* \"#utility.yul\":15511:15520   */\n      dup7\n        /* \"#utility.yul\":15507:15529   */\n      add\n        /* \"#utility.yul\":15486:15539   */\n      tag_229\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":15476:15539   */\n      swap3\n      pop\n        /* \"#utility.yul\":15432:15549   */\n      pop\n        /* \"#utility.yul\":15588:15590   */\n      0x20\n        /* \"#utility.yul\":15614:15667   */\n      tag_471\n        /* \"#utility.yul\":15659:15666   */\n      dup6\n        /* \"#utility.yul\":15650:15656   */\n      dup3\n        /* \"#utility.yul\":15639:15648   */\n      dup7\n        /* \"#utility.yul\":15635:15657   */\n      add\n        /* \"#utility.yul\":15614:15667   */\n      tag_229\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":15604:15667   */\n      swap2\n      pop\n        /* \"#utility.yul\":15559:15677   */\n      pop\n        /* \"#utility.yul\":15210:15684   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15690:16779   */\n    tag_51:\n        /* \"#utility.yul\":15794:15800   */\n      0x00\n        /* \"#utility.yul\":15802:15808   */\n      dup1\n        /* \"#utility.yul\":15810:15816   */\n      0x00\n        /* \"#utility.yul\":15818:15824   */\n      dup1\n        /* \"#utility.yul\":15826:15832   */\n      0x00\n        /* \"#utility.yul\":15875:15878   */\n      0xa0\n        /* \"#utility.yul\":15863:15872   */\n      dup7\n        /* \"#utility.yul\":15854:15861   */\n      dup9\n        /* \"#utility.yul\":15850:15873   */\n      sub\n        /* \"#utility.yul\":15846:15879   */\n      slt\n        /* \"#utility.yul\":15843:15963   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":15882:15961   */\n      tag_474\n      tag_224\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":15843:15963   */\n    tag_473:\n        /* \"#utility.yul\":16002:16003   */\n      0x00\n        /* \"#utility.yul\":16027:16080   */\n      tag_475\n        /* \"#utility.yul\":16072:16079   */\n      dup9\n        /* \"#utility.yul\":16063:16069   */\n      dup3\n        /* \"#utility.yul\":16052:16061   */\n      dup10\n        /* \"#utility.yul\":16048:16070   */\n      add\n        /* \"#utility.yul\":16027:16080   */\n      tag_229\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":16017:16080   */\n      swap6\n      pop\n        /* \"#utility.yul\":15973:16090   */\n      pop\n        /* \"#utility.yul\":16129:16131   */\n      0x20\n        /* \"#utility.yul\":16155:16208   */\n      tag_476\n        /* \"#utility.yul\":16200:16207   */\n      dup9\n        /* \"#utility.yul\":16191:16197   */\n      dup3\n        /* \"#utility.yul\":16180:16189   */\n      dup10\n        /* \"#utility.yul\":16176:16198   */\n      add\n        /* \"#utility.yul\":16155:16208   */\n      tag_229\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":16145:16208   */\n      swap5\n      pop\n        /* \"#utility.yul\":16100:16218   */\n      pop\n        /* \"#utility.yul\":16257:16259   */\n      0x40\n        /* \"#utility.yul\":16283:16336   */\n      tag_477\n        /* \"#utility.yul\":16328:16335   */\n      dup9\n        /* \"#utility.yul\":16319:16325   */\n      dup3\n        /* \"#utility.yul\":16308:16317   */\n      dup10\n        /* \"#utility.yul\":16304:16326   */\n      add\n        /* \"#utility.yul\":16283:16336   */\n      tag_232\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":16273:16336   */\n      swap4\n      pop\n        /* \"#utility.yul\":16228:16346   */\n      pop\n        /* \"#utility.yul\":16385:16387   */\n      0x60\n        /* \"#utility.yul\":16411:16464   */\n      tag_478\n        /* \"#utility.yul\":16456:16463   */\n      dup9\n        /* \"#utility.yul\":16447:16453   */\n      dup3\n        /* \"#utility.yul\":16436:16445   */\n      dup10\n        /* \"#utility.yul\":16432:16454   */\n      add\n        /* \"#utility.yul\":16411:16464   */\n      tag_232\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":16401:16464   */\n      swap3\n      pop\n        /* \"#utility.yul\":16356:16474   */\n      pop\n        /* \"#utility.yul\":16541:16544   */\n      0x80\n        /* \"#utility.yul\":16530:16539   */\n      dup7\n        /* \"#utility.yul\":16526:16545   */\n      add\n        /* \"#utility.yul\":16513:16546   */\n      calldataload\n        /* \"#utility.yul\":16573:16591   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16565:16571   */\n      dup2\n        /* \"#utility.yul\":16562:16592   */\n      gt\n        /* \"#utility.yul\":16559:16676   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":16595:16674   */\n      tag_480\n      tag_225\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":16559:16676   */\n    tag_479:\n        /* \"#utility.yul\":16700:16762   */\n      tag_481\n        /* \"#utility.yul\":16754:16761   */\n      dup9\n        /* \"#utility.yul\":16745:16751   */\n      dup3\n        /* \"#utility.yul\":16734:16743   */\n      dup10\n        /* \"#utility.yul\":16730:16752   */\n      add\n        /* \"#utility.yul\":16700:16762   */\n      tag_255\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":16690:16762   */\n      swap2\n      pop\n        /* \"#utility.yul\":16484:16772   */\n      pop\n        /* \"#utility.yul\":15690:16779   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16785:17015   */\n    tag_268:\n        /* \"#utility.yul\":16925:16959   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":16921:16922   */\n      0x00\n        /* \"#utility.yul\":16913:16919   */\n      dup3\n        /* \"#utility.yul\":16909:16923   */\n      add\n        /* \"#utility.yul\":16902:16960   */\n      mstore\n        /* \"#utility.yul\":16994:17007   */\n      0x65726f2061646472657373000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16989:16991   */\n      0x20\n        /* \"#utility.yul\":16981:16987   */\n      dup3\n        /* \"#utility.yul\":16977:16992   */\n      add\n        /* \"#utility.yul\":16970:17008   */\n      mstore\n        /* \"#utility.yul\":16785:17015   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17021:17387   */\n    tag_269:\n        /* \"#utility.yul\":17163:17166   */\n      0x00\n        /* \"#utility.yul\":17184:17251   */\n      tag_484\n        /* \"#utility.yul\":17248:17250   */\n      0x2b\n        /* \"#utility.yul\":17243:17246   */\n      dup4\n        /* \"#utility.yul\":17184:17251   */\n      tag_240\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":17177:17251   */\n      swap2\n      pop\n        /* \"#utility.yul\":17260:17353   */\n      tag_485\n        /* \"#utility.yul\":17349:17352   */\n      dup3\n        /* \"#utility.yul\":17260:17353   */\n      tag_268\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":17378:17380   */\n      0x40\n        /* \"#utility.yul\":17373:17376   */\n      dup3\n        /* \"#utility.yul\":17369:17381   */\n      add\n        /* \"#utility.yul\":17362:17381   */\n      swap1\n      pop\n        /* \"#utility.yul\":17021:17387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17393:17812   */\n    tag_56:\n        /* \"#utility.yul\":17559:17563   */\n      0x00\n        /* \"#utility.yul\":17597:17599   */\n      0x20\n        /* \"#utility.yul\":17586:17595   */\n      dup3\n        /* \"#utility.yul\":17582:17600   */\n      add\n        /* \"#utility.yul\":17574:17600   */\n      swap1\n      pop\n        /* \"#utility.yul\":17646:17655   */\n      dup2\n        /* \"#utility.yul\":17640:17644   */\n      dup2\n        /* \"#utility.yul\":17636:17656   */\n      sub\n        /* \"#utility.yul\":17632:17633   */\n      0x00\n        /* \"#utility.yul\":17621:17630   */\n      dup4\n        /* \"#utility.yul\":17617:17634   */\n      add\n        /* \"#utility.yul\":17610:17657   */\n      mstore\n        /* \"#utility.yul\":17674:17805   */\n      tag_487\n        /* \"#utility.yul\":17800:17804   */\n      dup2\n        /* \"#utility.yul\":17674:17805   */\n      tag_269\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":17666:17805   */\n      swap1\n      pop\n        /* \"#utility.yul\":17393:17812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17818:17998   */\n    tag_270:\n        /* \"#utility.yul\":17866:17943   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17863:17864   */\n      0x00\n        /* \"#utility.yul\":17856:17944   */\n      mstore\n        /* \"#utility.yul\":17963:17967   */\n      0x22\n        /* \"#utility.yul\":17960:17961   */\n      0x04\n        /* \"#utility.yul\":17953:17968   */\n      mstore\n        /* \"#utility.yul\":17987:17991   */\n      0x24\n        /* \"#utility.yul\":17984:17985   */\n      0x00\n        /* \"#utility.yul\":17977:17992   */\n      revert\n        /* \"#utility.yul\":18004:18324   */\n    tag_64:\n        /* \"#utility.yul\":18048:18054   */\n      0x00\n        /* \"#utility.yul\":18085:18086   */\n      0x02\n        /* \"#utility.yul\":18079:18083   */\n      dup3\n        /* \"#utility.yul\":18075:18087   */\n      div\n        /* \"#utility.yul\":18065:18087   */\n      swap1\n      pop\n        /* \"#utility.yul\":18132:18133   */\n      0x01\n        /* \"#utility.yul\":18126:18130   */\n      dup3\n        /* \"#utility.yul\":18122:18134   */\n      and\n        /* \"#utility.yul\":18153:18171   */\n      dup1\n        /* \"#utility.yul\":18143:18224   */\n      tag_490\n      jumpi\n        /* \"#utility.yul\":18209:18213   */\n      0x7f\n        /* \"#utility.yul\":18201:18207   */\n      dup3\n        /* \"#utility.yul\":18197:18214   */\n      and\n        /* \"#utility.yul\":18187:18214   */\n      swap2\n      pop\n        /* \"#utility.yul\":18143:18224   */\n    tag_490:\n        /* \"#utility.yul\":18271:18273   */\n      0x20\n        /* \"#utility.yul\":18263:18269   */\n      dup3\n        /* \"#utility.yul\":18260:18274   */\n      lt\n        /* \"#utility.yul\":18240:18258   */\n      dup2\n        /* \"#utility.yul\":18237:18275   */\n      eq\n        /* \"#utility.yul\":18234:18318   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":18290:18308   */\n      tag_492\n      tag_270\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":18234:18318   */\n    tag_491:\n        /* \"#utility.yul\":18055:18324   */\n      pop\n        /* \"#utility.yul\":18004:18324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18330:18567   */\n    tag_271:\n        /* \"#utility.yul\":18470:18504   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":18466:18467   */\n      0x00\n        /* \"#utility.yul\":18458:18464   */\n      dup3\n        /* \"#utility.yul\":18454:18468   */\n      add\n        /* \"#utility.yul\":18447:18505   */\n      mstore\n        /* \"#utility.yul\":18539:18559   */\n      0x6f776e6572206e6f7220617070726f7665640000000000000000000000000000\n        /* \"#utility.yul\":18534:18536   */\n      0x20\n        /* \"#utility.yul\":18526:18532   */\n      dup3\n        /* \"#utility.yul\":18522:18537   */\n      add\n        /* \"#utility.yul\":18515:18560   */\n      mstore\n        /* \"#utility.yul\":18330:18567   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18573:18939   */\n    tag_272:\n        /* \"#utility.yul\":18715:18718   */\n      0x00\n        /* \"#utility.yul\":18736:18803   */\n      tag_495\n        /* \"#utility.yul\":18800:18802   */\n      0x32\n        /* \"#utility.yul\":18795:18798   */\n      dup4\n        /* \"#utility.yul\":18736:18803   */\n      tag_240\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":18729:18803   */\n      swap2\n      pop\n        /* \"#utility.yul\":18812:18905   */\n      tag_496\n        /* \"#utility.yul\":18901:18904   */\n      dup3\n        /* \"#utility.yul\":18812:18905   */\n      tag_271\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":18930:18932   */\n      0x40\n        /* \"#utility.yul\":18925:18928   */\n      dup3\n        /* \"#utility.yul\":18921:18933   */\n      add\n        /* \"#utility.yul\":18914:18933   */\n      swap1\n      pop\n        /* \"#utility.yul\":18573:18939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18945:19364   */\n    tag_77:\n        /* \"#utility.yul\":19111:19115   */\n      0x00\n        /* \"#utility.yul\":19149:19151   */\n      0x20\n        /* \"#utility.yul\":19138:19147   */\n      dup3\n        /* \"#utility.yul\":19134:19152   */\n      add\n        /* \"#utility.yul\":19126:19152   */\n      swap1\n      pop\n        /* \"#utility.yul\":19198:19207   */\n      dup2\n        /* \"#utility.yul\":19192:19196   */\n      dup2\n        /* \"#utility.yul\":19188:19208   */\n      sub\n        /* \"#utility.yul\":19184:19185   */\n      0x00\n        /* \"#utility.yul\":19173:19182   */\n      dup4\n        /* \"#utility.yul\":19169:19186   */\n      add\n        /* \"#utility.yul\":19162:19209   */\n      mstore\n        /* \"#utility.yul\":19226:19357   */\n      tag_498\n        /* \"#utility.yul\":19352:19356   */\n      dup2\n        /* \"#utility.yul\":19226:19357   */\n      tag_272\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":19218:19357   */\n      swap1\n      pop\n        /* \"#utility.yul\":18945:19364   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19370:19598   */\n    tag_273:\n        /* \"#utility.yul\":19510:19544   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":19506:19507   */\n      0x00\n        /* \"#utility.yul\":19498:19504   */\n      dup3\n        /* \"#utility.yul\":19494:19508   */\n      add\n        /* \"#utility.yul\":19487:19545   */\n      mstore\n        /* \"#utility.yul\":19579:19590   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19574:19576   */\n      0x20\n        /* \"#utility.yul\":19566:19572   */\n      dup3\n        /* \"#utility.yul\":19562:19577   */\n      add\n        /* \"#utility.yul\":19555:19591   */\n      mstore\n        /* \"#utility.yul\":19370:19598   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19604:19970   */\n    tag_274:\n        /* \"#utility.yul\":19746:19749   */\n      0x00\n        /* \"#utility.yul\":19767:19834   */\n      tag_501\n        /* \"#utility.yul\":19831:19833   */\n      0x29\n        /* \"#utility.yul\":19826:19829   */\n      dup4\n        /* \"#utility.yul\":19767:19834   */\n      tag_240\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":19760:19834   */\n      swap2\n      pop\n        /* \"#utility.yul\":19843:19936   */\n      tag_502\n        /* \"#utility.yul\":19932:19935   */\n      dup3\n        /* \"#utility.yul\":19843:19936   */\n      tag_273\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":19961:19963   */\n      0x40\n        /* \"#utility.yul\":19956:19959   */\n      dup3\n        /* \"#utility.yul\":19952:19964   */\n      add\n        /* \"#utility.yul\":19945:19964   */\n      swap1\n      pop\n        /* \"#utility.yul\":19604:19970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19976:20395   */\n    tag_83:\n        /* \"#utility.yul\":20142:20146   */\n      0x00\n        /* \"#utility.yul\":20180:20182   */\n      0x20\n        /* \"#utility.yul\":20169:20178   */\n      dup3\n        /* \"#utility.yul\":20165:20183   */\n      add\n        /* \"#utility.yul\":20157:20183   */\n      swap1\n      pop\n        /* \"#utility.yul\":20229:20238   */\n      dup2\n        /* \"#utility.yul\":20223:20227   */\n      dup2\n        /* \"#utility.yul\":20219:20239   */\n      sub\n        /* \"#utility.yul\":20215:20216   */\n      0x00\n        /* \"#utility.yul\":20204:20213   */\n      dup4\n        /* \"#utility.yul\":20200:20217   */\n      add\n        /* \"#utility.yul\":20193:20240   */\n      mstore\n        /* \"#utility.yul\":20257:20388   */\n      tag_504\n        /* \"#utility.yul\":20383:20387   */\n      dup2\n        /* \"#utility.yul\":20257:20388   */\n      tag_274\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":20249:20388   */\n      swap1\n      pop\n        /* \"#utility.yul\":19976:20395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20401:20581   */\n    tag_94:\n        /* \"#utility.yul\":20449:20526   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20446:20447   */\n      0x00\n        /* \"#utility.yul\":20439:20527   */\n      mstore\n        /* \"#utility.yul\":20546:20550   */\n      0x32\n        /* \"#utility.yul\":20543:20544   */\n      0x04\n        /* \"#utility.yul\":20536:20551   */\n      mstore\n        /* \"#utility.yul\":20570:20574   */\n      0x24\n        /* \"#utility.yul\":20567:20568   */\n      0x00\n        /* \"#utility.yul\":20560:20575   */\n      revert\n        /* \"#utility.yul\":20587:20767   */\n    tag_275:\n        /* \"#utility.yul\":20635:20712   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20632:20633   */\n      0x00\n        /* \"#utility.yul\":20625:20713   */\n      mstore\n        /* \"#utility.yul\":20732:20736   */\n      0x11\n        /* \"#utility.yul\":20729:20730   */\n      0x04\n        /* \"#utility.yul\":20722:20737   */\n      mstore\n        /* \"#utility.yul\":20756:20760   */\n      0x24\n        /* \"#utility.yul\":20753:20754   */\n      0x00\n        /* \"#utility.yul\":20746:20761   */\n      revert\n        /* \"#utility.yul\":20773:21006   */\n    tag_100:\n        /* \"#utility.yul\":20812:20815   */\n      0x00\n        /* \"#utility.yul\":20835:20859   */\n      tag_508\n        /* \"#utility.yul\":20853:20858   */\n      dup3\n        /* \"#utility.yul\":20835:20859   */\n      tag_230\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":20826:20859   */\n      swap2\n      pop\n        /* \"#utility.yul\":20881:20947   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20874:20879   */\n      dup3\n        /* \"#utility.yul\":20871:20948   */\n      eq\n        /* \"#utility.yul\":20868:20971   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":20951:20969   */\n      tag_510\n      tag_275\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":20868:20971   */\n    tag_509:\n        /* \"#utility.yul\":20998:20999   */\n      0x01\n        /* \"#utility.yul\":20991:20996   */\n      dup3\n        /* \"#utility.yul\":20987:21000   */\n      add\n        /* \"#utility.yul\":20980:21000   */\n      swap1\n      pop\n        /* \"#utility.yul\":20773:21006   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21012:21240   */\n    tag_276:\n        /* \"#utility.yul\":21152:21186   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":21148:21149   */\n      0x00\n        /* \"#utility.yul\":21140:21146   */\n      dup3\n        /* \"#utility.yul\":21136:21150   */\n      add\n        /* \"#utility.yul\":21129:21187   */\n      mstore\n        /* \"#utility.yul\":21221:21232   */\n      0x20617070726f7665640000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21216:21218   */\n      0x20\n        /* \"#utility.yul\":21208:21214   */\n      dup3\n        /* \"#utility.yul\":21204:21219   */\n      add\n        /* \"#utility.yul\":21197:21233   */\n      mstore\n        /* \"#utility.yul\":21012:21240   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21246:21612   */\n    tag_277:\n        /* \"#utility.yul\":21388:21391   */\n      0x00\n        /* \"#utility.yul\":21409:21476   */\n      tag_513\n        /* \"#utility.yul\":21473:21475   */\n      0x29\n        /* \"#utility.yul\":21468:21471   */\n      dup4\n        /* \"#utility.yul\":21409:21476   */\n      tag_240\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":21402:21476   */\n      swap2\n      pop\n        /* \"#utility.yul\":21485:21578   */\n      tag_514\n        /* \"#utility.yul\":21574:21577   */\n      dup3\n        /* \"#utility.yul\":21485:21578   */\n      tag_276\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":21603:21605   */\n      0x40\n        /* \"#utility.yul\":21598:21601   */\n      dup3\n        /* \"#utility.yul\":21594:21606   */\n      add\n        /* \"#utility.yul\":21587:21606   */\n      swap1\n      pop\n        /* \"#utility.yul\":21246:21612   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21618:22037   */\n    tag_113:\n        /* \"#utility.yul\":21784:21788   */\n      0x00\n        /* \"#utility.yul\":21822:21824   */\n      0x20\n        /* \"#utility.yul\":21811:21820   */\n      dup3\n        /* \"#utility.yul\":21807:21825   */\n      add\n        /* \"#utility.yul\":21799:21825   */\n      swap1\n      pop\n        /* \"#utility.yul\":21871:21880   */\n      dup2\n        /* \"#utility.yul\":21865:21869   */\n      dup2\n        /* \"#utility.yul\":21861:21881   */\n      sub\n        /* \"#utility.yul\":21857:21858   */\n      0x00\n        /* \"#utility.yul\":21846:21855   */\n      dup4\n        /* \"#utility.yul\":21842:21859   */\n      add\n        /* \"#utility.yul\":21835:21882   */\n      mstore\n        /* \"#utility.yul\":21899:22030   */\n      tag_516\n        /* \"#utility.yul\":22025:22029   */\n      dup2\n        /* \"#utility.yul\":21899:22030   */\n      tag_277\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":21891:22030   */\n      swap1\n      pop\n        /* \"#utility.yul\":21618:22037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22043:22270   */\n    tag_278:\n        /* \"#utility.yul\":22183:22217   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":22179:22180   */\n      0x00\n        /* \"#utility.yul\":22171:22177   */\n      dup3\n        /* \"#utility.yul\":22167:22181   */\n      add\n        /* \"#utility.yul\":22160:22218   */\n      mstore\n        /* \"#utility.yul\":22252:22262   */\n      0x6d69736d61746368000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22247:22249   */\n      0x20\n        /* \"#utility.yul\":22239:22245   */\n      dup3\n        /* \"#utility.yul\":22235:22250   */\n      add\n        /* \"#utility.yul\":22228:22263   */\n      mstore\n        /* \"#utility.yul\":22043:22270   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22276:22642   */\n    tag_279:\n        /* \"#utility.yul\":22418:22421   */\n      0x00\n        /* \"#utility.yul\":22439:22506   */\n      tag_519\n        /* \"#utility.yul\":22503:22505   */\n      0x28\n        /* \"#utility.yul\":22498:22501   */\n      dup4\n        /* \"#utility.yul\":22439:22506   */\n      tag_240\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":22432:22506   */\n      swap2\n      pop\n        /* \"#utility.yul\":22515:22608   */\n      tag_520\n        /* \"#utility.yul\":22604:22607   */\n      dup3\n        /* \"#utility.yul\":22515:22608   */\n      tag_278\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":22633:22635   */\n      0x40\n        /* \"#utility.yul\":22628:22631   */\n      dup3\n        /* \"#utility.yul\":22624:22636   */\n      add\n        /* \"#utility.yul\":22617:22636   */\n      swap1\n      pop\n        /* \"#utility.yul\":22276:22642   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22648:23067   */\n    tag_121:\n        /* \"#utility.yul\":22814:22818   */\n      0x00\n        /* \"#utility.yul\":22852:22854   */\n      0x20\n        /* \"#utility.yul\":22841:22850   */\n      dup3\n        /* \"#utility.yul\":22837:22855   */\n      add\n        /* \"#utility.yul\":22829:22855   */\n      swap1\n      pop\n        /* \"#utility.yul\":22901:22910   */\n      dup2\n        /* \"#utility.yul\":22895:22899   */\n      dup2\n        /* \"#utility.yul\":22891:22911   */\n      sub\n        /* \"#utility.yul\":22887:22888   */\n      0x00\n        /* \"#utility.yul\":22876:22885   */\n      dup4\n        /* \"#utility.yul\":22872:22889   */\n      add\n        /* \"#utility.yul\":22865:22912   */\n      mstore\n        /* \"#utility.yul\":22929:23060   */\n      tag_522\n        /* \"#utility.yul\":23055:23059   */\n      dup2\n        /* \"#utility.yul\":22929:23060   */\n      tag_279\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":22921:23060   */\n      swap1\n      pop\n        /* \"#utility.yul\":22648:23067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23073:23297   */\n    tag_280:\n        /* \"#utility.yul\":23213:23247   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":23209:23210   */\n      0x00\n        /* \"#utility.yul\":23201:23207   */\n      dup3\n        /* \"#utility.yul\":23197:23211   */\n      add\n        /* \"#utility.yul\":23190:23248   */\n      mstore\n        /* \"#utility.yul\":23282:23289   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23277:23279   */\n      0x20\n        /* \"#utility.yul\":23269:23275   */\n      dup3\n        /* \"#utility.yul\":23265:23280   */\n      add\n        /* \"#utility.yul\":23258:23290   */\n      mstore\n        /* \"#utility.yul\":23073:23297   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23303:23669   */\n    tag_281:\n        /* \"#utility.yul\":23445:23448   */\n      0x00\n        /* \"#utility.yul\":23466:23533   */\n      tag_525\n        /* \"#utility.yul\":23530:23532   */\n      0x25\n        /* \"#utility.yul\":23525:23528   */\n      dup4\n        /* \"#utility.yul\":23466:23533   */\n      tag_240\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":23459:23533   */\n      swap2\n      pop\n        /* \"#utility.yul\":23542:23635   */\n      tag_526\n        /* \"#utility.yul\":23631:23634   */\n      dup3\n        /* \"#utility.yul\":23542:23635   */\n      tag_280\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":23660:23662   */\n      0x40\n        /* \"#utility.yul\":23655:23658   */\n      dup3\n        /* \"#utility.yul\":23651:23663   */\n      add\n        /* \"#utility.yul\":23644:23663   */\n      swap1\n      pop\n        /* \"#utility.yul\":23303:23669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23675:24094   */\n    tag_124:\n        /* \"#utility.yul\":23841:23845   */\n      0x00\n        /* \"#utility.yul\":23879:23881   */\n      0x20\n        /* \"#utility.yul\":23868:23877   */\n      dup3\n        /* \"#utility.yul\":23864:23882   */\n      add\n        /* \"#utility.yul\":23856:23882   */\n      swap1\n      pop\n        /* \"#utility.yul\":23928:23937   */\n      dup2\n        /* \"#utility.yul\":23922:23926   */\n      dup2\n        /* \"#utility.yul\":23918:23938   */\n      sub\n        /* \"#utility.yul\":23914:23915   */\n      0x00\n        /* \"#utility.yul\":23903:23912   */\n      dup4\n        /* \"#utility.yul\":23899:23916   */\n      add\n        /* \"#utility.yul\":23892:23939   */\n      mstore\n        /* \"#utility.yul\":23956:24087   */\n      tag_528\n        /* \"#utility.yul\":24082:24086   */\n      dup2\n        /* \"#utility.yul\":23956:24087   */\n      tag_281\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":23948:24087   */\n      swap1\n      pop\n        /* \"#utility.yul\":23675:24094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24100:24329   */\n    tag_282:\n        /* \"#utility.yul\":24240:24274   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":24236:24237   */\n      0x00\n        /* \"#utility.yul\":24228:24234   */\n      dup3\n        /* \"#utility.yul\":24224:24238   */\n      add\n        /* \"#utility.yul\":24217:24275   */\n      mstore\n        /* \"#utility.yul\":24309:24321   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24304:24306   */\n      0x20\n        /* \"#utility.yul\":24296:24302   */\n      dup3\n        /* \"#utility.yul\":24292:24307   */\n      add\n        /* \"#utility.yul\":24285:24322   */\n      mstore\n        /* \"#utility.yul\":24100:24329   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24335:24701   */\n    tag_283:\n        /* \"#utility.yul\":24477:24480   */\n      0x00\n        /* \"#utility.yul\":24498:24565   */\n      tag_531\n        /* \"#utility.yul\":24562:24564   */\n      0x2a\n        /* \"#utility.yul\":24557:24560   */\n      dup4\n        /* \"#utility.yul\":24498:24565   */\n      tag_240\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":24491:24565   */\n      swap2\n      pop\n        /* \"#utility.yul\":24574:24667   */\n      tag_532\n        /* \"#utility.yul\":24663:24666   */\n      dup3\n        /* \"#utility.yul\":24574:24667   */\n      tag_282\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":24692:24694   */\n      0x40\n        /* \"#utility.yul\":24687:24690   */\n      dup3\n        /* \"#utility.yul\":24683:24695   */\n      add\n        /* \"#utility.yul\":24676:24695   */\n      swap1\n      pop\n        /* \"#utility.yul\":24335:24701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24707:25126   */\n    tag_137:\n        /* \"#utility.yul\":24873:24877   */\n      0x00\n        /* \"#utility.yul\":24911:24913   */\n      0x20\n        /* \"#utility.yul\":24900:24909   */\n      dup3\n        /* \"#utility.yul\":24896:24914   */\n      add\n        /* \"#utility.yul\":24888:24914   */\n      swap1\n      pop\n        /* \"#utility.yul\":24960:24969   */\n      dup2\n        /* \"#utility.yul\":24954:24958   */\n      dup2\n        /* \"#utility.yul\":24950:24970   */\n      sub\n        /* \"#utility.yul\":24946:24947   */\n      0x00\n        /* \"#utility.yul\":24935:24944   */\n      dup4\n        /* \"#utility.yul\":24931:24948   */\n      add\n        /* \"#utility.yul\":24924:24971   */\n      mstore\n        /* \"#utility.yul\":24988:25119   */\n      tag_534\n        /* \"#utility.yul\":25114:25118   */\n      dup2\n        /* \"#utility.yul\":24988:25119   */\n      tag_283\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":24980:25119   */\n      swap1\n      pop\n        /* \"#utility.yul\":24707:25126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25132:25437   */\n    tag_139:\n        /* \"#utility.yul\":25172:25175   */\n      0x00\n        /* \"#utility.yul\":25191:25211   */\n      tag_536\n        /* \"#utility.yul\":25209:25210   */\n      dup3\n        /* \"#utility.yul\":25191:25211   */\n      tag_230\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":25186:25211   */\n      swap2\n      pop\n        /* \"#utility.yul\":25225:25245   */\n      tag_537\n        /* \"#utility.yul\":25243:25244   */\n      dup4\n        /* \"#utility.yul\":25225:25245   */\n      tag_230\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":25220:25245   */\n      swap3\n      pop\n        /* \"#utility.yul\":25379:25380   */\n      dup3\n        /* \"#utility.yul\":25311:25377   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25307:25381   */\n      sub\n        /* \"#utility.yul\":25304:25305   */\n      dup3\n        /* \"#utility.yul\":25301:25382   */\n      gt\n        /* \"#utility.yul\":25298:25405   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":25385:25403   */\n      tag_539\n      tag_275\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":25298:25405   */\n    tag_538:\n        /* \"#utility.yul\":25429:25430   */\n      dup3\n        /* \"#utility.yul\":25426:25427   */\n      dup3\n        /* \"#utility.yul\":25422:25431   */\n      add\n        /* \"#utility.yul\":25415:25431   */\n      swap1\n      pop\n        /* \"#utility.yul\":25132:25437   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25443:26077   */\n    tag_142:\n        /* \"#utility.yul\":25664:25668   */\n      0x00\n        /* \"#utility.yul\":25702:25704   */\n      0x40\n        /* \"#utility.yul\":25691:25700   */\n      dup3\n        /* \"#utility.yul\":25687:25705   */\n      add\n        /* \"#utility.yul\":25679:25705   */\n      swap1\n      pop\n        /* \"#utility.yul\":25751:25760   */\n      dup2\n        /* \"#utility.yul\":25745:25749   */\n      dup2\n        /* \"#utility.yul\":25741:25761   */\n      sub\n        /* \"#utility.yul\":25737:25738   */\n      0x00\n        /* \"#utility.yul\":25726:25735   */\n      dup4\n        /* \"#utility.yul\":25722:25739   */\n      add\n        /* \"#utility.yul\":25715:25762   */\n      mstore\n        /* \"#utility.yul\":25779:25887   */\n      tag_541\n        /* \"#utility.yul\":25882:25886   */\n      dup2\n        /* \"#utility.yul\":25873:25879   */\n      dup6\n        /* \"#utility.yul\":25779:25887   */\n      tag_265\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":25771:25887   */\n      swap1\n      pop\n        /* \"#utility.yul\":25934:25943   */\n      dup2\n        /* \"#utility.yul\":25928:25932   */\n      dup2\n        /* \"#utility.yul\":25924:25944   */\n      sub\n        /* \"#utility.yul\":25919:25921   */\n      0x20\n        /* \"#utility.yul\":25908:25917   */\n      dup4\n        /* \"#utility.yul\":25904:25922   */\n      add\n        /* \"#utility.yul\":25897:25945   */\n      mstore\n        /* \"#utility.yul\":25962:26070   */\n      tag_542\n        /* \"#utility.yul\":26065:26069   */\n      dup2\n        /* \"#utility.yul\":26056:26062   */\n      dup5\n        /* \"#utility.yul\":25962:26070   */\n      tag_265\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":25954:26070   */\n      swap1\n      pop\n        /* \"#utility.yul\":25443:26077   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26083:26311   */\n    tag_284:\n        /* \"#utility.yul\":26223:26257   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":26219:26220   */\n      0x00\n        /* \"#utility.yul\":26211:26217   */\n      dup3\n        /* \"#utility.yul\":26207:26221   */\n      add\n        /* \"#utility.yul\":26200:26258   */\n      mstore\n        /* \"#utility.yul\":26292:26303   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26287:26289   */\n      0x20\n        /* \"#utility.yul\":26279:26285   */\n      dup3\n        /* \"#utility.yul\":26275:26290   */\n      add\n        /* \"#utility.yul\":26268:26304   */\n      mstore\n        /* \"#utility.yul\":26083:26311   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26317:26683   */\n    tag_285:\n        /* \"#utility.yul\":26459:26462   */\n      0x00\n        /* \"#utility.yul\":26480:26547   */\n      tag_545\n        /* \"#utility.yul\":26544:26546   */\n      0x29\n        /* \"#utility.yul\":26539:26542   */\n      dup4\n        /* \"#utility.yul\":26480:26547   */\n      tag_240\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":26473:26547   */\n      swap2\n      pop\n        /* \"#utility.yul\":26556:26649   */\n      tag_546\n        /* \"#utility.yul\":26645:26648   */\n      dup3\n        /* \"#utility.yul\":26556:26649   */\n      tag_284\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":26674:26676   */\n      0x40\n        /* \"#utility.yul\":26669:26672   */\n      dup3\n        /* \"#utility.yul\":26665:26677   */\n      add\n        /* \"#utility.yul\":26658:26677   */\n      swap1\n      pop\n        /* \"#utility.yul\":26317:26683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26689:27108   */\n    tag_150:\n        /* \"#utility.yul\":26855:26859   */\n      0x00\n        /* \"#utility.yul\":26893:26895   */\n      0x20\n        /* \"#utility.yul\":26882:26891   */\n      dup3\n        /* \"#utility.yul\":26878:26896   */\n      add\n        /* \"#utility.yul\":26870:26896   */\n      swap1\n      pop\n        /* \"#utility.yul\":26942:26951   */\n      dup2\n        /* \"#utility.yul\":26936:26940   */\n      dup2\n        /* \"#utility.yul\":26932:26952   */\n      sub\n        /* \"#utility.yul\":26928:26929   */\n      0x00\n        /* \"#utility.yul\":26917:26926   */\n      dup4\n        /* \"#utility.yul\":26913:26930   */\n      add\n        /* \"#utility.yul\":26906:26953   */\n      mstore\n        /* \"#utility.yul\":26970:27101   */\n      tag_548\n        /* \"#utility.yul\":27096:27100   */\n      dup2\n        /* \"#utility.yul\":26970:27101   */\n      tag_285\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":26962:27101   */\n      swap1\n      pop\n        /* \"#utility.yul\":26689:27108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27114:27446   */\n    tag_164:\n        /* \"#utility.yul\":27235:27239   */\n      0x00\n        /* \"#utility.yul\":27273:27275   */\n      0x40\n        /* \"#utility.yul\":27262:27271   */\n      dup3\n        /* \"#utility.yul\":27258:27276   */\n      add\n        /* \"#utility.yul\":27250:27276   */\n      swap1\n      pop\n        /* \"#utility.yul\":27286:27357   */\n      tag_550\n        /* \"#utility.yul\":27354:27355   */\n      0x00\n        /* \"#utility.yul\":27343:27352   */\n      dup4\n        /* \"#utility.yul\":27339:27356   */\n      add\n        /* \"#utility.yul\":27330:27336   */\n      dup6\n        /* \"#utility.yul\":27286:27357   */\n      tag_233\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":27367:27439   */\n      tag_551\n        /* \"#utility.yul\":27435:27437   */\n      0x20\n        /* \"#utility.yul\":27424:27433   */\n      dup4\n        /* \"#utility.yul\":27420:27438   */\n      add\n        /* \"#utility.yul\":27411:27417   */\n      dup5\n        /* \"#utility.yul\":27367:27439   */\n      tag_233\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":27114:27446   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27452:27570   */\n    tag_286:\n        /* \"#utility.yul\":27539:27563   */\n      tag_553\n        /* \"#utility.yul\":27557:27562   */\n      dup2\n        /* \"#utility.yul\":27539:27563   */\n      tag_227\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":27534:27537   */\n      dup3\n        /* \"#utility.yul\":27527:27564   */\n      mstore\n        /* \"#utility.yul\":27452:27570   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27576:27674   */\n    tag_287:\n        /* \"#utility.yul\":27627:27633   */\n      0x00\n        /* \"#utility.yul\":27661:27666   */\n      dup2\n        /* \"#utility.yul\":27655:27667   */\n      mload\n        /* \"#utility.yul\":27645:27667   */\n      swap1\n      pop\n        /* \"#utility.yul\":27576:27674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27680:27848   */\n    tag_288:\n        /* \"#utility.yul\":27763:27774   */\n      0x00\n        /* \"#utility.yul\":27797:27803   */\n      dup3\n        /* \"#utility.yul\":27792:27795   */\n      dup3\n        /* \"#utility.yul\":27785:27804   */\n      mstore\n        /* \"#utility.yul\":27837:27841   */\n      0x20\n        /* \"#utility.yul\":27832:27835   */\n      dup3\n        /* \"#utility.yul\":27828:27842   */\n      add\n        /* \"#utility.yul\":27813:27842   */\n      swap1\n      pop\n        /* \"#utility.yul\":27680:27848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27854:28214   */\n    tag_289:\n        /* \"#utility.yul\":27940:27943   */\n      0x00\n        /* \"#utility.yul\":27968:28006   */\n      tag_557\n        /* \"#utility.yul\":28000:28005   */\n      dup3\n        /* \"#utility.yul\":27968:28006   */\n      tag_287\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":28022:28092   */\n      tag_558\n        /* \"#utility.yul\":28085:28091   */\n      dup2\n        /* \"#utility.yul\":28080:28083   */\n      dup6\n        /* \"#utility.yul\":28022:28092   */\n      tag_288\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":28015:28092   */\n      swap4\n      pop\n        /* \"#utility.yul\":28101:28153   */\n      tag_559\n        /* \"#utility.yul\":28146:28152   */\n      dup2\n        /* \"#utility.yul\":28141:28144   */\n      dup6\n        /* \"#utility.yul\":28134:28138   */\n      0x20\n        /* \"#utility.yul\":28127:28132   */\n      dup7\n        /* \"#utility.yul\":28123:28139   */\n      add\n        /* \"#utility.yul\":28101:28153   */\n      tag_241\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":28178:28207   */\n      tag_560\n        /* \"#utility.yul\":28200:28206   */\n      dup2\n        /* \"#utility.yul\":28178:28207   */\n      tag_242\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":28173:28176   */\n      dup5\n        /* \"#utility.yul\":28169:28208   */\n      add\n        /* \"#utility.yul\":28162:28208   */\n      swap2\n      pop\n        /* \"#utility.yul\":27944:28214   */\n      pop\n        /* \"#utility.yul\":27854:28214   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28220:29273   */\n    tag_175:\n        /* \"#utility.yul\":28543:28547   */\n      0x00\n        /* \"#utility.yul\":28581:28584   */\n      0xa0\n        /* \"#utility.yul\":28570:28579   */\n      dup3\n        /* \"#utility.yul\":28566:28585   */\n      add\n        /* \"#utility.yul\":28558:28585   */\n      swap1\n      pop\n        /* \"#utility.yul\":28595:28666   */\n      tag_562\n        /* \"#utility.yul\":28663:28664   */\n      0x00\n        /* \"#utility.yul\":28652:28661   */\n      dup4\n        /* \"#utility.yul\":28648:28665   */\n      add\n        /* \"#utility.yul\":28639:28645   */\n      dup9\n        /* \"#utility.yul\":28595:28666   */\n      tag_286\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":28676:28748   */\n      tag_563\n        /* \"#utility.yul\":28744:28746   */\n      0x20\n        /* \"#utility.yul\":28733:28742   */\n      dup4\n        /* \"#utility.yul\":28729:28747   */\n      add\n        /* \"#utility.yul\":28720:28726   */\n      dup8\n        /* \"#utility.yul\":28676:28748   */\n      tag_286\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":28795:28804   */\n      dup2\n        /* \"#utility.yul\":28789:28793   */\n      dup2\n        /* \"#utility.yul\":28785:28805   */\n      sub\n        /* \"#utility.yul\":28780:28782   */\n      0x40\n        /* \"#utility.yul\":28769:28778   */\n      dup4\n        /* \"#utility.yul\":28765:28783   */\n      add\n        /* \"#utility.yul\":28758:28806   */\n      mstore\n        /* \"#utility.yul\":28823:28931   */\n      tag_564\n        /* \"#utility.yul\":28926:28930   */\n      dup2\n        /* \"#utility.yul\":28917:28923   */\n      dup7\n        /* \"#utility.yul\":28823:28931   */\n      tag_265\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":28815:28931   */\n      swap1\n      pop\n        /* \"#utility.yul\":28978:28987   */\n      dup2\n        /* \"#utility.yul\":28972:28976   */\n      dup2\n        /* \"#utility.yul\":28968:28988   */\n      sub\n        /* \"#utility.yul\":28963:28965   */\n      0x60\n        /* \"#utility.yul\":28952:28961   */\n      dup4\n        /* \"#utility.yul\":28948:28966   */\n      add\n        /* \"#utility.yul\":28941:28989   */\n      mstore\n        /* \"#utility.yul\":29006:29114   */\n      tag_565\n        /* \"#utility.yul\":29109:29113   */\n      dup2\n        /* \"#utility.yul\":29100:29106   */\n      dup6\n        /* \"#utility.yul\":29006:29114   */\n      tag_265\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":28998:29114   */\n      swap1\n      pop\n        /* \"#utility.yul\":29162:29171   */\n      dup2\n        /* \"#utility.yul\":29156:29160   */\n      dup2\n        /* \"#utility.yul\":29152:29172   */\n      sub\n        /* \"#utility.yul\":29146:29149   */\n      0x80\n        /* \"#utility.yul\":29135:29144   */\n      dup4\n        /* \"#utility.yul\":29131:29150   */\n      add\n        /* \"#utility.yul\":29124:29173   */\n      mstore\n        /* \"#utility.yul\":29190:29266   */\n      tag_566\n        /* \"#utility.yul\":29261:29265   */\n      dup2\n        /* \"#utility.yul\":29252:29258   */\n      dup5\n        /* \"#utility.yul\":29190:29266   */\n      tag_289\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":29182:29266   */\n      swap1\n      pop\n        /* \"#utility.yul\":28220:29273   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29279:29420   */\n    tag_290:\n        /* \"#utility.yul\":29335:29340   */\n      0x00\n        /* \"#utility.yul\":29366:29372   */\n      dup2\n        /* \"#utility.yul\":29360:29373   */\n      mload\n        /* \"#utility.yul\":29351:29373   */\n      swap1\n      pop\n        /* \"#utility.yul\":29382:29414   */\n      tag_568\n        /* \"#utility.yul\":29408:29413   */\n      dup2\n        /* \"#utility.yul\":29382:29414   */\n      tag_235\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":29279:29420   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29426:29775   */\n    tag_179:\n        /* \"#utility.yul\":29495:29501   */\n      0x00\n        /* \"#utility.yul\":29544:29546   */\n      0x20\n        /* \"#utility.yul\":29532:29541   */\n      dup3\n        /* \"#utility.yul\":29523:29530   */\n      dup5\n        /* \"#utility.yul\":29519:29542   */\n      sub\n        /* \"#utility.yul\":29515:29547   */\n      slt\n        /* \"#utility.yul\":29512:29631   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":29550:29629   */\n      tag_571\n      tag_224\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":29512:29631   */\n    tag_570:\n        /* \"#utility.yul\":29670:29671   */\n      0x00\n        /* \"#utility.yul\":29695:29758   */\n      tag_572\n        /* \"#utility.yul\":29750:29757   */\n      dup5\n        /* \"#utility.yul\":29741:29747   */\n      dup3\n        /* \"#utility.yul\":29730:29739   */\n      dup6\n        /* \"#utility.yul\":29726:29748   */\n      add\n        /* \"#utility.yul\":29695:29758   */\n      tag_290\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":29685:29758   */\n      swap2\n      pop\n        /* \"#utility.yul\":29641:29768   */\n      pop\n        /* \"#utility.yul\":29426:29775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29781:29887   */\n    tag_291:\n        /* \"#utility.yul\":29825:29833   */\n      0x00\n        /* \"#utility.yul\":29874:29879   */\n      dup2\n        /* \"#utility.yul\":29869:29872   */\n      0xe0\n        /* \"#utility.yul\":29865:29880   */\n      shr\n        /* \"#utility.yul\":29844:29880   */\n      swap1\n      pop\n        /* \"#utility.yul\":29781:29887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29893:30076   */\n    tag_185:\n        /* \"#utility.yul\":29928:29931   */\n      0x00\n        /* \"#utility.yul\":29966:29967   */\n      0x03\n        /* \"#utility.yul\":29948:29964   */\n      returndatasize\n        /* \"#utility.yul\":29945:29968   */\n      gt\n        /* \"#utility.yul\":29942:30070   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":30004:30005   */\n      0x04\n        /* \"#utility.yul\":30001:30002   */\n      0x00\n        /* \"#utility.yul\":29998:29999   */\n      dup1\n        /* \"#utility.yul\":29983:30006   */\n      returndatacopy\n        /* \"#utility.yul\":30026:30060   */\n      tag_576\n        /* \"#utility.yul\":30057:30058   */\n      0x00\n        /* \"#utility.yul\":30051:30059   */\n      mload\n        /* \"#utility.yul\":30026:30060   */\n      tag_291\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":30019:30060   */\n      swap1\n      pop\n        /* \"#utility.yul\":29942:30070   */\n    tag_575:\n        /* \"#utility.yul\":29893:30076   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":30082:30793   */\n    tag_187:\n        /* \"#utility.yul\":30121:30124   */\n      0x00\n        /* \"#utility.yul\":30159:30163   */\n      0x44\n        /* \"#utility.yul\":30141:30157   */\n      returndatasize\n        /* \"#utility.yul\":30138:30164   */\n      lt\n        /* \"#utility.yul\":30135:30174   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":30167:30172   */\n      jump(tag_577)\n        /* \"#utility.yul\":30135:30174   */\n    tag_578:\n        /* \"#utility.yul\":30196:30216   */\n      tag_579\n      tag_223\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":30271:30272   */\n      0x04\n        /* \"#utility.yul\":30253:30269   */\n      returndatasize\n        /* \"#utility.yul\":30249:30273   */\n      sub\n        /* \"#utility.yul\":30246:30247   */\n      0x04\n        /* \"#utility.yul\":30240:30244   */\n      dup3\n        /* \"#utility.yul\":30225:30274   */\n      returndatacopy\n        /* \"#utility.yul\":30304:30308   */\n      dup1\n        /* \"#utility.yul\":30298:30309   */\n      mload\n        /* \"#utility.yul\":30403:30419   */\n      returndatasize\n        /* \"#utility.yul\":30396:30400   */\n      0x24\n        /* \"#utility.yul\":30388:30394   */\n      dup3\n        /* \"#utility.yul\":30384:30401   */\n      add\n        /* \"#utility.yul\":30381:30420   */\n      gt\n        /* \"#utility.yul\":30348:30366   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":30340:30346   */\n      dup3\n        /* \"#utility.yul\":30337:30367   */\n      gt\n        /* \"#utility.yul\":30321:30434   */\n      or\n        /* \"#utility.yul\":30318:30464   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":30449:30454   */\n      pop\n      pop\n      jump(tag_577)\n        /* \"#utility.yul\":30318:30464   */\n    tag_580:\n        /* \"#utility.yul\":30495:30501   */\n      dup1\n        /* \"#utility.yul\":30489:30493   */\n      dup3\n        /* \"#utility.yul\":30485:30502   */\n      add\n        /* \"#utility.yul\":30531:30534   */\n      dup1\n        /* \"#utility.yul\":30525:30535   */\n      mload\n        /* \"#utility.yul\":30558:30576   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":30550:30556   */\n      dup2\n        /* \"#utility.yul\":30547:30577   */\n      gt\n        /* \"#utility.yul\":30544:30587   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":30580:30585   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_577)\n        /* \"#utility.yul\":30544:30587   */\n    tag_581:\n        /* \"#utility.yul\":30628:30634   */\n      dup1\n        /* \"#utility.yul\":30621:30625   */\n      0x20\n        /* \"#utility.yul\":30616:30619   */\n      dup4\n        /* \"#utility.yul\":30612:30626   */\n      add\n        /* \"#utility.yul\":30608:30635   */\n      add\n        /* \"#utility.yul\":30687:30688   */\n      0x04\n        /* \"#utility.yul\":30669:30685   */\n      returndatasize\n        /* \"#utility.yul\":30665:30689   */\n      sub\n        /* \"#utility.yul\":30659:30663   */\n      dup6\n        /* \"#utility.yul\":30655:30690   */\n      add\n        /* \"#utility.yul\":30650:30653   */\n      dup2\n        /* \"#utility.yul\":30647:30691   */\n      gt\n        /* \"#utility.yul\":30644:30701   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":30694:30699   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_577)\n        /* \"#utility.yul\":30644:30701   */\n    tag_582:\n        /* \"#utility.yul\":30711:30768   */\n      tag_583\n        /* \"#utility.yul\":30759:30765   */\n      dup3\n        /* \"#utility.yul\":30753:30757   */\n      0x20\n        /* \"#utility.yul\":30749:30766   */\n      add\n        /* \"#utility.yul\":30741:30747   */\n      dup6\n        /* \"#utility.yul\":30737:30767   */\n      add\n        /* \"#utility.yul\":30731:30735   */\n      dup7\n        /* \"#utility.yul\":30711:30768   */\n      tag_245\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":30784:30787   */\n      dup3\n        /* \"#utility.yul\":30777:30787   */\n      swap6\n      pop\n        /* \"#utility.yul\":30125:30793   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":30082:30793   */\n    tag_577:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":30799:31038   */\n    tag_292:\n        /* \"#utility.yul\":30939:30973   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":30935:30936   */\n      0x00\n        /* \"#utility.yul\":30927:30933   */\n      dup3\n        /* \"#utility.yul\":30923:30937   */\n      add\n        /* \"#utility.yul\":30916:30974   */\n      mstore\n        /* \"#utility.yul\":31008:31030   */\n      0x526563656976657220696d706c656d656e746572000000000000000000000000\n        /* \"#utility.yul\":31003:31005   */\n      0x20\n        /* \"#utility.yul\":30995:31001   */\n      dup3\n        /* \"#utility.yul\":30991:31006   */\n      add\n        /* \"#utility.yul\":30984:31031   */\n      mstore\n        /* \"#utility.yul\":30799:31038   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31044:31410   */\n    tag_293:\n        /* \"#utility.yul\":31186:31189   */\n      0x00\n        /* \"#utility.yul\":31207:31274   */\n      tag_586\n        /* \"#utility.yul\":31271:31273   */\n      0x34\n        /* \"#utility.yul\":31266:31269   */\n      dup4\n        /* \"#utility.yul\":31207:31274   */\n      tag_240\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":31200:31274   */\n      swap2\n      pop\n        /* \"#utility.yul\":31283:31376   */\n      tag_587\n        /* \"#utility.yul\":31372:31375   */\n      dup3\n        /* \"#utility.yul\":31283:31376   */\n      tag_292\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":31401:31403   */\n      0x40\n        /* \"#utility.yul\":31396:31399   */\n      dup3\n        /* \"#utility.yul\":31392:31404   */\n      add\n        /* \"#utility.yul\":31385:31404   */\n      swap1\n      pop\n        /* \"#utility.yul\":31044:31410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31416:31835   */\n    tag_191:\n        /* \"#utility.yul\":31582:31586   */\n      0x00\n        /* \"#utility.yul\":31620:31622   */\n      0x20\n        /* \"#utility.yul\":31609:31618   */\n      dup3\n        /* \"#utility.yul\":31605:31623   */\n      add\n        /* \"#utility.yul\":31597:31623   */\n      swap1\n      pop\n        /* \"#utility.yul\":31669:31678   */\n      dup2\n        /* \"#utility.yul\":31663:31667   */\n      dup2\n        /* \"#utility.yul\":31659:31679   */\n      sub\n        /* \"#utility.yul\":31655:31656   */\n      0x00\n        /* \"#utility.yul\":31644:31653   */\n      dup4\n        /* \"#utility.yul\":31640:31657   */\n      add\n        /* \"#utility.yul\":31633:31680   */\n      mstore\n        /* \"#utility.yul\":31697:31828   */\n      tag_589\n        /* \"#utility.yul\":31823:31827   */\n      dup2\n        /* \"#utility.yul\":31697:31828   */\n      tag_293\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":31689:31828   */\n      swap1\n      pop\n        /* \"#utility.yul\":31416:31835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31841:32068   */\n    tag_294:\n        /* \"#utility.yul\":31981:32015   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":31977:31978   */\n      0x00\n        /* \"#utility.yul\":31969:31975   */\n      dup3\n        /* \"#utility.yul\":31965:31979   */\n      add\n        /* \"#utility.yul\":31958:32016   */\n      mstore\n        /* \"#utility.yul\":32050:32060   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":32045:32047   */\n      0x20\n        /* \"#utility.yul\":32037:32043   */\n      dup3\n        /* \"#utility.yul\":32033:32048   */\n      add\n        /* \"#utility.yul\":32026:32061   */\n      mstore\n        /* \"#utility.yul\":31841:32068   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32074:32440   */\n    tag_295:\n        /* \"#utility.yul\":32216:32219   */\n      0x00\n        /* \"#utility.yul\":32237:32304   */\n      tag_592\n        /* \"#utility.yul\":32301:32303   */\n      0x28\n        /* \"#utility.yul\":32296:32299   */\n      dup4\n        /* \"#utility.yul\":32237:32304   */\n      tag_240\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":32230:32304   */\n      swap2\n      pop\n        /* \"#utility.yul\":32313:32406   */\n      tag_593\n        /* \"#utility.yul\":32402:32405   */\n      dup3\n        /* \"#utility.yul\":32313:32406   */\n      tag_294\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":32431:32433   */\n      0x40\n        /* \"#utility.yul\":32426:32429   */\n      dup3\n        /* \"#utility.yul\":32422:32434   */\n      add\n        /* \"#utility.yul\":32415:32434   */\n      swap1\n      pop\n        /* \"#utility.yul\":32074:32440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32446:32865   */\n    tag_195:\n        /* \"#utility.yul\":32612:32616   */\n      0x00\n        /* \"#utility.yul\":32650:32652   */\n      0x20\n        /* \"#utility.yul\":32639:32648   */\n      dup3\n        /* \"#utility.yul\":32635:32653   */\n      add\n        /* \"#utility.yul\":32627:32653   */\n      swap1\n      pop\n        /* \"#utility.yul\":32699:32708   */\n      dup2\n        /* \"#utility.yul\":32693:32697   */\n      dup2\n        /* \"#utility.yul\":32689:32709   */\n      sub\n        /* \"#utility.yul\":32685:32686   */\n      0x00\n        /* \"#utility.yul\":32674:32683   */\n      dup4\n        /* \"#utility.yul\":32670:32687   */\n      add\n        /* \"#utility.yul\":32663:32710   */\n      mstore\n        /* \"#utility.yul\":32727:32858   */\n      tag_595\n        /* \"#utility.yul\":32853:32857   */\n      dup2\n        /* \"#utility.yul\":32727:32858   */\n      tag_295\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":32719:32858   */\n      swap1\n      pop\n        /* \"#utility.yul\":32446:32865   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32871:33622   */\n    tag_206:\n        /* \"#utility.yul\":33094:33098   */\n      0x00\n        /* \"#utility.yul\":33132:33135   */\n      0xa0\n        /* \"#utility.yul\":33121:33130   */\n      dup3\n        /* \"#utility.yul\":33117:33136   */\n      add\n        /* \"#utility.yul\":33109:33136   */\n      swap1\n      pop\n        /* \"#utility.yul\":33146:33217   */\n      tag_597\n        /* \"#utility.yul\":33214:33215   */\n      0x00\n        /* \"#utility.yul\":33203:33212   */\n      dup4\n        /* \"#utility.yul\":33199:33216   */\n      add\n        /* \"#utility.yul\":33190:33196   */\n      dup9\n        /* \"#utility.yul\":33146:33217   */\n      tag_286\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":33227:33299   */\n      tag_598\n        /* \"#utility.yul\":33295:33297   */\n      0x20\n        /* \"#utility.yul\":33284:33293   */\n      dup4\n        /* \"#utility.yul\":33280:33298   */\n      add\n        /* \"#utility.yul\":33271:33277   */\n      dup8\n        /* \"#utility.yul\":33227:33299   */\n      tag_286\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":33309:33381   */\n      tag_599\n        /* \"#utility.yul\":33377:33379   */\n      0x40\n        /* \"#utility.yul\":33366:33375   */\n      dup4\n        /* \"#utility.yul\":33362:33380   */\n      add\n        /* \"#utility.yul\":33353:33359   */\n      dup7\n        /* \"#utility.yul\":33309:33381   */\n      tag_233\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":33391:33463   */\n      tag_600\n        /* \"#utility.yul\":33459:33461   */\n      0x60\n        /* \"#utility.yul\":33448:33457   */\n      dup4\n        /* \"#utility.yul\":33444:33462   */\n      add\n        /* \"#utility.yul\":33435:33441   */\n      dup6\n        /* \"#utility.yul\":33391:33463   */\n      tag_233\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":33511:33520   */\n      dup2\n        /* \"#utility.yul\":33505:33509   */\n      dup2\n        /* \"#utility.yul\":33501:33521   */\n      sub\n        /* \"#utility.yul\":33495:33498   */\n      0x80\n        /* \"#utility.yul\":33484:33493   */\n      dup4\n        /* \"#utility.yul\":33480:33499   */\n      add\n        /* \"#utility.yul\":33473:33522   */\n      mstore\n        /* \"#utility.yul\":33539:33615   */\n      tag_601\n        /* \"#utility.yul\":33610:33614   */\n      dup2\n        /* \"#utility.yul\":33601:33607   */\n      dup5\n        /* \"#utility.yul\":33539:33615   */\n      tag_289\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":33531:33615   */\n      swap1\n      pop\n        /* \"#utility.yul\":32871:33622   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e21ce7bbbc6fe52e9c603f72b6b073a735850dcaa3192f55c77676194f2d821764736f6c63430008080033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506125e7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610138578063a22cb46514610168578063e985e9c514610184578063f242432a146101b457610087565b8062fdd58e1461008c57806301ffc9a7146100bc5780630e89341c146100ec5780632eb2c2d61461011c575b600080fd5b6100a660048036038101906100a191906113db565b6101d0565b6040516100b3919061142a565b60405180910390f35b6100d660048036038101906100d1919061149d565b61029a565b6040516100e391906114e5565b60405180910390f35b61010660048036038101906101019190611500565b61037c565b60405161011391906115c6565b60405180910390f35b610136600480360381019061013191906117e5565b610410565b005b610152600480360381019061014d9190611977565b6104b1565b60405161015f9190611aad565b60405180910390f35b610182600480360381019061017d9190611afb565b6105ca565b005b61019e60048036038101906101999190611b3b565b6105e0565b6040516101ab91906114e5565b60405180910390f35b6101ce60048036038101906101c99190611b7b565b610674565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023890611c84565b60405180910390fd5b6065600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036557507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610375575061037482610715565b5b9050919050565b60606067805461038b90611cd3565b80601f01602080910402602001604051908101604052809291908181526020018280546103b790611cd3565b80156104045780601f106103d957610100808354040283529160200191610404565b820191906000526020600020905b8154815290600101906020018083116103e757829003601f168201915b50505050509050919050565b61041861077f565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061045e575061045d8561045861077f565b6105e0565b5b61049d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049490611d77565b60405180910390fd5b6104aa8585858585610787565b5050505050565b606081518351146104f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ee90611e09565b60405180910390fd5b6000835167ffffffffffffffff811115610514576105136115ed565b5b6040519080825280602002602001820160405280156105425781602001602082028036833780820191505090505b50905060005b84518110156105bf5761058f85828151811061056757610566611e29565b5b602002602001015185838151811061058257610581611e29565b5b60200260200101516101d0565b8282815181106105a2576105a1611e29565b5b602002602001018181525050806105b890611e87565b9050610548565b508091505092915050565b6105dc6105d561077f565b8383610aac565b5050565b6000606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61067c61077f565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806106c257506106c1856106bc61077f565b6105e0565b5b610701576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f890611f42565b60405180910390fd5b61070e8585858585610c19565b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b81518351146107cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c290611fd4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561083b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083290612066565b60405180910390fd5b600061084561077f565b9050610855818787878787610eb8565b60005b8451811015610a0957600085828151811061087657610875611e29565b5b60200260200101519050600085838151811061089557610894611e29565b5b6020026020010151905060006065600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610937576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092e906120f8565b60405180910390fd5b8181036065600085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816065600085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109ee9190612118565b9250508190555050505080610a0290611e87565b9050610858565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a8092919061216e565b60405180910390a4610a96818787878787610ec0565b610aa4818787878787610ec8565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1290612217565b60405180910390fd5b80606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c0c91906114e5565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610c89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8090612066565b60405180910390fd5b6000610c9361077f565b90506000610ca0856110af565b90506000610cad856110af565b9050610cbd838989858589610eb8565b60006065600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905085811015610d55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4c906120f8565b60405180910390fd5b8581036065600089815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550856065600089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e0c9190612118565b925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051610e89929190612237565b60405180910390a4610e9f848a8a86868a610ec0565b610ead848a8a8a8a8a611129565b505050505050505050565b505050505050565b505050505050565b610ee78473ffffffffffffffffffffffffffffffffffffffff16611310565b156110a7578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401610f2d9594939291906122c4565b602060405180830381600087803b158015610f4757600080fd5b505af1925050508015610f7857506040513d601f19601f82011682018060405250810190610f759190612341565b60015b61101e57610f8461237b565b806308c379a01415610fe15750610f9961239d565b80610fa45750610fe3565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd891906115c6565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611015906124a5565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146110a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109c90612537565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff8111156110ce576110cd6115ed565b5b6040519080825280602002602001820160405280156110fc5781602001602082028036833780820191505090505b509050828160008151811061111457611113611e29565b5b60200260200101818152505080915050919050565b6111488473ffffffffffffffffffffffffffffffffffffffff16611310565b15611308578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161118e959493929190612557565b602060405180830381600087803b1580156111a857600080fd5b505af19250505080156111d957506040513d601f19601f820116820180604052508101906111d69190612341565b60015b61127f576111e561237b565b806308c379a0141561124257506111fa61239d565b806112055750611244565b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123991906115c6565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611276906124a5565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611306576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112fd90612537565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061137282611347565b9050919050565b61138281611367565b811461138d57600080fd5b50565b60008135905061139f81611379565b92915050565b6000819050919050565b6113b8816113a5565b81146113c357600080fd5b50565b6000813590506113d5816113af565b92915050565b600080604083850312156113f2576113f161133d565b5b600061140085828601611390565b9250506020611411858286016113c6565b9150509250929050565b611424816113a5565b82525050565b600060208201905061143f600083018461141b565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61147a81611445565b811461148557600080fd5b50565b60008135905061149781611471565b92915050565b6000602082840312156114b3576114b261133d565b5b60006114c184828501611488565b91505092915050565b60008115159050919050565b6114df816114ca565b82525050565b60006020820190506114fa60008301846114d6565b92915050565b6000602082840312156115165761151561133d565b5b6000611524848285016113c6565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561156757808201518184015260208101905061154c565b83811115611576576000848401525b50505050565b6000601f19601f8301169050919050565b60006115988261152d565b6115a28185611538565b93506115b2818560208601611549565b6115bb8161157c565b840191505092915050565b600060208201905081810360008301526115e0818461158d565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116258261157c565b810181811067ffffffffffffffff82111715611644576116436115ed565b5b80604052505050565b6000611657611333565b9050611663828261161c565b919050565b600067ffffffffffffffff821115611683576116826115ed565b5b602082029050602081019050919050565b600080fd5b60006116ac6116a784611668565b61164d565b905080838252602082019050602084028301858111156116cf576116ce611694565b5b835b818110156116f857806116e488826113c6565b8452602084019350506020810190506116d1565b5050509392505050565b600082601f830112611717576117166115e8565b5b8135611727848260208601611699565b91505092915050565b600080fd5b600067ffffffffffffffff8211156117505761174f6115ed565b5b6117598261157c565b9050602081019050919050565b82818337600083830152505050565b600061178861178384611735565b61164d565b9050828152602081018484840111156117a4576117a3611730565b5b6117af848285611766565b509392505050565b600082601f8301126117cc576117cb6115e8565b5b81356117dc848260208601611775565b91505092915050565b600080600080600060a086880312156118015761180061133d565b5b600061180f88828901611390565b955050602061182088828901611390565b945050604086013567ffffffffffffffff81111561184157611840611342565b5b61184d88828901611702565b935050606086013567ffffffffffffffff81111561186e5761186d611342565b5b61187a88828901611702565b925050608086013567ffffffffffffffff81111561189b5761189a611342565b5b6118a7888289016117b7565b9150509295509295909350565b600067ffffffffffffffff8211156118cf576118ce6115ed565b5b602082029050602081019050919050565b60006118f36118ee846118b4565b61164d565b9050808382526020820190506020840283018581111561191657611915611694565b5b835b8181101561193f578061192b8882611390565b845260208401935050602081019050611918565b5050509392505050565b600082601f83011261195e5761195d6115e8565b5b813561196e8482602086016118e0565b91505092915050565b6000806040838503121561198e5761198d61133d565b5b600083013567ffffffffffffffff8111156119ac576119ab611342565b5b6119b885828601611949565b925050602083013567ffffffffffffffff8111156119d9576119d8611342565b5b6119e585828601611702565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611a24816113a5565b82525050565b6000611a368383611a1b565b60208301905092915050565b6000602082019050919050565b6000611a5a826119ef565b611a6481856119fa565b9350611a6f83611a0b565b8060005b83811015611aa0578151611a878882611a2a565b9750611a9283611a42565b925050600181019050611a73565b5085935050505092915050565b60006020820190508181036000830152611ac78184611a4f565b905092915050565b611ad8816114ca565b8114611ae357600080fd5b50565b600081359050611af581611acf565b92915050565b60008060408385031215611b1257611b1161133d565b5b6000611b2085828601611390565b9250506020611b3185828601611ae6565b9150509250929050565b60008060408385031215611b5257611b5161133d565b5b6000611b6085828601611390565b9250506020611b7185828601611390565b9150509250929050565b600080600080600060a08688031215611b9757611b9661133d565b5b6000611ba588828901611390565b9550506020611bb688828901611390565b9450506040611bc7888289016113c6565b9350506060611bd8888289016113c6565b925050608086013567ffffffffffffffff811115611bf957611bf8611342565b5b611c05888289016117b7565b9150509295509295909350565b7f455243313135353a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b6000611c6e602b83611538565b9150611c7982611c12565b604082019050919050565b60006020820190508181036000830152611c9d81611c61565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ceb57607f821691505b60208210811415611cff57611cfe611ca4565b5b50919050565b7f455243313135353a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b6000611d61603283611538565b9150611d6c82611d05565b604082019050919050565b60006020820190508181036000830152611d9081611d54565b9050919050565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b6000611df3602983611538565b9150611dfe82611d97565b604082019050919050565b60006020820190508181036000830152611e2281611de6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e92826113a5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ec557611ec4611e58565b5b600182019050919050565b7f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260008201527f20617070726f7665640000000000000000000000000000000000000000000000602082015250565b6000611f2c602983611538565b9150611f3782611ed0565b604082019050919050565b60006020820190508181036000830152611f5b81611f1f565b9050919050565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b6000611fbe602883611538565b9150611fc982611f62565b604082019050919050565b60006020820190508181036000830152611fed81611fb1565b9050919050565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000612050602583611538565b915061205b82611ff4565b604082019050919050565b6000602082019050818103600083015261207f81612043565b9050919050565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b60006120e2602a83611538565b91506120ed82612086565b604082019050919050565b60006020820190508181036000830152612111816120d5565b9050919050565b6000612123826113a5565b915061212e836113a5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561216357612162611e58565b5b828201905092915050565b600060408201905081810360008301526121888185611a4f565b9050818103602083015261219c8184611a4f565b90509392505050565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b6000612201602983611538565b915061220c826121a5565b604082019050919050565b60006020820190508181036000830152612230816121f4565b9050919050565b600060408201905061224c600083018561141b565b612259602083018461141b565b9392505050565b61226981611367565b82525050565b600081519050919050565b600082825260208201905092915050565b60006122968261226f565b6122a0818561227a565b93506122b0818560208601611549565b6122b98161157c565b840191505092915050565b600060a0820190506122d96000830188612260565b6122e66020830187612260565b81810360408301526122f88186611a4f565b9050818103606083015261230c8185611a4f565b90508181036080830152612320818461228b565b90509695505050505050565b60008151905061233b81611471565b92915050565b6000602082840312156123575761235661133d565b5b60006123658482850161232c565b91505092915050565b60008160e01c9050919050565b600060033d111561239a5760046000803e61239760005161236e565b90505b90565b600060443d10156123ad57612430565b6123b5611333565b60043d036004823e80513d602482011167ffffffffffffffff821117156123dd575050612430565b808201805167ffffffffffffffff8111156123fb5750505050612430565b80602083010160043d038501811115612418575050505050612430565b6124278260200185018661161c565b82955050505050505b90565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b600061248f603483611538565b915061249a82612433565b604082019050919050565b600060208201905081810360008301526124be81612482565b9050919050565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b6000612521602883611538565b915061252c826124c5565b604082019050919050565b6000602082019050818103600083015261255081612514565b9050919050565b600060a08201905061256c6000830188612260565b6125796020830187612260565b612586604083018661141b565b612593606083018561141b565b81810360808301526125a5818461228b565b9050969550505050505056fea2646970667358221220e21ce7bbbc6fe52e9c603f72b6b073a735850dcaa3192f55c77676194f2d821764736f6c63430008080033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E7 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x149D JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x14E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x17E5 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1977 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x14E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x65 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x365 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x375 JUMPI POP PUSH2 0x374 DUP3 PUSH2 0x715 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x67 DUP1 SLOAD PUSH2 0x38B SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B7 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x404 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x404 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x418 PUSH2 0x77F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45E JUMPI POP PUSH2 0x45D DUP6 PUSH2 0x458 PUSH2 0x77F JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST JUMPDEST PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x494 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4AA DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x787 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EE SWAP1 PUSH2 0x1E09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x514 JUMPI PUSH2 0x513 PUSH2 0x15ED JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x542 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BF JUMPI PUSH2 0x58F DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x567 JUMPI PUSH2 0x566 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x582 JUMPI PUSH2 0x581 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A2 JUMPI PUSH2 0x5A1 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5B8 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 POP PUSH2 0x548 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DC PUSH2 0x5D5 PUSH2 0x77F JUMP JUMPDEST DUP4 DUP4 PUSH2 0xAAC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x66 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67C PUSH2 0x77F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6C2 JUMPI POP PUSH2 0x6C1 DUP6 PUSH2 0x6BC PUSH2 0x77F JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST JUMPDEST PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F8 SWAP1 PUSH2 0x1F42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70E DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC19 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C2 SWAP1 PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x83B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x832 SWAP1 PUSH2 0x2066 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x845 PUSH2 0x77F JUMP JUMPDEST SWAP1 POP PUSH2 0x855 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA09 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x876 JUMPI PUSH2 0x875 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x895 JUMPI PUSH2 0x894 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x937 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92E SWAP1 PUSH2 0x20F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x65 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x65 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9EE SWAP2 SWAP1 PUSH2 0x2118 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xA02 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 POP PUSH2 0x858 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA80 SWAP3 SWAP2 SWAP1 PUSH2 0x216E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA96 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEC0 JUMP JUMPDEST PUSH2 0xAA4 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEC8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB12 SWAP1 PUSH2 0x2217 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x66 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC0C SWAP2 SWAP1 PUSH2 0x14E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC80 SWAP1 PUSH2 0x2066 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC93 PUSH2 0x77F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCA0 DUP6 PUSH2 0x10AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCAD DUP6 PUSH2 0x10AF JUMP JUMPDEST SWAP1 POP PUSH2 0xCBD DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4C SWAP1 PUSH2 0x20F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x65 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x65 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE0C SWAP2 SWAP1 PUSH2 0x2118 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xE89 SWAP3 SWAP2 SWAP1 PUSH2 0x2237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE9F DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xEC0 JUMP JUMPDEST PUSH2 0xEAD DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1129 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEE7 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1310 JUMP JUMPDEST ISZERO PUSH2 0x10A7 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF78 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF75 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x101E JUMPI PUSH2 0xF84 PUSH2 0x237B JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xFE1 JUMPI POP PUSH2 0xF99 PUSH2 0x239D JUMP JUMPDEST DUP1 PUSH2 0xFA4 JUMPI POP PUSH2 0xFE3 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD8 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1015 SWAP1 PUSH2 0x24A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x10A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109C SWAP1 PUSH2 0x2537 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10CE JUMPI PUSH2 0x10CD PUSH2 0x15ED JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10FC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1114 JUMPI PUSH2 0x1113 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1148 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1310 JUMP JUMPDEST ISZERO PUSH2 0x1308 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11D9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D6 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x127F JUMPI PUSH2 0x11E5 PUSH2 0x237B JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x1242 JUMPI POP PUSH2 0x11FA PUSH2 0x239D JUMP JUMPDEST DUP1 PUSH2 0x1205 JUMPI POP PUSH2 0x1244 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1239 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1276 SWAP1 PUSH2 0x24A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1306 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12FD SWAP1 PUSH2 0x2537 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1372 DUP3 PUSH2 0x1347 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1382 DUP2 PUSH2 0x1367 JUMP JUMPDEST DUP2 EQ PUSH2 0x138D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x139F DUP2 PUSH2 0x1379 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B8 DUP2 PUSH2 0x13A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x13C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13D5 DUP2 PUSH2 0x13AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F2 JUMPI PUSH2 0x13F1 PUSH2 0x133D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1400 DUP6 DUP3 DUP7 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1411 DUP6 DUP3 DUP7 ADD PUSH2 0x13C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1424 DUP2 PUSH2 0x13A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x143F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x141B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x147A DUP2 PUSH2 0x1445 JUMP JUMPDEST DUP2 EQ PUSH2 0x1485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1497 DUP2 PUSH2 0x1471 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B3 JUMPI PUSH2 0x14B2 PUSH2 0x133D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14C1 DUP5 DUP3 DUP6 ADD PUSH2 0x1488 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14DF DUP2 PUSH2 0x14CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14FA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1516 JUMPI PUSH2 0x1515 PUSH2 0x133D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1524 DUP5 DUP3 DUP6 ADD PUSH2 0x13C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1567 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x154C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1576 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1598 DUP3 PUSH2 0x152D JUMP JUMPDEST PUSH2 0x15A2 DUP2 DUP6 PUSH2 0x1538 JUMP JUMPDEST SWAP4 POP PUSH2 0x15B2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1549 JUMP JUMPDEST PUSH2 0x15BB DUP2 PUSH2 0x157C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15E0 DUP2 DUP5 PUSH2 0x158D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1625 DUP3 PUSH2 0x157C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1644 JUMPI PUSH2 0x1643 PUSH2 0x15ED JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1657 PUSH2 0x1333 JUMP JUMPDEST SWAP1 POP PUSH2 0x1663 DUP3 DUP3 PUSH2 0x161C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1683 JUMPI PUSH2 0x1682 PUSH2 0x15ED JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16AC PUSH2 0x16A7 DUP5 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0x164D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x16CF JUMPI PUSH2 0x16CE PUSH2 0x1694 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16F8 JUMPI DUP1 PUSH2 0x16E4 DUP9 DUP3 PUSH2 0x13C6 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16D1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1717 JUMPI PUSH2 0x1716 PUSH2 0x15E8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1727 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1750 JUMPI PUSH2 0x174F PUSH2 0x15ED JUMP JUMPDEST JUMPDEST PUSH2 0x1759 DUP3 PUSH2 0x157C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1788 PUSH2 0x1783 DUP5 PUSH2 0x1735 JUMP JUMPDEST PUSH2 0x164D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x17A4 JUMPI PUSH2 0x17A3 PUSH2 0x1730 JUMP JUMPDEST JUMPDEST PUSH2 0x17AF DUP5 DUP3 DUP6 PUSH2 0x1766 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17CC JUMPI PUSH2 0x17CB PUSH2 0x15E8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17DC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1775 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1801 JUMPI PUSH2 0x1800 PUSH2 0x133D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x180F DUP9 DUP3 DUP10 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1820 DUP9 DUP3 DUP10 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1841 JUMPI PUSH2 0x1840 PUSH2 0x1342 JUMP JUMPDEST JUMPDEST PUSH2 0x184D DUP9 DUP3 DUP10 ADD PUSH2 0x1702 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x186E JUMPI PUSH2 0x186D PUSH2 0x1342 JUMP JUMPDEST JUMPDEST PUSH2 0x187A DUP9 DUP3 DUP10 ADD PUSH2 0x1702 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x189B JUMPI PUSH2 0x189A PUSH2 0x1342 JUMP JUMPDEST JUMPDEST PUSH2 0x18A7 DUP9 DUP3 DUP10 ADD PUSH2 0x17B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18CF JUMPI PUSH2 0x18CE PUSH2 0x15ED JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18F3 PUSH2 0x18EE DUP5 PUSH2 0x18B4 JUMP JUMPDEST PUSH2 0x164D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1916 JUMPI PUSH2 0x1915 PUSH2 0x1694 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x193F JUMPI DUP1 PUSH2 0x192B DUP9 DUP3 PUSH2 0x1390 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1918 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x195E JUMPI PUSH2 0x195D PUSH2 0x15E8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x196E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x198E JUMPI PUSH2 0x198D PUSH2 0x133D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19AC JUMPI PUSH2 0x19AB PUSH2 0x1342 JUMP JUMPDEST JUMPDEST PUSH2 0x19B8 DUP6 DUP3 DUP7 ADD PUSH2 0x1949 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19D9 JUMPI PUSH2 0x19D8 PUSH2 0x1342 JUMP JUMPDEST JUMPDEST PUSH2 0x19E5 DUP6 DUP3 DUP7 ADD PUSH2 0x1702 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A24 DUP2 PUSH2 0x13A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A36 DUP4 DUP4 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A5A DUP3 PUSH2 0x19EF JUMP JUMPDEST PUSH2 0x1A64 DUP2 DUP6 PUSH2 0x19FA JUMP JUMPDEST SWAP4 POP PUSH2 0x1A6F DUP4 PUSH2 0x1A0B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AA0 JUMPI DUP2 MLOAD PUSH2 0x1A87 DUP9 DUP3 PUSH2 0x1A2A JUMP JUMPDEST SWAP8 POP PUSH2 0x1A92 DUP4 PUSH2 0x1A42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A73 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AC7 DUP2 DUP5 PUSH2 0x1A4F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AD8 DUP2 PUSH2 0x14CA JUMP JUMPDEST DUP2 EQ PUSH2 0x1AE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AF5 DUP2 PUSH2 0x1ACF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B12 JUMPI PUSH2 0x1B11 PUSH2 0x133D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B20 DUP6 DUP3 DUP7 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B31 DUP6 DUP3 DUP7 ADD PUSH2 0x1AE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B52 JUMPI PUSH2 0x1B51 PUSH2 0x133D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B60 DUP6 DUP3 DUP7 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B71 DUP6 DUP3 DUP7 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B97 JUMPI PUSH2 0x1B96 PUSH2 0x133D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BA5 DUP9 DUP3 DUP10 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1BB6 DUP9 DUP3 DUP10 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1BC7 DUP9 DUP3 DUP10 ADD PUSH2 0x13C6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1BD8 DUP9 DUP3 DUP10 ADD PUSH2 0x13C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BF9 JUMPI PUSH2 0x1BF8 PUSH2 0x1342 JUMP JUMPDEST JUMPDEST PUSH2 0x1C05 DUP9 DUP3 DUP10 ADD PUSH2 0x17B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6E PUSH1 0x2B DUP4 PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C79 DUP3 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C9D DUP2 PUSH2 0x1C61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CEB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1CFF JUMPI PUSH2 0x1CFE PUSH2 0x1CA4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D61 PUSH1 0x32 DUP4 PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6C DUP3 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D90 DUP2 PUSH2 0x1D54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF3 PUSH1 0x29 DUP4 PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFE DUP3 PUSH2 0x1D97 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E22 DUP2 PUSH2 0x1DE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E92 DUP3 PUSH2 0x13A5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1EC5 JUMPI PUSH2 0x1EC4 PUSH2 0x1E58 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F2C PUSH1 0x29 DUP4 PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F37 DUP3 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F5B DUP2 PUSH2 0x1F1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FBE PUSH1 0x28 DUP4 PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC9 DUP3 PUSH2 0x1F62 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FED DUP2 PUSH2 0x1FB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2050 PUSH1 0x25 DUP4 PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP PUSH2 0x205B DUP3 PUSH2 0x1FF4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x207F DUP2 PUSH2 0x2043 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E2 PUSH1 0x2A DUP4 PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP PUSH2 0x20ED DUP3 PUSH2 0x2086 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2111 DUP2 PUSH2 0x20D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2123 DUP3 PUSH2 0x13A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x212E DUP4 PUSH2 0x13A5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2163 JUMPI PUSH2 0x2162 PUSH2 0x1E58 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2188 DUP2 DUP6 PUSH2 0x1A4F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x219C DUP2 DUP5 PUSH2 0x1A4F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2201 PUSH1 0x29 DUP4 PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP PUSH2 0x220C DUP3 PUSH2 0x21A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2230 DUP2 PUSH2 0x21F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x224C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x141B JUMP JUMPDEST PUSH2 0x2259 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x141B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2269 DUP2 PUSH2 0x1367 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2296 DUP3 PUSH2 0x226F JUMP JUMPDEST PUSH2 0x22A0 DUP2 DUP6 PUSH2 0x227A JUMP JUMPDEST SWAP4 POP PUSH2 0x22B0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1549 JUMP JUMPDEST PUSH2 0x22B9 DUP2 PUSH2 0x157C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x22D9 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x22E6 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2260 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x22F8 DUP2 DUP7 PUSH2 0x1A4F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x230C DUP2 DUP6 PUSH2 0x1A4F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2320 DUP2 DUP5 PUSH2 0x228B JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x233B DUP2 PUSH2 0x1471 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2357 JUMPI PUSH2 0x2356 PUSH2 0x133D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2365 DUP5 DUP3 DUP6 ADD PUSH2 0x232C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x239A JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x2397 PUSH1 0x0 MLOAD PUSH2 0x236E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x23AD JUMPI PUSH2 0x2430 JUMP JUMPDEST PUSH2 0x23B5 PUSH2 0x1333 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x23DD JUMPI POP POP PUSH2 0x2430 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23FB JUMPI POP POP POP POP PUSH2 0x2430 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x2418 JUMPI POP POP POP POP POP PUSH2 0x2430 JUMP JUMPDEST PUSH2 0x2427 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x161C JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248F PUSH1 0x34 DUP4 PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP PUSH2 0x249A DUP3 PUSH2 0x2433 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24BE DUP2 PUSH2 0x2482 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2521 PUSH1 0x28 DUP4 PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP PUSH2 0x252C DUP3 PUSH2 0x24C5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2550 DUP2 PUSH2 0x2514 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x256C PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x2579 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x2586 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x141B JUMP JUMPDEST PUSH2 0x2593 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x141B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x25A5 DUP2 DUP5 PUSH2 0x228B JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 SHR 0xE7 0xBB 0xBC PUSH16 0xE52E9C603F72B6B073A735850DCAA319 0x2F SSTORE 0xC7 PUSH23 0x76194F2D821764736F6C63430008080033000000000000 ",
							"sourceMap": "678:17683:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1082": {
									"entryPoint": 3776,
									"id": 1082,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1238": {
									"entryPoint": 4271,
									"id": 1238,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1063": {
									"entryPoint": 3768,
									"id": 1063,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1210": {
									"entryPoint": 3784,
									"id": 1210,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1145": {
									"entryPoint": 4393,
									"id": 1145,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1692": {
									"entryPoint": 1919,
									"id": 1692,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_561": {
									"entryPoint": 1927,
									"id": 561,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_426": {
									"entryPoint": 3097,
									"id": 426,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1044": {
									"entryPoint": 2732,
									"id": 1044,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_196": {
									"entryPoint": 1201,
									"id": 196,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_132": {
									"entryPoint": 464,
									"id": 132,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_231": {
									"entryPoint": 1504,
									"id": 231,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1440": {
									"entryPoint": 4880,
									"id": 1440,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_309": {
									"entryPoint": 1040,
									"id": 309,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_269": {
									"entryPoint": 1652,
									"id": 269,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_213": {
									"entryPoint": 1482,
									"id": 213,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1745": {
									"entryPoint": 1813,
									"id": 1745,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_92": {
									"entryPoint": 666,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_104": {
									"entryPoint": 892,
									"id": 104,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6368,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5785,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6005,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 6117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 7035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8900,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9559,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8558,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8759,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4915,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 5990,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 5449,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 7815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7768,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7332,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7721,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5613,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 9083,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5608,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5780,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5936,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4930,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4925,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_224_unsigned": {
									"entryPoint": 9070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed": {
									"entryPoint": 9267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503": {
									"entryPoint": 9413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9": {
									"entryPoint": 7186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a": {
									"entryPoint": 7888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d": {
									"entryPoint": 8180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686": {
									"entryPoint": 7429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf": {
									"entryPoint": 8326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2": {
									"entryPoint": 8613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5": {
									"entryPoint": 7575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807": {
									"entryPoint": 8034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"try_decode_error_message": {
									"entryPoint": 9117,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:33625:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:9",
														"type": ""
													}
												],
												"src": "696:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:9",
														"type": ""
													}
												],
												"src": "841:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:9"
															},
															"nodeType": "YulIf",
															"src": "977:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:9",
														"type": ""
													}
												],
												"src": "924:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:9",
														"type": ""
													}
												],
												"src": "1052:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:9"
															},
															"nodeType": "YulIf",
															"src": "1290:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:9",
														"type": ""
													}
												],
												"src": "1197:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1730:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1737:3:9",
														"type": ""
													}
												],
												"src": "1677:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1899:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1909:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1871:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1894:4:9",
														"type": ""
													}
												],
												"src": "1801:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2073:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2083:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2094:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2055:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2065:7:9",
														"type": ""
													}
												],
												"src": "2029:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2226:78:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2282:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:42:9"
															},
															"nodeType": "YulIf",
															"src": "2236:62:9"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2219:5:9",
														"type": ""
													}
												],
												"src": "2184:120:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2361:86:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2371:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2339:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2347:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2355:5:9",
														"type": ""
													}
												],
												"src": "2310:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2518:262:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2564:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:32:9"
															},
															"nodeType": "YulIf",
															"src": "2528:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2657:116:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2701:62:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2488:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2499:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2511:6:9",
														"type": ""
													}
												],
												"src": "2453:327:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2828:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2838:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2849:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2810:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2820:7:9",
														"type": ""
													}
												],
												"src": "2786:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2941:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2929:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2936:3:9",
														"type": ""
													}
												],
												"src": "2882:109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3089:118:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3099:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3107:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3061:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3073:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3084:4:9",
														"type": ""
													}
												],
												"src": "2997:210:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3279:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3325:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3327:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3327:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3296:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:32:9"
															},
															"nodeType": "YulIf",
															"src": "3289:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "3418:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3433:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3447:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3437:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3462:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3249:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3260:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3272:6:9",
														"type": ""
													}
												],
												"src": "3213:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3607:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3618:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3634:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3628:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3590:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3600:6:9",
														"type": ""
													}
												],
												"src": "3548:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3749:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3766:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3771:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3759:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3787:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3806:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3811:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3802:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3802:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3787:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3721:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3726:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3737:11:9",
														"type": ""
													}
												],
												"src": "3653:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3877:258:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3887:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3896:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3891:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3956:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3981:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3986:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3977:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3977:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4000:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4005:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3996:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3996:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3990:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3990:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3970:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3970:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3970:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3917:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3920:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3914:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3914:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3928:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3930:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3939:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3942:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3935:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3935:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3930:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3910:3:9",
																"statements": []
															},
															"src": "3906:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4053:76:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4103:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "4108:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4099:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4099:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4117:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4092:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4092:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4092:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4034:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4037:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4031:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4031:13:9"
															},
															"nodeType": "YulIf",
															"src": "4028:101:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3859:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3864:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3869:6:9",
														"type": ""
													}
												],
												"src": "3828:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4189:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4199:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4217:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4224:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4213:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4213:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4233:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4229:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4229:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4209:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4209:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4199:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4172:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4182:6:9",
														"type": ""
													}
												],
												"src": "4141:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4341:272:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4351:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4398:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4365:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4355:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4413:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4479:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4484:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4420:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4420:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4413:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4526:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4533:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4522:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4522:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4540:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4545:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4500:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4500:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4561:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4572:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4599:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "4577:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4577:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4568:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4568:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4561:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4322:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4329:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4337:3:9",
														"type": ""
													}
												],
												"src": "4249:364:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4737:195:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4747:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4759:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4770:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4755:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4755:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4747:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4794:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4805:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4790:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4790:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4813:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4819:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4809:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4809:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4783:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4783:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4783:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4839:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4911:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4920:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4847:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4839:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4709:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4721:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4732:4:9",
														"type": ""
													}
												],
												"src": "4619:313:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5027:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5044:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5047:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5037:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5037:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5037:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4938:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5089:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5106:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5109:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5099:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5099:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5099:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5203:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5206:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5196:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5196:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5196:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5227:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5230:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5220:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5220:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5220:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5061:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5290:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5300:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5322:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "5352:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5330:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5330:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5318:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5318:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5304:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5469:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5471:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5471:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5471:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5412:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5424:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5409:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5409:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5448:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5460:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5445:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5445:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5406:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5406:62:9"
															},
															"nodeType": "YulIf",
															"src": "5403:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5507:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5511:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5500:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5500:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5500:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5276:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5284:4:9",
														"type": ""
													}
												],
												"src": "5247:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5575:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5585:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5595:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5595:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5585:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5644:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5652:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5624:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5624:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5624:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5559:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5568:6:9",
														"type": ""
													}
												],
												"src": "5534:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5751:229:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5856:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5858:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5858:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5858:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5828:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5836:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5825:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5825:30:9"
															},
															"nodeType": "YulIf",
															"src": "5822:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5888:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5900:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5908:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5896:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5896:17:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5888:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5950:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5962:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5968:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5958:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5958:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5950:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5735:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5746:4:9",
														"type": ""
													}
												],
												"src": "5669:311:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6075:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6092:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6095:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6085:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6085:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6085:12:9"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "5986:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6228:608:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6238:90:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6320:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6263:56:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6263:64:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6247:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6247:81:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6238:5:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6337:16:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "6348:5:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6341:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6370:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6377:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6363:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6363:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6363:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6393:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6404:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6411:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6400:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6400:16:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6393:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6426:44:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6444:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6456:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6464:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6452:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6452:17:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6440:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:30:9"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6430:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6498:103:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "6512:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6512:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6512:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6485:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6493:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6482:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6482:15:9"
															},
															"nodeType": "YulIf",
															"src": "6479:122:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6686:144:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6701:21:9",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "6719:3:9"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "6705:10:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6743:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "6769:10:9"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "6781:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "6748:20:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6748:37:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6736:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6736:50:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6736:50:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6799:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6810:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6815:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6806:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6806:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6799:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6639:3:9"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6644:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6636:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6636:15:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6652:25:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6654:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6665:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6670:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6661:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6661:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6654:3:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6614:21:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6616:17:9",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "6627:6:9"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "6620:3:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6610:220:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6198:6:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6206:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6214:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6222:5:9",
														"type": ""
													}
												],
												"src": "6126:710:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6936:293:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6985:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "6987:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6987:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6987:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6964:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6972:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6960:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6960:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6979:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6956:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6956:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6949:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6949:35:9"
															},
															"nodeType": "YulIf",
															"src": "6946:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7077:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7104:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7091:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7091:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7081:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7120:103:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7196:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7204:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7192:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7192:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7211:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7219:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7129:62:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7129:94:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7120:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6914:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6922:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6930:5:9",
														"type": ""
													}
												],
												"src": "6859:370:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7324:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7341:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7344:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7334:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7334:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7334:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7235:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7424:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7529:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7531:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7531:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7531:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7501:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7509:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7498:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7498:30:9"
															},
															"nodeType": "YulIf",
															"src": "7495:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7561:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7591:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "7569:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7569:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7561:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7635:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7647:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7653:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7643:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7643:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7635:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7408:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7419:4:9",
														"type": ""
													}
												],
												"src": "7358:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7722:103:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7745:3:9"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7750:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7755:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7732:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7732:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7732:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7803:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7808:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7799:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7799:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7817:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7792:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7792:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7792:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7704:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7709:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7714:6:9",
														"type": ""
													}
												],
												"src": "7671:154:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7914:327:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7924:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7990:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7949:40:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7949:48:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7933:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7933:65:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7924:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8014:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8021:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8007:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8007:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8007:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8037:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8052:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8059:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8048:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8048:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8041:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8102:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8104:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8104:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8104:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8083:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8088:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8079:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8079:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8097:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8076:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:25:9"
															},
															"nodeType": "YulIf",
															"src": "8073:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8218:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8223:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8228:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8194:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8194:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8194:41:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7887:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7892:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7900:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7908:5:9",
														"type": ""
													}
												],
												"src": "7831:410:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8321:277:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8370:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8372:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8372:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8372:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8349:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8357:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8345:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8345:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8364:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8341:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8341:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8334:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8334:35:9"
															},
															"nodeType": "YulIf",
															"src": "8331:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8489:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8476:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8476:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8466:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8505:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8565:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8573:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8561:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8561:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8580:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8588:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8514:46:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8514:78:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8505:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8299:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8307:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8315:5:9",
														"type": ""
													}
												],
												"src": "8260:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8797:1316:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8844:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8846:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8846:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8846:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8818:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8827:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8814:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8814:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8839:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8810:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8810:33:9"
															},
															"nodeType": "YulIf",
															"src": "8807:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "8937:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8952:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8966:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8956:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8981:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9016:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9027:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9012:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9012:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9036:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8991:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8991:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8981:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9064:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9079:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9093:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9083:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9109:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9144:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9155:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9140:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9140:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9164:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9119:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9119:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9109:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9192:303:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9207:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9238:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9249:2:9",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9234:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9234:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9221:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9221:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9211:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9300:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9302:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9302:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9302:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9272:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9280:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9269:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9269:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "9266:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9397:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9457:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9468:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9453:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9453:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9477:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9407:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9407:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9397:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9505:303:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9520:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9551:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9562:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9547:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9547:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9534:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9534:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9524:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9613:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9615:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9615:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9615:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9585:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9593:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9582:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9582:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "9579:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9710:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9770:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9781:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9766:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9766:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9790:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9720:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9710:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9818:288:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9833:47:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9864:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9875:3:9",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9860:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9860:19:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9847:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9847:33:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9837:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9927:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9929:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9929:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9929:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9899:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9907:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9896:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9896:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "9893:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10024:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10068:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10079:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10064:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10064:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10088:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10034:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10034:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "10024:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8735:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8746:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8758:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8766:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8774:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8782:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8790:6:9",
														"type": ""
													}
												],
												"src": "8604:1509:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10201:229:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10306:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10308:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10308:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10308:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10278:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10286:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10275:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10275:30:9"
															},
															"nodeType": "YulIf",
															"src": "10272:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10338:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10350:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10358:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10346:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10346:17:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10338:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10400:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10412:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10418:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10408:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10408:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10400:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10185:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10196:4:9",
														"type": ""
													}
												],
												"src": "10119:311:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10555:608:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10565:90:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10647:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10590:56:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10590:64:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10574:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10574:81:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10565:5:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10664:16:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "10675:5:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "10668:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10697:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10704:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10690:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10690:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10690:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10720:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10731:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10738:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10727:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10727:16:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "10720:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10753:44:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10771:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10783:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10791:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "10779:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10779:17:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10767:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10767:30:9"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "10757:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10825:103:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "10839:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10839:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10839:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10812:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10820:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10809:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10809:15:9"
															},
															"nodeType": "YulIf",
															"src": "10806:122:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11013:144:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11028:21:9",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "11046:3:9"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "11032:10:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11070:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "11096:10:9"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "11108:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "11075:20:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11075:37:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11063:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11063:50:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11063:50:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11126:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11137:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11142:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11133:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11133:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11126:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10966:3:9"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10971:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10963:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10963:15:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10979:25:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10981:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "10992:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10997:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10988:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10988:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "10981:3:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10941:21:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10943:17:9",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "10954:6:9"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "10947:3:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10937:220:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10525:6:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10533:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10541:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10549:5:9",
														"type": ""
													}
												],
												"src": "10453:710:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11263:293:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11312:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "11314:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11314:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11314:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11291:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11299:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11287:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11287:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11306:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "11283:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11283:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11276:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11276:35:9"
															},
															"nodeType": "YulIf",
															"src": "11273:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11404:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11431:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11418:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11418:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11408:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11447:103:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11523:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11531:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11519:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11519:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11538:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "11546:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11456:62:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11456:94:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "11447:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11241:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11249:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "11257:5:9",
														"type": ""
													}
												],
												"src": "11186:370:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11695:761:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11741:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11743:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11743:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11743:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11716:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11725:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11712:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11712:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11737:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11708:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11708:32:9"
															},
															"nodeType": "YulIf",
															"src": "11705:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "11834:302:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11849:45:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11880:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11891:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11876:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11876:17:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11863:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11863:31:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11853:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11941:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11943:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11943:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11943:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11913:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11921:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11910:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11910:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "11907:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12038:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12098:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12109:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12094:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12094:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12118:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12048:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12048:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12038:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12146:303:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12161:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12192:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12203:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12188:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12188:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "12175:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12175:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12165:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12254:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "12256:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12256:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12256:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "12226:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12234:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12223:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12223:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "12220:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12351:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12411:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12422:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12407:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12407:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12431:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12361:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12361:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12351:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11657:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11668:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11680:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11688:6:9",
														"type": ""
													}
												],
												"src": "11562:894:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12536:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12547:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12563:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12557:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12557:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12547:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12519:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12529:6:9",
														"type": ""
													}
												],
												"src": "12462:114:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12693:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12710:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12715:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12703:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12703:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12703:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12731:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12750:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12755:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12746:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12746:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12731:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12665:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12670:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12681:11:9",
														"type": ""
													}
												],
												"src": "12582:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12844:60:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12854:11:9",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "12862:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12854:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12875:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12887:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12892:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12883:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12883:14:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12875:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "12831:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12839:4:9",
														"type": ""
													}
												],
												"src": "12772:132:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12965:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12982:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13005:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12987:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12987:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12975:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12975:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12975:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12953:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12960:3:9",
														"type": ""
													}
												],
												"src": "12910:108:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13104:99:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13148:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13156:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13114:33:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13114:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13114:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13169:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13187:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13192:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13183:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13183:14:9"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "13169:10:9"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13077:6:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13085:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "13093:10:9",
														"type": ""
													}
												],
												"src": "13024:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13284:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13294:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "13306:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13311:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13302:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13302:14:9"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "13294:4:9"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "13271:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "13279:4:9",
														"type": ""
													}
												],
												"src": "13209:113:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13482:608:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13492:68:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13554:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13506:47:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13506:54:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13496:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13569:93:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13650:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13655:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13576:73:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13576:86:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13569:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13671:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13736:5:9"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13686:49:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13686:56:9"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "13675:7:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13751:21:9",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "13765:7:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "13755:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13841:224:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13855:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "13882:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "13876:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13876:13:9"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "13859:13:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13902:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "13953:13:9"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "13968:3:9"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "13909:43:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13909:63:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13902:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13985:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "14048:6:9"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "13995:52:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13995:60:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13985:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13803:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13806:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13800:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13800:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13814:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13816:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13825:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13828:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13821:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13821:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13816:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13785:14:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13787:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "13796:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "13791:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "13781:284:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14074:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14081:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14074:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13461:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13468:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13477:3:9",
														"type": ""
													}
												],
												"src": "13358:732:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14244:225:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14254:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14266:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14277:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14262:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14262:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14254:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14301:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14312:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14297:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14297:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14320:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14326:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14316:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14316:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14290:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14290:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14290:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14346:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14448:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14457:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14354:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14354:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14346:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14216:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14228:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14239:4:9",
														"type": ""
													}
												],
												"src": "14096:373:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14515:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14569:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14578:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14581:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14571:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14571:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14571:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14538:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14560:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "14545:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14545:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14535:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14535:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14528:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14528:40:9"
															},
															"nodeType": "YulIf",
															"src": "14525:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14508:5:9",
														"type": ""
													}
												],
												"src": "14475:116:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14646:84:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14656:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14678:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "14665:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14665:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14656:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14718:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "14694:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14694:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14694:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14624:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14632:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14640:5:9",
														"type": ""
													}
												],
												"src": "14597:133:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14816:388:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14862:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14864:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14864:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14864:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14837:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14846:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14833:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14833:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14858:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14829:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14829:32:9"
															},
															"nodeType": "YulIf",
															"src": "14826:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "14955:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14970:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14984:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14974:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14999:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15034:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15045:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15030:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15030:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15054:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15009:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15009:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14999:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15082:115:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15097:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15111:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15101:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15127:60:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15159:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15170:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15155:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15155:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15179:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "15137:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15137:50:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "15127:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14778:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14789:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14801:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14809:6:9",
														"type": ""
													}
												],
												"src": "14736:468:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15293:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15339:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15341:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15341:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15341:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15314:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15323:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15310:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15310:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15335:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15306:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15306:32:9"
															},
															"nodeType": "YulIf",
															"src": "15303:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "15432:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15447:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15461:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15451:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15476:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15511:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15522:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15507:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15507:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15531:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15486:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15486:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15476:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15559:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15574:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15588:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15578:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15604:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15639:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15650:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15635:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15635:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15659:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15614:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15614:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "15604:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15255:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15266:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15278:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15286:6:9",
														"type": ""
													}
												],
												"src": "15210:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15833:946:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15880:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15882:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15882:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15882:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15854:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15863:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15850:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15850:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15875:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15846:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15846:33:9"
															},
															"nodeType": "YulIf",
															"src": "15843:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "15973:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15988:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16002:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15992:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16017:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16052:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16063:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16048:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16048:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16072:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "16027:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16027:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16017:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16100:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16115:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16129:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16119:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16145:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16180:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16191:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16176:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16176:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16200:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "16155:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16155:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "16145:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16228:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16243:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16257:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16247:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16273:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16308:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16319:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16304:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16304:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16328:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "16283:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16283:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "16273:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16356:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16371:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16385:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16375:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16401:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16436:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16447:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16432:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16432:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16456:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "16411:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16411:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "16401:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16484:288:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16499:47:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16530:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16541:3:9",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16526:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16526:19:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "16513:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16513:33:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16503:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16593:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "16595:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16595:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16595:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16565:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16573:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16562:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16562:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "16559:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16690:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16734:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16745:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16730:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16730:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16754:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "16700:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16700:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "16690:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15771:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15782:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15794:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15802:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15810:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15818:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15826:6:9",
														"type": ""
													}
												],
												"src": "15690:1089:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16891:124:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16913:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16921:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16909:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16909:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16925:34:9",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16902:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16902:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16902:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16981:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16989:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16977:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16977:15:9"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16994:13:9",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16970:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16970:38:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16970:38:9"
														}
													]
												},
												"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16883:6:9",
														"type": ""
													}
												],
												"src": "16785:230:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17167:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17177:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17243:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17248:2:9",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17184:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17184:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17177:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17349:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																	"nodeType": "YulIdentifier",
																	"src": "17260:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17260:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17260:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17362:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17373:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17378:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17369:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17369:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17362:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17155:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17163:3:9",
														"type": ""
													}
												],
												"src": "17021:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17564:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17574:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17586:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17597:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17582:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17582:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17574:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17621:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17632:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17617:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17617:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17640:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17646:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17636:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17636:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17610:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17610:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17610:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17666:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17800:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17674:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17674:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17666:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17544:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17559:4:9",
														"type": ""
													}
												],
												"src": "17393:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17846:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17863:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17866:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17856:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17856:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17856:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17960:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17963:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17953:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17953:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17953:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17984:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17987:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17977:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17977:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17977:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "17818:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18055:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18065:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18079:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18085:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "18075:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18075:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18065:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18096:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18126:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18132:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18122:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18122:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "18100:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18173:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18187:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "18201:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18209:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "18197:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18197:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18187:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "18153:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18146:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18146:26:9"
															},
															"nodeType": "YulIf",
															"src": "18143:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18276:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "18290:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18290:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18290:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "18240:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18263:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18271:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "18260:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18260:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "18237:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18237:38:9"
															},
															"nodeType": "YulIf",
															"src": "18234:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "18039:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18048:6:9",
														"type": ""
													}
												],
												"src": "18004:320:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18436:131:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18458:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18466:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18454:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18454:14:9"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18470:34:9",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18447:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18447:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18447:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18526:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18534:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18522:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18522:15:9"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18539:20:9",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18515:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18515:45:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18515:45:9"
														}
													]
												},
												"name": "store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18428:6:9",
														"type": ""
													}
												],
												"src": "18330:237:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18719:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18729:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18795:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18800:2:9",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18736:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18736:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18729:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18901:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																	"nodeType": "YulIdentifier",
																	"src": "18812:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18812:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18812:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18914:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18925:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18930:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18921:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18921:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18914:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18707:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18715:3:9",
														"type": ""
													}
												],
												"src": "18573:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19116:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19126:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19138:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19149:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19134:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19134:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19126:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19173:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19184:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19169:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19169:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19192:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19198:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19188:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19188:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19162:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19162:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19162:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19218:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19352:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19226:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19226:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19218:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19096:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19111:4:9",
														"type": ""
													}
												],
												"src": "18945:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19476:122:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19498:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19506:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19494:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19494:14:9"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19510:34:9",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19487:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19487:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19487:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19566:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19574:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19562:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19562:15:9"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19579:11:9",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19555:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19555:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19555:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19468:6:9",
														"type": ""
													}
												],
												"src": "19370:228:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19750:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19760:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19826:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19831:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19767:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19767:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19760:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19932:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																	"nodeType": "YulIdentifier",
																	"src": "19843:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19843:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19843:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19945:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19956:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19961:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19952:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19952:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19945:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19738:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19746:3:9",
														"type": ""
													}
												],
												"src": "19604:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20147:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20157:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20169:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20180:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20165:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20165:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20157:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20204:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20215:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20200:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20200:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20223:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20229:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20219:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20219:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20193:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20193:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20193:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20249:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20383:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20257:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20257:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20249:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20127:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20142:4:9",
														"type": ""
													}
												],
												"src": "19976:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20429:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20446:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20449:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20439:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20439:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20439:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20543:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20546:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20536:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20536:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20536:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20567:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20570:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20560:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20560:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20560:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "20401:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20615:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20632:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20635:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20625:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20625:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20625:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20729:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20732:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20722:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20722:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20722:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20753:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20756:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20746:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20746:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20746:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "20587:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20816:190:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20826:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20853:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20835:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20835:24:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20826:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20949:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20951:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20951:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20951:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20874:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20881:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20871:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20871:77:9"
															},
															"nodeType": "YulIf",
															"src": "20868:103:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20980:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20991:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20998:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20987:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20987:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20980:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20802:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20812:3:9",
														"type": ""
													}
												],
												"src": "20773:233:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21118:122:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21140:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21148:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21136:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21136:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21152:34:9",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21129:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21129:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21129:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21208:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21216:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21204:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21204:15:9"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21221:11:9",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21197:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21197:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21197:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21110:6:9",
														"type": ""
													}
												],
												"src": "21012:228:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21392:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21402:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21468:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21473:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21409:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21409:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21402:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21574:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																	"nodeType": "YulIdentifier",
																	"src": "21485:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21485:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21485:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21587:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21598:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21603:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21594:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21594:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21587:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21380:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21388:3:9",
														"type": ""
													}
												],
												"src": "21246:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21789:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21799:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21811:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21822:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21807:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21807:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21799:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21846:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21857:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21842:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21842:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21865:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21871:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21861:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21861:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21835:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21835:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21835:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21891:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22025:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21899:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21899:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21891:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21769:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21784:4:9",
														"type": ""
													}
												],
												"src": "21618:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22149:121:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22171:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22179:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22167:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22167:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22183:34:9",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22160:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22160:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22160:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22239:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22247:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22235:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22235:15:9"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22252:10:9",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22228:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22228:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22228:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22141:6:9",
														"type": ""
													}
												],
												"src": "22043:227:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22422:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22432:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22498:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22503:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22439:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22439:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22432:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22604:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																	"nodeType": "YulIdentifier",
																	"src": "22515:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22515:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22515:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22617:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22628:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22633:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22624:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22624:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22617:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22410:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22418:3:9",
														"type": ""
													}
												],
												"src": "22276:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22819:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22829:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22841:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22852:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22837:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22837:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22829:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22876:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22887:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22872:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22872:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22895:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22901:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22891:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22891:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22865:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22865:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22865:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22921:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23055:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22929:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22929:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22921:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22799:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22814:4:9",
														"type": ""
													}
												],
												"src": "22648:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23179:118:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23201:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23209:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23197:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23197:14:9"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23213:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23190:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23190:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23190:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23269:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23277:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23265:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23265:15:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23282:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23258:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23258:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23258:32:9"
														}
													]
												},
												"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23171:6:9",
														"type": ""
													}
												],
												"src": "23073:224:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23449:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23459:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23525:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23530:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23466:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23466:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23459:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23631:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																	"nodeType": "YulIdentifier",
																	"src": "23542:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23542:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23542:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23644:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23655:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23660:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23651:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23651:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23644:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23437:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23445:3:9",
														"type": ""
													}
												],
												"src": "23303:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23846:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23856:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23868:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23879:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23864:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23864:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23856:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23903:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23914:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23899:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23899:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23922:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23928:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23918:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23918:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23892:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23892:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23892:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23948:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24082:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23956:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23956:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23948:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23826:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23841:4:9",
														"type": ""
													}
												],
												"src": "23675:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24206:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24228:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24236:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24224:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24224:14:9"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24240:34:9",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24217:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24217:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24217:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24296:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24304:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24292:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24292:15:9"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24309:12:9",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24285:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24285:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24285:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24198:6:9",
														"type": ""
													}
												],
												"src": "24100:229:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24481:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24491:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24557:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24562:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24498:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24498:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24491:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24663:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"nodeType": "YulIdentifier",
																	"src": "24574:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24574:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24574:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24676:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24687:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24692:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24683:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24683:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24676:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24469:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24477:3:9",
														"type": ""
													}
												],
												"src": "24335:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24878:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24888:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24900:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24911:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24896:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24896:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24888:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24935:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24946:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24931:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24931:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24954:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24960:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24950:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24950:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24924:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24924:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24924:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24980:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25114:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24988:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24988:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24980:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24858:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24873:4:9",
														"type": ""
													}
												],
												"src": "24707:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25176:261:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25186:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25209:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25191:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25191:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25186:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25220:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25243:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25225:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25225:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25220:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25383:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "25385:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25385:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25385:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25304:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25311:66:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "25379:1:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25307:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25307:74:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "25301:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25301:81:9"
															},
															"nodeType": "YulIf",
															"src": "25298:107:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25415:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25426:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25429:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25422:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25422:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "25415:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25163:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25166:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "25172:3:9",
														"type": ""
													}
												],
												"src": "25132:305:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25669:408:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25679:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25691:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25702:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25687:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25687:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25679:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25726:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25737:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25722:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25722:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25745:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25751:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25741:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25741:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25715:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25715:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25715:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25771:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25873:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25882:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25779:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25779:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25771:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25908:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25919:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25904:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25904:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25928:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25934:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25924:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25924:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25897:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25897:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25897:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25954:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26056:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26065:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25962:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25962:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25954:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25633:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25645:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25653:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25664:4:9",
														"type": ""
													}
												],
												"src": "25443:634:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26189:122:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26211:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26219:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26207:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26207:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26223:34:9",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26200:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26200:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26200:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26279:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26287:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26275:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26275:15:9"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26292:11:9",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26268:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26268:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26268:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26181:6:9",
														"type": ""
													}
												],
												"src": "26083:228:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26463:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26473:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26539:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26544:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26480:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26480:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26473:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26645:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																	"nodeType": "YulIdentifier",
																	"src": "26556:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26556:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26556:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26658:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26669:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26674:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26665:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26665:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26658:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26451:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26459:3:9",
														"type": ""
													}
												],
												"src": "26317:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26860:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26870:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26882:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26893:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26878:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26878:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26870:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26917:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26928:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26913:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26913:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26936:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26942:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26932:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26932:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26906:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26906:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26906:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26962:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27096:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26970:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26970:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26962:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26840:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26855:4:9",
														"type": ""
													}
												],
												"src": "26689:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27240:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27250:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27262:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27273:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27258:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27258:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27250:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27330:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27343:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27354:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27339:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27339:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27286:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27286:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27286:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "27411:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27424:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27435:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27420:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27420:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27367:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27367:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27367:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27204:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "27216:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27224:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27235:4:9",
														"type": ""
													}
												],
												"src": "27114:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27517:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27534:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27557:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "27539:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27539:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27527:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27527:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27527:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27505:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27512:3:9",
														"type": ""
													}
												],
												"src": "27452:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27634:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27645:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27661:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27655:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27655:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "27645:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27617:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27627:6:9",
														"type": ""
													}
												],
												"src": "27576:98:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27775:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27792:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27797:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27785:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27785:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27785:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27813:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27832:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27837:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27828:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27828:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "27813:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27747:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27752:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "27763:11:9",
														"type": ""
													}
												],
												"src": "27680:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27944:270:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27954:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28000:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "27968:31:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27968:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "27958:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28015:77:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28080:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28085:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28022:57:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28022:70:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28015:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "28127:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28134:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28123:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28123:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28141:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28146:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "28101:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28101:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28101:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28162:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28173:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "28200:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "28178:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28178:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28169:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28169:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28162:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27925:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27932:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27940:3:9",
														"type": ""
													}
												],
												"src": "27854:360:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28548:725:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28558:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28570:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28581:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28566:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28566:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28558:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "28639:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28652:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28663:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28648:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28648:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28595:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28595:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28595:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "28720:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28733:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28744:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28729:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28729:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28676:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28676:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28676:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28769:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28780:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28765:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28765:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28789:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28795:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28785:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28785:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28758:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28758:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28758:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28815:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "28917:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28926:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28823:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28823:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28815:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28952:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28963:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28948:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28948:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28972:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28978:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28968:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28968:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28941:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28941:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28941:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28998:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "29100:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29109:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29006:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29006:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28998:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29135:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29146:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29131:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29131:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29156:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29162:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29152:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29152:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29124:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29124:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29124:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29182:84:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "29252:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29261:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29190:61:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29190:76:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29182:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28488:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "28500:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "28508:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "28516:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "28524:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28532:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28543:4:9",
														"type": ""
													}
												],
												"src": "28220:1053:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29341:79:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29351:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "29366:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "29360:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29360:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "29351:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29408:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "29382:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29382:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29382:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "29319:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "29327:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29335:5:9",
														"type": ""
													}
												],
												"src": "29279:141:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29502:273:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29548:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "29550:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29550:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29550:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "29523:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29532:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29519:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29519:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29544:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "29515:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29515:32:9"
															},
															"nodeType": "YulIf",
															"src": "29512:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "29641:127:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "29656:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29670:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "29660:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "29685:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "29730:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "29741:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "29726:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29726:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "29750:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "29695:30:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29695:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "29685:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29472:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "29483:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "29495:6:9",
														"type": ""
													}
												],
												"src": "29426:349:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29834:53:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29844:36:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29869:3:9",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29874:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "29865:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29865:15:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "29844:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_224_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29815:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "29825:8:9",
														"type": ""
													}
												],
												"src": "29781:106:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29932:144:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29969:101:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29998:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30001:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30004:1:9",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "29983:14:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29983:23:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29983:23:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "30019:41:9",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30057:1:9",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "30051:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30051:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_224_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "30026:24:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30026:34:9"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "30019:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "29948:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29948:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29966:1:9",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "29945:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29945:23:9"
															},
															"nodeType": "YulIf",
															"src": "29942:128:9"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "29928:3:9",
														"type": ""
													}
												],
												"src": "29893:183:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30125:668:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30165:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30167:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "30141:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30141:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30159:4:9",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "30138:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30138:26:9"
															},
															"nodeType": "YulIf",
															"src": "30135:39:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30184:32:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "30196:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30196:20:9"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "30188:4:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30240:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30246:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "30253:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30253:16:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30271:1:9",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30249:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30249:24:9"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "30225:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30225:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30225:49:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30284:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30304:4:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30298:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30298:11:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "30288:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30435:29:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30449:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "30340:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30348:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "30337:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30337:30:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "30388:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30396:4:9",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "30384:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30384:17:9"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "30403:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30403:16:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "30381:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30381:39:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "30321:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30321:113:9"
															},
															"nodeType": "YulIf",
															"src": "30318:146:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30474:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30489:4:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "30495:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30485:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30485:17:9"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "30478:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30511:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "30531:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30525:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30525:10:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "30515:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30578:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30580:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30550:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30558:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "30547:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30547:30:9"
															},
															"nodeType": "YulIf",
															"src": "30544:43:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30597:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msg",
																				"nodeType": "YulIdentifier",
																				"src": "30616:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30621:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30612:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30612:14:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30628:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30608:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30608:27:9"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "30601:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30692:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30694:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "30650:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "30659:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "30669:14:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "30669:16:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30687:1:9",
																						"type": "",
																						"value": "4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "30665:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30665:24:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30655:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30655:35:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "30647:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30647:44:9"
															},
															"nodeType": "YulIf",
															"src": "30644:57:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30731:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "30741:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30753:4:9",
																						"type": "",
																						"value": "0x20"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "30759:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "30749:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30749:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30737:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30737:30:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "30711:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30711:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30711:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30777:10:9",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "30784:3:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "30777:3:9"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "30121:3:9",
														"type": ""
													}
												],
												"src": "30082:711:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30905:133:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30927:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30935:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30923:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30923:14:9"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30939:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30916:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30916:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30916:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30995:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31003:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30991:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30991:15:9"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31008:22:9",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30984:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30984:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30984:47:9"
														}
													]
												},
												"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30897:6:9",
														"type": ""
													}
												],
												"src": "30799:239:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31190:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31200:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31266:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31271:2:9",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31207:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31207:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "31200:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31372:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																	"nodeType": "YulIdentifier",
																	"src": "31283:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31283:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31283:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31385:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31396:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31401:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31392:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31392:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "31385:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31178:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "31186:3:9",
														"type": ""
													}
												],
												"src": "31044:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31587:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31597:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "31609:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31620:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31605:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31605:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31597:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31644:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31655:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31640:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31640:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "31663:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31669:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31659:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31659:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31633:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31633:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31633:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31689:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "31823:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31697:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31697:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31689:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "31567:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "31582:4:9",
														"type": ""
													}
												],
												"src": "31416:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31947:121:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31969:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31977:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31965:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31965:14:9"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31981:34:9",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31958:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31958:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31958:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32037:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32045:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32033:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32033:15:9"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32050:10:9",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32026:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32026:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32026:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31939:6:9",
														"type": ""
													}
												],
												"src": "31841:227:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32220:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32230:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32296:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32301:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32237:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32237:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "32230:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32402:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																	"nodeType": "YulIdentifier",
																	"src": "32313:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32313:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32313:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32415:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32426:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32431:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32422:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32422:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "32415:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "32208:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "32216:3:9",
														"type": ""
													}
												],
												"src": "32074:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32617:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32627:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "32639:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32650:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32635:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32635:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32627:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32674:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32685:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32670:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32670:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "32693:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32699:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "32689:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32689:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32663:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32663:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32663:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32719:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "32853:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32727:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32727:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32719:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "32597:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "32612:4:9",
														"type": ""
													}
												],
												"src": "32446:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33099:523:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33109:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "33121:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33132:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "33117:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33117:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "33109:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "33190:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33203:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33214:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33199:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33199:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33146:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33146:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33146:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "33271:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33284:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33295:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33280:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33280:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33227:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33227:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33227:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "33353:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33366:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33377:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33362:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33362:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33309:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33309:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33309:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "33435:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33448:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33459:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33444:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33444:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33391:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33391:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33391:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33484:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33495:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33480:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33480:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "33505:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33511:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "33501:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33501:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33473:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33473:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33473:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "33531:84:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "33601:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "33610:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33539:61:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33539:76:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "33531:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "33039:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "33051:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "33059:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "33067:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "33075:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "33083:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "33094:4:9",
														"type": ""
													}
												],
												"src": "32871:751:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: balance query for the z\")\n\n        mstore(add(memPtr, 32), \"ero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer caller is not \")\n\n        mstore(add(memPtr, 32), \"owner nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: accounts and ids length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: caller is not owner nor\")\n\n        mstore(add(memPtr, 32), \" approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ids and amounts length \")\n\n        mstore(add(memPtr, 32), \"mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r transfer\")\n\n    }\n\n    function abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: setting approval status\")\n\n        mstore(add(memPtr, 32), \" for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to non ERC1155\")\n\n        mstore(add(memPtr, 32), \"Receiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ERC1155Receiver rejecte\")\n\n        mstore(add(memPtr, 32), \"d tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610138578063a22cb46514610168578063e985e9c514610184578063f242432a146101b457610087565b8062fdd58e1461008c57806301ffc9a7146100bc5780630e89341c146100ec5780632eb2c2d61461011c575b600080fd5b6100a660048036038101906100a191906113db565b6101d0565b6040516100b3919061142a565b60405180910390f35b6100d660048036038101906100d1919061149d565b61029a565b6040516100e391906114e5565b60405180910390f35b61010660048036038101906101019190611500565b61037c565b60405161011391906115c6565b60405180910390f35b610136600480360381019061013191906117e5565b610410565b005b610152600480360381019061014d9190611977565b6104b1565b60405161015f9190611aad565b60405180910390f35b610182600480360381019061017d9190611afb565b6105ca565b005b61019e60048036038101906101999190611b3b565b6105e0565b6040516101ab91906114e5565b60405180910390f35b6101ce60048036038101906101c99190611b7b565b610674565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023890611c84565b60405180910390fd5b6065600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036557507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610375575061037482610715565b5b9050919050565b60606067805461038b90611cd3565b80601f01602080910402602001604051908101604052809291908181526020018280546103b790611cd3565b80156104045780601f106103d957610100808354040283529160200191610404565b820191906000526020600020905b8154815290600101906020018083116103e757829003601f168201915b50505050509050919050565b61041861077f565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061045e575061045d8561045861077f565b6105e0565b5b61049d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049490611d77565b60405180910390fd5b6104aa8585858585610787565b5050505050565b606081518351146104f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ee90611e09565b60405180910390fd5b6000835167ffffffffffffffff811115610514576105136115ed565b5b6040519080825280602002602001820160405280156105425781602001602082028036833780820191505090505b50905060005b84518110156105bf5761058f85828151811061056757610566611e29565b5b602002602001015185838151811061058257610581611e29565b5b60200260200101516101d0565b8282815181106105a2576105a1611e29565b5b602002602001018181525050806105b890611e87565b9050610548565b508091505092915050565b6105dc6105d561077f565b8383610aac565b5050565b6000606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61067c61077f565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806106c257506106c1856106bc61077f565b6105e0565b5b610701576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f890611f42565b60405180910390fd5b61070e8585858585610c19565b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b81518351146107cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c290611fd4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561083b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083290612066565b60405180910390fd5b600061084561077f565b9050610855818787878787610eb8565b60005b8451811015610a0957600085828151811061087657610875611e29565b5b60200260200101519050600085838151811061089557610894611e29565b5b6020026020010151905060006065600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610937576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092e906120f8565b60405180910390fd5b8181036065600085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816065600085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109ee9190612118565b9250508190555050505080610a0290611e87565b9050610858565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a8092919061216e565b60405180910390a4610a96818787878787610ec0565b610aa4818787878787610ec8565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1290612217565b60405180910390fd5b80606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c0c91906114e5565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610c89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8090612066565b60405180910390fd5b6000610c9361077f565b90506000610ca0856110af565b90506000610cad856110af565b9050610cbd838989858589610eb8565b60006065600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905085811015610d55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4c906120f8565b60405180910390fd5b8581036065600089815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550856065600089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e0c9190612118565b925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051610e89929190612237565b60405180910390a4610e9f848a8a86868a610ec0565b610ead848a8a8a8a8a611129565b505050505050505050565b505050505050565b505050505050565b610ee78473ffffffffffffffffffffffffffffffffffffffff16611310565b156110a7578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401610f2d9594939291906122c4565b602060405180830381600087803b158015610f4757600080fd5b505af1925050508015610f7857506040513d601f19601f82011682018060405250810190610f759190612341565b60015b61101e57610f8461237b565b806308c379a01415610fe15750610f9961239d565b80610fa45750610fe3565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd891906115c6565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611015906124a5565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146110a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109c90612537565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff8111156110ce576110cd6115ed565b5b6040519080825280602002602001820160405280156110fc5781602001602082028036833780820191505090505b509050828160008151811061111457611113611e29565b5b60200260200101818152505080915050919050565b6111488473ffffffffffffffffffffffffffffffffffffffff16611310565b15611308578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161118e959493929190612557565b602060405180830381600087803b1580156111a857600080fd5b505af19250505080156111d957506040513d601f19601f820116820180604052508101906111d69190612341565b60015b61127f576111e561237b565b806308c379a0141561124257506111fa61239d565b806112055750611244565b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123991906115c6565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611276906124a5565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611306576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112fd90612537565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061137282611347565b9050919050565b61138281611367565b811461138d57600080fd5b50565b60008135905061139f81611379565b92915050565b6000819050919050565b6113b8816113a5565b81146113c357600080fd5b50565b6000813590506113d5816113af565b92915050565b600080604083850312156113f2576113f161133d565b5b600061140085828601611390565b9250506020611411858286016113c6565b9150509250929050565b611424816113a5565b82525050565b600060208201905061143f600083018461141b565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61147a81611445565b811461148557600080fd5b50565b60008135905061149781611471565b92915050565b6000602082840312156114b3576114b261133d565b5b60006114c184828501611488565b91505092915050565b60008115159050919050565b6114df816114ca565b82525050565b60006020820190506114fa60008301846114d6565b92915050565b6000602082840312156115165761151561133d565b5b6000611524848285016113c6565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561156757808201518184015260208101905061154c565b83811115611576576000848401525b50505050565b6000601f19601f8301169050919050565b60006115988261152d565b6115a28185611538565b93506115b2818560208601611549565b6115bb8161157c565b840191505092915050565b600060208201905081810360008301526115e0818461158d565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116258261157c565b810181811067ffffffffffffffff82111715611644576116436115ed565b5b80604052505050565b6000611657611333565b9050611663828261161c565b919050565b600067ffffffffffffffff821115611683576116826115ed565b5b602082029050602081019050919050565b600080fd5b60006116ac6116a784611668565b61164d565b905080838252602082019050602084028301858111156116cf576116ce611694565b5b835b818110156116f857806116e488826113c6565b8452602084019350506020810190506116d1565b5050509392505050565b600082601f830112611717576117166115e8565b5b8135611727848260208601611699565b91505092915050565b600080fd5b600067ffffffffffffffff8211156117505761174f6115ed565b5b6117598261157c565b9050602081019050919050565b82818337600083830152505050565b600061178861178384611735565b61164d565b9050828152602081018484840111156117a4576117a3611730565b5b6117af848285611766565b509392505050565b600082601f8301126117cc576117cb6115e8565b5b81356117dc848260208601611775565b91505092915050565b600080600080600060a086880312156118015761180061133d565b5b600061180f88828901611390565b955050602061182088828901611390565b945050604086013567ffffffffffffffff81111561184157611840611342565b5b61184d88828901611702565b935050606086013567ffffffffffffffff81111561186e5761186d611342565b5b61187a88828901611702565b925050608086013567ffffffffffffffff81111561189b5761189a611342565b5b6118a7888289016117b7565b9150509295509295909350565b600067ffffffffffffffff8211156118cf576118ce6115ed565b5b602082029050602081019050919050565b60006118f36118ee846118b4565b61164d565b9050808382526020820190506020840283018581111561191657611915611694565b5b835b8181101561193f578061192b8882611390565b845260208401935050602081019050611918565b5050509392505050565b600082601f83011261195e5761195d6115e8565b5b813561196e8482602086016118e0565b91505092915050565b6000806040838503121561198e5761198d61133d565b5b600083013567ffffffffffffffff8111156119ac576119ab611342565b5b6119b885828601611949565b925050602083013567ffffffffffffffff8111156119d9576119d8611342565b5b6119e585828601611702565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611a24816113a5565b82525050565b6000611a368383611a1b565b60208301905092915050565b6000602082019050919050565b6000611a5a826119ef565b611a6481856119fa565b9350611a6f83611a0b565b8060005b83811015611aa0578151611a878882611a2a565b9750611a9283611a42565b925050600181019050611a73565b5085935050505092915050565b60006020820190508181036000830152611ac78184611a4f565b905092915050565b611ad8816114ca565b8114611ae357600080fd5b50565b600081359050611af581611acf565b92915050565b60008060408385031215611b1257611b1161133d565b5b6000611b2085828601611390565b9250506020611b3185828601611ae6565b9150509250929050565b60008060408385031215611b5257611b5161133d565b5b6000611b6085828601611390565b9250506020611b7185828601611390565b9150509250929050565b600080600080600060a08688031215611b9757611b9661133d565b5b6000611ba588828901611390565b9550506020611bb688828901611390565b9450506040611bc7888289016113c6565b9350506060611bd8888289016113c6565b925050608086013567ffffffffffffffff811115611bf957611bf8611342565b5b611c05888289016117b7565b9150509295509295909350565b7f455243313135353a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b6000611c6e602b83611538565b9150611c7982611c12565b604082019050919050565b60006020820190508181036000830152611c9d81611c61565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ceb57607f821691505b60208210811415611cff57611cfe611ca4565b5b50919050565b7f455243313135353a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b6000611d61603283611538565b9150611d6c82611d05565b604082019050919050565b60006020820190508181036000830152611d9081611d54565b9050919050565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b6000611df3602983611538565b9150611dfe82611d97565b604082019050919050565b60006020820190508181036000830152611e2281611de6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e92826113a5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ec557611ec4611e58565b5b600182019050919050565b7f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260008201527f20617070726f7665640000000000000000000000000000000000000000000000602082015250565b6000611f2c602983611538565b9150611f3782611ed0565b604082019050919050565b60006020820190508181036000830152611f5b81611f1f565b9050919050565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b6000611fbe602883611538565b9150611fc982611f62565b604082019050919050565b60006020820190508181036000830152611fed81611fb1565b9050919050565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000612050602583611538565b915061205b82611ff4565b604082019050919050565b6000602082019050818103600083015261207f81612043565b9050919050565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b60006120e2602a83611538565b91506120ed82612086565b604082019050919050565b60006020820190508181036000830152612111816120d5565b9050919050565b6000612123826113a5565b915061212e836113a5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561216357612162611e58565b5b828201905092915050565b600060408201905081810360008301526121888185611a4f565b9050818103602083015261219c8184611a4f565b90509392505050565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b6000612201602983611538565b915061220c826121a5565b604082019050919050565b60006020820190508181036000830152612230816121f4565b9050919050565b600060408201905061224c600083018561141b565b612259602083018461141b565b9392505050565b61226981611367565b82525050565b600081519050919050565b600082825260208201905092915050565b60006122968261226f565b6122a0818561227a565b93506122b0818560208601611549565b6122b98161157c565b840191505092915050565b600060a0820190506122d96000830188612260565b6122e66020830187612260565b81810360408301526122f88186611a4f565b9050818103606083015261230c8185611a4f565b90508181036080830152612320818461228b565b90509695505050505050565b60008151905061233b81611471565b92915050565b6000602082840312156123575761235661133d565b5b60006123658482850161232c565b91505092915050565b60008160e01c9050919050565b600060033d111561239a5760046000803e61239760005161236e565b90505b90565b600060443d10156123ad57612430565b6123b5611333565b60043d036004823e80513d602482011167ffffffffffffffff821117156123dd575050612430565b808201805167ffffffffffffffff8111156123fb5750505050612430565b80602083010160043d038501811115612418575050505050612430565b6124278260200185018661161c565b82955050505050505b90565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b600061248f603483611538565b915061249a82612433565b604082019050919050565b600060208201905081810360008301526124be81612482565b9050919050565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b6000612521602883611538565b915061252c826124c5565b604082019050919050565b6000602082019050818103600083015261255081612514565b9050919050565b600060a08201905061256c6000830188612260565b6125796020830187612260565b612586604083018661141b565b612593606083018561141b565b81810360808301526125a5818461228b565b9050969550505050505056fea2646970667358221220e21ce7bbbc6fe52e9c603f72b6b073a735850dcaa3192f55c77676194f2d821764736f6c63430008080033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x149D JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x14E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x17E5 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1977 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x14E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x65 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x365 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x375 JUMPI POP PUSH2 0x374 DUP3 PUSH2 0x715 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x67 DUP1 SLOAD PUSH2 0x38B SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B7 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x404 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x404 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x418 PUSH2 0x77F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45E JUMPI POP PUSH2 0x45D DUP6 PUSH2 0x458 PUSH2 0x77F JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST JUMPDEST PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x494 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4AA DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x787 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EE SWAP1 PUSH2 0x1E09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x514 JUMPI PUSH2 0x513 PUSH2 0x15ED JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x542 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BF JUMPI PUSH2 0x58F DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x567 JUMPI PUSH2 0x566 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x582 JUMPI PUSH2 0x581 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A2 JUMPI PUSH2 0x5A1 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5B8 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 POP PUSH2 0x548 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DC PUSH2 0x5D5 PUSH2 0x77F JUMP JUMPDEST DUP4 DUP4 PUSH2 0xAAC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x66 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67C PUSH2 0x77F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6C2 JUMPI POP PUSH2 0x6C1 DUP6 PUSH2 0x6BC PUSH2 0x77F JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST JUMPDEST PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F8 SWAP1 PUSH2 0x1F42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70E DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC19 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C2 SWAP1 PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x83B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x832 SWAP1 PUSH2 0x2066 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x845 PUSH2 0x77F JUMP JUMPDEST SWAP1 POP PUSH2 0x855 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA09 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x876 JUMPI PUSH2 0x875 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x895 JUMPI PUSH2 0x894 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x937 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92E SWAP1 PUSH2 0x20F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x65 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x65 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9EE SWAP2 SWAP1 PUSH2 0x2118 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xA02 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 POP PUSH2 0x858 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA80 SWAP3 SWAP2 SWAP1 PUSH2 0x216E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA96 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEC0 JUMP JUMPDEST PUSH2 0xAA4 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEC8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB12 SWAP1 PUSH2 0x2217 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x66 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC0C SWAP2 SWAP1 PUSH2 0x14E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC80 SWAP1 PUSH2 0x2066 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC93 PUSH2 0x77F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCA0 DUP6 PUSH2 0x10AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCAD DUP6 PUSH2 0x10AF JUMP JUMPDEST SWAP1 POP PUSH2 0xCBD DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4C SWAP1 PUSH2 0x20F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x65 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x65 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE0C SWAP2 SWAP1 PUSH2 0x2118 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xE89 SWAP3 SWAP2 SWAP1 PUSH2 0x2237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE9F DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xEC0 JUMP JUMPDEST PUSH2 0xEAD DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1129 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEE7 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1310 JUMP JUMPDEST ISZERO PUSH2 0x10A7 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF78 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF75 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x101E JUMPI PUSH2 0xF84 PUSH2 0x237B JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xFE1 JUMPI POP PUSH2 0xF99 PUSH2 0x239D JUMP JUMPDEST DUP1 PUSH2 0xFA4 JUMPI POP PUSH2 0xFE3 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD8 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1015 SWAP1 PUSH2 0x24A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x10A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109C SWAP1 PUSH2 0x2537 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10CE JUMPI PUSH2 0x10CD PUSH2 0x15ED JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10FC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1114 JUMPI PUSH2 0x1113 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1148 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1310 JUMP JUMPDEST ISZERO PUSH2 0x1308 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11D9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D6 SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x127F JUMPI PUSH2 0x11E5 PUSH2 0x237B JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x1242 JUMPI POP PUSH2 0x11FA PUSH2 0x239D JUMP JUMPDEST DUP1 PUSH2 0x1205 JUMPI POP PUSH2 0x1244 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1239 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1276 SWAP1 PUSH2 0x24A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1306 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12FD SWAP1 PUSH2 0x2537 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1372 DUP3 PUSH2 0x1347 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1382 DUP2 PUSH2 0x1367 JUMP JUMPDEST DUP2 EQ PUSH2 0x138D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x139F DUP2 PUSH2 0x1379 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B8 DUP2 PUSH2 0x13A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x13C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13D5 DUP2 PUSH2 0x13AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F2 JUMPI PUSH2 0x13F1 PUSH2 0x133D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1400 DUP6 DUP3 DUP7 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1411 DUP6 DUP3 DUP7 ADD PUSH2 0x13C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1424 DUP2 PUSH2 0x13A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x143F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x141B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x147A DUP2 PUSH2 0x1445 JUMP JUMPDEST DUP2 EQ PUSH2 0x1485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1497 DUP2 PUSH2 0x1471 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B3 JUMPI PUSH2 0x14B2 PUSH2 0x133D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14C1 DUP5 DUP3 DUP6 ADD PUSH2 0x1488 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14DF DUP2 PUSH2 0x14CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14FA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1516 JUMPI PUSH2 0x1515 PUSH2 0x133D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1524 DUP5 DUP3 DUP6 ADD PUSH2 0x13C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1567 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x154C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1576 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1598 DUP3 PUSH2 0x152D JUMP JUMPDEST PUSH2 0x15A2 DUP2 DUP6 PUSH2 0x1538 JUMP JUMPDEST SWAP4 POP PUSH2 0x15B2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1549 JUMP JUMPDEST PUSH2 0x15BB DUP2 PUSH2 0x157C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15E0 DUP2 DUP5 PUSH2 0x158D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1625 DUP3 PUSH2 0x157C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1644 JUMPI PUSH2 0x1643 PUSH2 0x15ED JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1657 PUSH2 0x1333 JUMP JUMPDEST SWAP1 POP PUSH2 0x1663 DUP3 DUP3 PUSH2 0x161C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1683 JUMPI PUSH2 0x1682 PUSH2 0x15ED JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16AC PUSH2 0x16A7 DUP5 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0x164D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x16CF JUMPI PUSH2 0x16CE PUSH2 0x1694 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16F8 JUMPI DUP1 PUSH2 0x16E4 DUP9 DUP3 PUSH2 0x13C6 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16D1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1717 JUMPI PUSH2 0x1716 PUSH2 0x15E8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1727 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1750 JUMPI PUSH2 0x174F PUSH2 0x15ED JUMP JUMPDEST JUMPDEST PUSH2 0x1759 DUP3 PUSH2 0x157C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1788 PUSH2 0x1783 DUP5 PUSH2 0x1735 JUMP JUMPDEST PUSH2 0x164D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x17A4 JUMPI PUSH2 0x17A3 PUSH2 0x1730 JUMP JUMPDEST JUMPDEST PUSH2 0x17AF DUP5 DUP3 DUP6 PUSH2 0x1766 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17CC JUMPI PUSH2 0x17CB PUSH2 0x15E8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17DC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1775 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1801 JUMPI PUSH2 0x1800 PUSH2 0x133D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x180F DUP9 DUP3 DUP10 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1820 DUP9 DUP3 DUP10 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1841 JUMPI PUSH2 0x1840 PUSH2 0x1342 JUMP JUMPDEST JUMPDEST PUSH2 0x184D DUP9 DUP3 DUP10 ADD PUSH2 0x1702 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x186E JUMPI PUSH2 0x186D PUSH2 0x1342 JUMP JUMPDEST JUMPDEST PUSH2 0x187A DUP9 DUP3 DUP10 ADD PUSH2 0x1702 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x189B JUMPI PUSH2 0x189A PUSH2 0x1342 JUMP JUMPDEST JUMPDEST PUSH2 0x18A7 DUP9 DUP3 DUP10 ADD PUSH2 0x17B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18CF JUMPI PUSH2 0x18CE PUSH2 0x15ED JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18F3 PUSH2 0x18EE DUP5 PUSH2 0x18B4 JUMP JUMPDEST PUSH2 0x164D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1916 JUMPI PUSH2 0x1915 PUSH2 0x1694 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x193F JUMPI DUP1 PUSH2 0x192B DUP9 DUP3 PUSH2 0x1390 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1918 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x195E JUMPI PUSH2 0x195D PUSH2 0x15E8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x196E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x198E JUMPI PUSH2 0x198D PUSH2 0x133D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19AC JUMPI PUSH2 0x19AB PUSH2 0x1342 JUMP JUMPDEST JUMPDEST PUSH2 0x19B8 DUP6 DUP3 DUP7 ADD PUSH2 0x1949 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19D9 JUMPI PUSH2 0x19D8 PUSH2 0x1342 JUMP JUMPDEST JUMPDEST PUSH2 0x19E5 DUP6 DUP3 DUP7 ADD PUSH2 0x1702 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A24 DUP2 PUSH2 0x13A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A36 DUP4 DUP4 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A5A DUP3 PUSH2 0x19EF JUMP JUMPDEST PUSH2 0x1A64 DUP2 DUP6 PUSH2 0x19FA JUMP JUMPDEST SWAP4 POP PUSH2 0x1A6F DUP4 PUSH2 0x1A0B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AA0 JUMPI DUP2 MLOAD PUSH2 0x1A87 DUP9 DUP3 PUSH2 0x1A2A JUMP JUMPDEST SWAP8 POP PUSH2 0x1A92 DUP4 PUSH2 0x1A42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A73 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AC7 DUP2 DUP5 PUSH2 0x1A4F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AD8 DUP2 PUSH2 0x14CA JUMP JUMPDEST DUP2 EQ PUSH2 0x1AE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AF5 DUP2 PUSH2 0x1ACF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B12 JUMPI PUSH2 0x1B11 PUSH2 0x133D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B20 DUP6 DUP3 DUP7 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B31 DUP6 DUP3 DUP7 ADD PUSH2 0x1AE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B52 JUMPI PUSH2 0x1B51 PUSH2 0x133D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B60 DUP6 DUP3 DUP7 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B71 DUP6 DUP3 DUP7 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B97 JUMPI PUSH2 0x1B96 PUSH2 0x133D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BA5 DUP9 DUP3 DUP10 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1BB6 DUP9 DUP3 DUP10 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1BC7 DUP9 DUP3 DUP10 ADD PUSH2 0x13C6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1BD8 DUP9 DUP3 DUP10 ADD PUSH2 0x13C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BF9 JUMPI PUSH2 0x1BF8 PUSH2 0x1342 JUMP JUMPDEST JUMPDEST PUSH2 0x1C05 DUP9 DUP3 DUP10 ADD PUSH2 0x17B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6E PUSH1 0x2B DUP4 PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C79 DUP3 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C9D DUP2 PUSH2 0x1C61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CEB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1CFF JUMPI PUSH2 0x1CFE PUSH2 0x1CA4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D61 PUSH1 0x32 DUP4 PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6C DUP3 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D90 DUP2 PUSH2 0x1D54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF3 PUSH1 0x29 DUP4 PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFE DUP3 PUSH2 0x1D97 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E22 DUP2 PUSH2 0x1DE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E92 DUP3 PUSH2 0x13A5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1EC5 JUMPI PUSH2 0x1EC4 PUSH2 0x1E58 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F2C PUSH1 0x29 DUP4 PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F37 DUP3 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F5B DUP2 PUSH2 0x1F1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FBE PUSH1 0x28 DUP4 PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC9 DUP3 PUSH2 0x1F62 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FED DUP2 PUSH2 0x1FB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2050 PUSH1 0x25 DUP4 PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP PUSH2 0x205B DUP3 PUSH2 0x1FF4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x207F DUP2 PUSH2 0x2043 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E2 PUSH1 0x2A DUP4 PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP PUSH2 0x20ED DUP3 PUSH2 0x2086 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2111 DUP2 PUSH2 0x20D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2123 DUP3 PUSH2 0x13A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x212E DUP4 PUSH2 0x13A5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2163 JUMPI PUSH2 0x2162 PUSH2 0x1E58 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2188 DUP2 DUP6 PUSH2 0x1A4F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x219C DUP2 DUP5 PUSH2 0x1A4F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2201 PUSH1 0x29 DUP4 PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP PUSH2 0x220C DUP3 PUSH2 0x21A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2230 DUP2 PUSH2 0x21F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x224C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x141B JUMP JUMPDEST PUSH2 0x2259 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x141B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2269 DUP2 PUSH2 0x1367 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2296 DUP3 PUSH2 0x226F JUMP JUMPDEST PUSH2 0x22A0 DUP2 DUP6 PUSH2 0x227A JUMP JUMPDEST SWAP4 POP PUSH2 0x22B0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1549 JUMP JUMPDEST PUSH2 0x22B9 DUP2 PUSH2 0x157C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x22D9 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x22E6 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2260 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x22F8 DUP2 DUP7 PUSH2 0x1A4F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x230C DUP2 DUP6 PUSH2 0x1A4F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2320 DUP2 DUP5 PUSH2 0x228B JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x233B DUP2 PUSH2 0x1471 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2357 JUMPI PUSH2 0x2356 PUSH2 0x133D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2365 DUP5 DUP3 DUP6 ADD PUSH2 0x232C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x239A JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x2397 PUSH1 0x0 MLOAD PUSH2 0x236E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x23AD JUMPI PUSH2 0x2430 JUMP JUMPDEST PUSH2 0x23B5 PUSH2 0x1333 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x23DD JUMPI POP POP PUSH2 0x2430 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23FB JUMPI POP POP POP POP PUSH2 0x2430 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x2418 JUMPI POP POP POP POP POP PUSH2 0x2430 JUMP JUMPDEST PUSH2 0x2427 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x161C JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248F PUSH1 0x34 DUP4 PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP PUSH2 0x249A DUP3 PUSH2 0x2433 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24BE DUP2 PUSH2 0x2482 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2521 PUSH1 0x28 DUP4 PUSH2 0x1538 JUMP JUMPDEST SWAP2 POP PUSH2 0x252C DUP3 PUSH2 0x24C5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2550 DUP2 PUSH2 0x2514 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x256C PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x2579 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x2586 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x141B JUMP JUMPDEST PUSH2 0x2593 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x141B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x25A5 DUP2 DUP5 PUSH2 0x228B JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 SHR 0xE7 0xBB 0xBC PUSH16 0xE52E9C603F72B6B073A735850DCAA319 0x2F SSTORE 0xC7 PUSH23 0x76194F2D821764736F6C63430008080033000000000000 ",
							"sourceMap": "678:17683:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2643:231;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1622:354;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2387:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4582:442;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3040:524;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3637:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3864:168;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4104:401;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2643:231;2729:7;2776:1;2757:21;;:7;:21;;;;2749:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2844:9;:13;2854:2;2844:13;;;;;;;;;;;:22;2858:7;2844:22;;;;;;;;;;;;;;;;2837:29;;2643:231;;;;:::o;1622:354::-;1746:4;1798:37;1783:52;;;:11;:52;;;;:132;;;;1867:48;1852:63;;;:11;:63;;;;1783:132;:185;;;;1932:36;1956:11;1932:23;:36::i;:::-;1783:185;1763:205;;1622:354;;;:::o;2387:105::-;2447:13;2480:4;2473:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2387:105;;;:::o;4582:442::-;4823:12;:10;:12::i;:::-;4815:20;;:4;:20;;;:60;;;;4839:36;4856:4;4862:12;:10;:12::i;:::-;4839:16;:36::i;:::-;4815:60;4793:160;;;;;;;;;;;;:::i;:::-;;;;;;;;;4964:52;4987:4;4993:2;4997:3;5002:7;5011:4;4964:22;:52::i;:::-;4582:442;;;;;:::o;3040:524::-;3196:16;3257:3;:10;3238:8;:15;:29;3230:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;3326:30;3373:8;:15;3359:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3326:63;;3407:9;3402:122;3426:8;:15;3422:1;:19;3402:122;;;3482:30;3492:8;3501:1;3492:11;;;;;;;;:::i;:::-;;;;;;;;3505:3;3509:1;3505:6;;;;;;;;:::i;:::-;;;;;;;;3482:9;:30::i;:::-;3463:13;3477:1;3463:16;;;;;;;;:::i;:::-;;;;;;;:49;;;;;3443:3;;;;:::i;:::-;;;3402:122;;;;3543:13;3536:20;;;3040:524;;;;:::o;3637:155::-;3732:52;3751:12;:10;:12::i;:::-;3765:8;3775;3732:18;:52::i;:::-;3637:155;;:::o;3864:168::-;3963:4;3987:18;:27;4006:7;3987:27;;;;;;;;;;;;;;;:37;4015:8;3987:37;;;;;;;;;;;;;;;;;;;;;;;;;3980:44;;3864:168;;;;:::o;4104:401::-;4320:12;:10;:12::i;:::-;4312:20;;:4;:20;;;:60;;;;4336:36;4353:4;4359:12;:10;:12::i;:::-;4336:16;:36::i;:::-;4312:60;4290:151;;;;;;;;;;;;:::i;:::-;;;;;;;;;4452:45;4470:4;4476:2;4480;4484:6;4492:4;4452:17;:45::i;:::-;4104:401;;;;;:::o;1085:168:6:-;1170:4;1209:36;1194:51;;;:11;:51;;;;1187:58;;1085:168;;;:::o;859:98:5:-;912:7;939:10;932:17;;859:98;:::o;6820:1146:0:-;7047:7;:14;7033:3;:10;:28;7025:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;7139:1;7125:16;;:2;:16;;;;7117:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;7196:16;7215:12;:10;:12::i;:::-;7196:31;;7240:60;7261:8;7271:4;7277:2;7281:3;7286:7;7295:4;7240:20;:60::i;:::-;7318:9;7313:421;7337:3;:10;7333:1;:14;7313:421;;;7369:10;7382:3;7386:1;7382:6;;;;;;;;:::i;:::-;;;;;;;;7369:19;;7403:14;7420:7;7428:1;7420:10;;;;;;;;:::i;:::-;;;;;;;;7403:27;;7447:19;7469:9;:13;7479:2;7469:13;;;;;;;;;;;:19;7483:4;7469:19;;;;;;;;;;;;;;;;7447:41;;7526:6;7511:11;:21;;7503:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;7659:6;7645:11;:20;7623:9;:13;7633:2;7623:13;;;;;;;;;;;:19;7637:4;7623:19;;;;;;;;;;;;;;;:42;;;;7716:6;7695:9;:13;7705:2;7695:13;;;;;;;;;;;:17;7709:2;7695:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;7354:380;;;7349:3;;;;:::i;:::-;;;7313:421;;;;7781:2;7751:47;;7775:4;7751:47;;7765:8;7751:47;;;7785:3;7790:7;7751:47;;;;;;;:::i;:::-;;;;;;;;7811:59;7831:8;7841:4;7847:2;7851:3;7856:7;7865:4;7811:19;:59::i;:::-;7883:75;7919:8;7929:4;7935:2;7939:3;7944:7;7953:4;7883:35;:75::i;:::-;7014:952;6820:1146;;;;;:::o;13554:331::-;13709:8;13700:17;;:5;:17;;;;13692:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;13812:8;13774:18;:25;13793:5;13774:25;;;;;;;;;;;;;;;:35;13800:8;13774:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13858:8;13836:41;;13851:5;13836:41;;;13868:8;13836:41;;;;;;:::i;:::-;;;;;;;;13554:331;;;:::o;5488:974::-;5690:1;5676:16;;:2;:16;;;;5668:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5747:16;5766:12;:10;:12::i;:::-;5747:31;;5789:20;5812:21;5830:2;5812:17;:21::i;:::-;5789:44;;5844:24;5871:25;5889:6;5871:17;:25::i;:::-;5844:52;;5909:60;5930:8;5940:4;5946:2;5950:3;5955:7;5964:4;5909:20;:60::i;:::-;5982:19;6004:9;:13;6014:2;6004:13;;;;;;;;;;;:19;6018:4;6004:19;;;;;;;;;;;;;;;;5982:41;;6057:6;6042:11;:21;;6034:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;6182:6;6168:11;:20;6146:9;:13;6156:2;6146:13;;;;;;;;;;;:19;6160:4;6146:19;;;;;;;;;;;;;;;:42;;;;6231:6;6210:9;:13;6220:2;6210:13;;;;;;;;;;;:17;6224:2;6210:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;6286:2;6255:46;;6280:4;6255:46;;6270:8;6255:46;;;6290:2;6294:6;6255:46;;;;;;;:::i;:::-;;;;;;;;6314:59;6334:8;6344:4;6350:2;6354:3;6359:7;6368:4;6314:19;:59::i;:::-;6386:68;6417:8;6427:4;6433:2;6437;6441:6;6449:4;6386:30;:68::i;:::-;5657:805;;;;5488:974;;;;;:::o;14841:221::-;;;;;;;:::o;16017:220::-;;;;;;;:::o;17019:835::-;17259:15;:2;:13;;;:15::i;:::-;17255:592;;;17323:2;17295:54;;;17350:8;17360:4;17366:3;17371:7;17380:4;17295:90;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17291:545;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;17709:6;17702:14;;;;;;;;;;;:::i;:::-;;;;;;;;17291:545;;;17758:62;;;;;;;;;;:::i;:::-;;;;;;;;17291:545;17479:59;;;17467:71;;;:8;:71;;;;17463:170;;17563:50;;;;;;;;;;:::i;:::-;;;;;;;;17463:170;17386:262;17255:592;17019:835;;;;;;:::o;17862:198::-;17928:16;17957:22;17996:1;17982:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17957:41;;18020:7;18009:5;18015:1;18009:8;;;;;;;;:::i;:::-;;;;;;;:18;;;;;18047:5;18040:12;;;17862:198;;;:::o;16245:766::-;16460:15;:2;:13;;;:15::i;:::-;16456:548;;;16524:2;16496:49;;;16546:8;16556:4;16562:2;16566:6;16574:4;16496:83;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;16492:501;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;16866:6;16859:14;;;;;;;;;;;:::i;:::-;;;;;;;;16492:501;;;16915:62;;;;;;;;;;:::i;:::-;;;;;;;;16492:501;16641:54;;;16629:66;;;:8;:66;;;;16625:165;;16720:50;;;;;;;;;;:::i;:::-;;;;;;;;16625:165;16580:225;16456:548;16245:766;;;;;;:::o;1221:326:4:-;1281:4;1538:1;1516:7;:19;;;:23;1509:30;;1221:326;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:307::-;3896:1;3906:113;3920:6;3917:1;3914:13;3906:113;;;4005:1;4000:3;3996:11;3990:18;3986:1;3981:3;3977:11;3970:39;3942:2;3939:1;3935:10;3930:15;;3906:113;;;4037:6;4034:1;4031:13;4028:101;;;4117:1;4108:6;4103:3;4099:16;4092:27;4028:101;3877:258;3828:307;;;:::o;4141:102::-;4182:6;4233:2;4229:7;4224:2;4217:5;4213:14;4209:28;4199:38;;4141:102;;;:::o;4249:364::-;4337:3;4365:39;4398:5;4365:39;:::i;:::-;4420:71;4484:6;4479:3;4420:71;:::i;:::-;4413:78;;4500:52;4545:6;4540:3;4533:4;4526:5;4522:16;4500:52;:::i;:::-;4577:29;4599:6;4577:29;:::i;:::-;4572:3;4568:39;4561:46;;4341:272;4249:364;;;;:::o;4619:313::-;4732:4;4770:2;4759:9;4755:18;4747:26;;4819:9;4813:4;4809:20;4805:1;4794:9;4790:17;4783:47;4847:78;4920:4;4911:6;4847:78;:::i;:::-;4839:86;;4619:313;;;;:::o;4938:117::-;5047:1;5044;5037:12;5061:180;5109:77;5106:1;5099:88;5206:4;5203:1;5196:15;5230:4;5227:1;5220:15;5247:281;5330:27;5352:4;5330:27;:::i;:::-;5322:6;5318:40;5460:6;5448:10;5445:22;5424:18;5412:10;5409:34;5406:62;5403:88;;;5471:18;;:::i;:::-;5403:88;5511:10;5507:2;5500:22;5290:238;5247:281;;:::o;5534:129::-;5568:6;5595:20;;:::i;:::-;5585:30;;5624:33;5652:4;5644:6;5624:33;:::i;:::-;5534:129;;;:::o;5669:311::-;5746:4;5836:18;5828:6;5825:30;5822:56;;;5858:18;;:::i;:::-;5822:56;5908:4;5900:6;5896:17;5888:25;;5968:4;5962;5958:15;5950:23;;5669:311;;;:::o;5986:117::-;6095:1;6092;6085:12;6126:710;6222:5;6247:81;6263:64;6320:6;6263:64;:::i;:::-;6247:81;:::i;:::-;6238:90;;6348:5;6377:6;6370:5;6363:21;6411:4;6404:5;6400:16;6393:23;;6464:4;6456:6;6452:17;6444:6;6440:30;6493:3;6485:6;6482:15;6479:122;;;6512:79;;:::i;:::-;6479:122;6627:6;6610:220;6644:6;6639:3;6636:15;6610:220;;;6719:3;6748:37;6781:3;6769:10;6748:37;:::i;:::-;6743:3;6736:50;6815:4;6810:3;6806:14;6799:21;;6686:144;6670:4;6665:3;6661:14;6654:21;;6610:220;;;6614:21;6228:608;;6126:710;;;;;:::o;6859:370::-;6930:5;6979:3;6972:4;6964:6;6960:17;6956:27;6946:122;;6987:79;;:::i;:::-;6946:122;7104:6;7091:20;7129:94;7219:3;7211:6;7204:4;7196:6;7192:17;7129:94;:::i;:::-;7120:103;;6936:293;6859:370;;;;:::o;7235:117::-;7344:1;7341;7334:12;7358:307;7419:4;7509:18;7501:6;7498:30;7495:56;;;7531:18;;:::i;:::-;7495:56;7569:29;7591:6;7569:29;:::i;:::-;7561:37;;7653:4;7647;7643:15;7635:23;;7358:307;;;:::o;7671:154::-;7755:6;7750:3;7745;7732:30;7817:1;7808:6;7803:3;7799:16;7792:27;7671:154;;;:::o;7831:410::-;7908:5;7933:65;7949:48;7990:6;7949:48;:::i;:::-;7933:65;:::i;:::-;7924:74;;8021:6;8014:5;8007:21;8059:4;8052:5;8048:16;8097:3;8088:6;8083:3;8079:16;8076:25;8073:112;;;8104:79;;:::i;:::-;8073:112;8194:41;8228:6;8223:3;8218;8194:41;:::i;:::-;7914:327;7831:410;;;;;:::o;8260:338::-;8315:5;8364:3;8357:4;8349:6;8345:17;8341:27;8331:122;;8372:79;;:::i;:::-;8331:122;8489:6;8476:20;8514:78;8588:3;8580:6;8573:4;8565:6;8561:17;8514:78;:::i;:::-;8505:87;;8321:277;8260:338;;;;:::o;8604:1509::-;8758:6;8766;8774;8782;8790;8839:3;8827:9;8818:7;8814:23;8810:33;8807:120;;;8846:79;;:::i;:::-;8807:120;8966:1;8991:53;9036:7;9027:6;9016:9;9012:22;8991:53;:::i;:::-;8981:63;;8937:117;9093:2;9119:53;9164:7;9155:6;9144:9;9140:22;9119:53;:::i;:::-;9109:63;;9064:118;9249:2;9238:9;9234:18;9221:32;9280:18;9272:6;9269:30;9266:117;;;9302:79;;:::i;:::-;9266:117;9407:78;9477:7;9468:6;9457:9;9453:22;9407:78;:::i;:::-;9397:88;;9192:303;9562:2;9551:9;9547:18;9534:32;9593:18;9585:6;9582:30;9579:117;;;9615:79;;:::i;:::-;9579:117;9720:78;9790:7;9781:6;9770:9;9766:22;9720:78;:::i;:::-;9710:88;;9505:303;9875:3;9864:9;9860:19;9847:33;9907:18;9899:6;9896:30;9893:117;;;9929:79;;:::i;:::-;9893:117;10034:62;10088:7;10079:6;10068:9;10064:22;10034:62;:::i;:::-;10024:72;;9818:288;8604:1509;;;;;;;;:::o;10119:311::-;10196:4;10286:18;10278:6;10275:30;10272:56;;;10308:18;;:::i;:::-;10272:56;10358:4;10350:6;10346:17;10338:25;;10418:4;10412;10408:15;10400:23;;10119:311;;;:::o;10453:710::-;10549:5;10574:81;10590:64;10647:6;10590:64;:::i;:::-;10574:81;:::i;:::-;10565:90;;10675:5;10704:6;10697:5;10690:21;10738:4;10731:5;10727:16;10720:23;;10791:4;10783:6;10779:17;10771:6;10767:30;10820:3;10812:6;10809:15;10806:122;;;10839:79;;:::i;:::-;10806:122;10954:6;10937:220;10971:6;10966:3;10963:15;10937:220;;;11046:3;11075:37;11108:3;11096:10;11075:37;:::i;:::-;11070:3;11063:50;11142:4;11137:3;11133:14;11126:21;;11013:144;10997:4;10992:3;10988:14;10981:21;;10937:220;;;10941:21;10555:608;;10453:710;;;;;:::o;11186:370::-;11257:5;11306:3;11299:4;11291:6;11287:17;11283:27;11273:122;;11314:79;;:::i;:::-;11273:122;11431:6;11418:20;11456:94;11546:3;11538:6;11531:4;11523:6;11519:17;11456:94;:::i;:::-;11447:103;;11263:293;11186:370;;;;:::o;11562:894::-;11680:6;11688;11737:2;11725:9;11716:7;11712:23;11708:32;11705:119;;;11743:79;;:::i;:::-;11705:119;11891:1;11880:9;11876:17;11863:31;11921:18;11913:6;11910:30;11907:117;;;11943:79;;:::i;:::-;11907:117;12048:78;12118:7;12109:6;12098:9;12094:22;12048:78;:::i;:::-;12038:88;;11834:302;12203:2;12192:9;12188:18;12175:32;12234:18;12226:6;12223:30;12220:117;;;12256:79;;:::i;:::-;12220:117;12361:78;12431:7;12422:6;12411:9;12407:22;12361:78;:::i;:::-;12351:88;;12146:303;11562:894;;;;;:::o;12462:114::-;12529:6;12563:5;12557:12;12547:22;;12462:114;;;:::o;12582:184::-;12681:11;12715:6;12710:3;12703:19;12755:4;12750:3;12746:14;12731:29;;12582:184;;;;:::o;12772:132::-;12839:4;12862:3;12854:11;;12892:4;12887:3;12883:14;12875:22;;12772:132;;;:::o;12910:108::-;12987:24;13005:5;12987:24;:::i;:::-;12982:3;12975:37;12910:108;;:::o;13024:179::-;13093:10;13114:46;13156:3;13148:6;13114:46;:::i;:::-;13192:4;13187:3;13183:14;13169:28;;13024:179;;;;:::o;13209:113::-;13279:4;13311;13306:3;13302:14;13294:22;;13209:113;;;:::o;13358:732::-;13477:3;13506:54;13554:5;13506:54;:::i;:::-;13576:86;13655:6;13650:3;13576:86;:::i;:::-;13569:93;;13686:56;13736:5;13686:56;:::i;:::-;13765:7;13796:1;13781:284;13806:6;13803:1;13800:13;13781:284;;;13882:6;13876:13;13909:63;13968:3;13953:13;13909:63;:::i;:::-;13902:70;;13995:60;14048:6;13995:60;:::i;:::-;13985:70;;13841:224;13828:1;13825;13821:9;13816:14;;13781:284;;;13785:14;14081:3;14074:10;;13482:608;;;13358:732;;;;:::o;14096:373::-;14239:4;14277:2;14266:9;14262:18;14254:26;;14326:9;14320:4;14316:20;14312:1;14301:9;14297:17;14290:47;14354:108;14457:4;14448:6;14354:108;:::i;:::-;14346:116;;14096:373;;;;:::o;14475:116::-;14545:21;14560:5;14545:21;:::i;:::-;14538:5;14535:32;14525:60;;14581:1;14578;14571:12;14525:60;14475:116;:::o;14597:133::-;14640:5;14678:6;14665:20;14656:29;;14694:30;14718:5;14694:30;:::i;:::-;14597:133;;;;:::o;14736:468::-;14801:6;14809;14858:2;14846:9;14837:7;14833:23;14829:32;14826:119;;;14864:79;;:::i;:::-;14826:119;14984:1;15009:53;15054:7;15045:6;15034:9;15030:22;15009:53;:::i;:::-;14999:63;;14955:117;15111:2;15137:50;15179:7;15170:6;15159:9;15155:22;15137:50;:::i;:::-;15127:60;;15082:115;14736:468;;;;;:::o;15210:474::-;15278:6;15286;15335:2;15323:9;15314:7;15310:23;15306:32;15303:119;;;15341:79;;:::i;:::-;15303:119;15461:1;15486:53;15531:7;15522:6;15511:9;15507:22;15486:53;:::i;:::-;15476:63;;15432:117;15588:2;15614:53;15659:7;15650:6;15639:9;15635:22;15614:53;:::i;:::-;15604:63;;15559:118;15210:474;;;;;:::o;15690:1089::-;15794:6;15802;15810;15818;15826;15875:3;15863:9;15854:7;15850:23;15846:33;15843:120;;;15882:79;;:::i;:::-;15843:120;16002:1;16027:53;16072:7;16063:6;16052:9;16048:22;16027:53;:::i;:::-;16017:63;;15973:117;16129:2;16155:53;16200:7;16191:6;16180:9;16176:22;16155:53;:::i;:::-;16145:63;;16100:118;16257:2;16283:53;16328:7;16319:6;16308:9;16304:22;16283:53;:::i;:::-;16273:63;;16228:118;16385:2;16411:53;16456:7;16447:6;16436:9;16432:22;16411:53;:::i;:::-;16401:63;;16356:118;16541:3;16530:9;16526:19;16513:33;16573:18;16565:6;16562:30;16559:117;;;16595:79;;:::i;:::-;16559:117;16700:62;16754:7;16745:6;16734:9;16730:22;16700:62;:::i;:::-;16690:72;;16484:288;15690:1089;;;;;;;;:::o;16785:230::-;16925:34;16921:1;16913:6;16909:14;16902:58;16994:13;16989:2;16981:6;16977:15;16970:38;16785:230;:::o;17021:366::-;17163:3;17184:67;17248:2;17243:3;17184:67;:::i;:::-;17177:74;;17260:93;17349:3;17260:93;:::i;:::-;17378:2;17373:3;17369:12;17362:19;;17021:366;;;:::o;17393:419::-;17559:4;17597:2;17586:9;17582:18;17574:26;;17646:9;17640:4;17636:20;17632:1;17621:9;17617:17;17610:47;17674:131;17800:4;17674:131;:::i;:::-;17666:139;;17393:419;;;:::o;17818:180::-;17866:77;17863:1;17856:88;17963:4;17960:1;17953:15;17987:4;17984:1;17977:15;18004:320;18048:6;18085:1;18079:4;18075:12;18065:22;;18132:1;18126:4;18122:12;18153:18;18143:81;;18209:4;18201:6;18197:17;18187:27;;18143:81;18271:2;18263:6;18260:14;18240:18;18237:38;18234:84;;;18290:18;;:::i;:::-;18234:84;18055:269;18004:320;;;:::o;18330:237::-;18470:34;18466:1;18458:6;18454:14;18447:58;18539:20;18534:2;18526:6;18522:15;18515:45;18330:237;:::o;18573:366::-;18715:3;18736:67;18800:2;18795:3;18736:67;:::i;:::-;18729:74;;18812:93;18901:3;18812:93;:::i;:::-;18930:2;18925:3;18921:12;18914:19;;18573:366;;;:::o;18945:419::-;19111:4;19149:2;19138:9;19134:18;19126:26;;19198:9;19192:4;19188:20;19184:1;19173:9;19169:17;19162:47;19226:131;19352:4;19226:131;:::i;:::-;19218:139;;18945:419;;;:::o;19370:228::-;19510:34;19506:1;19498:6;19494:14;19487:58;19579:11;19574:2;19566:6;19562:15;19555:36;19370:228;:::o;19604:366::-;19746:3;19767:67;19831:2;19826:3;19767:67;:::i;:::-;19760:74;;19843:93;19932:3;19843:93;:::i;:::-;19961:2;19956:3;19952:12;19945:19;;19604:366;;;:::o;19976:419::-;20142:4;20180:2;20169:9;20165:18;20157:26;;20229:9;20223:4;20219:20;20215:1;20204:9;20200:17;20193:47;20257:131;20383:4;20257:131;:::i;:::-;20249:139;;19976:419;;;:::o;20401:180::-;20449:77;20446:1;20439:88;20546:4;20543:1;20536:15;20570:4;20567:1;20560:15;20587:180;20635:77;20632:1;20625:88;20732:4;20729:1;20722:15;20756:4;20753:1;20746:15;20773:233;20812:3;20835:24;20853:5;20835:24;:::i;:::-;20826:33;;20881:66;20874:5;20871:77;20868:103;;;20951:18;;:::i;:::-;20868:103;20998:1;20991:5;20987:13;20980:20;;20773:233;;;:::o;21012:228::-;21152:34;21148:1;21140:6;21136:14;21129:58;21221:11;21216:2;21208:6;21204:15;21197:36;21012:228;:::o;21246:366::-;21388:3;21409:67;21473:2;21468:3;21409:67;:::i;:::-;21402:74;;21485:93;21574:3;21485:93;:::i;:::-;21603:2;21598:3;21594:12;21587:19;;21246:366;;;:::o;21618:419::-;21784:4;21822:2;21811:9;21807:18;21799:26;;21871:9;21865:4;21861:20;21857:1;21846:9;21842:17;21835:47;21899:131;22025:4;21899:131;:::i;:::-;21891:139;;21618:419;;;:::o;22043:227::-;22183:34;22179:1;22171:6;22167:14;22160:58;22252:10;22247:2;22239:6;22235:15;22228:35;22043:227;:::o;22276:366::-;22418:3;22439:67;22503:2;22498:3;22439:67;:::i;:::-;22432:74;;22515:93;22604:3;22515:93;:::i;:::-;22633:2;22628:3;22624:12;22617:19;;22276:366;;;:::o;22648:419::-;22814:4;22852:2;22841:9;22837:18;22829:26;;22901:9;22895:4;22891:20;22887:1;22876:9;22872:17;22865:47;22929:131;23055:4;22929:131;:::i;:::-;22921:139;;22648:419;;;:::o;23073:224::-;23213:34;23209:1;23201:6;23197:14;23190:58;23282:7;23277:2;23269:6;23265:15;23258:32;23073:224;:::o;23303:366::-;23445:3;23466:67;23530:2;23525:3;23466:67;:::i;:::-;23459:74;;23542:93;23631:3;23542:93;:::i;:::-;23660:2;23655:3;23651:12;23644:19;;23303:366;;;:::o;23675:419::-;23841:4;23879:2;23868:9;23864:18;23856:26;;23928:9;23922:4;23918:20;23914:1;23903:9;23899:17;23892:47;23956:131;24082:4;23956:131;:::i;:::-;23948:139;;23675:419;;;:::o;24100:229::-;24240:34;24236:1;24228:6;24224:14;24217:58;24309:12;24304:2;24296:6;24292:15;24285:37;24100:229;:::o;24335:366::-;24477:3;24498:67;24562:2;24557:3;24498:67;:::i;:::-;24491:74;;24574:93;24663:3;24574:93;:::i;:::-;24692:2;24687:3;24683:12;24676:19;;24335:366;;;:::o;24707:419::-;24873:4;24911:2;24900:9;24896:18;24888:26;;24960:9;24954:4;24950:20;24946:1;24935:9;24931:17;24924:47;24988:131;25114:4;24988:131;:::i;:::-;24980:139;;24707:419;;;:::o;25132:305::-;25172:3;25191:20;25209:1;25191:20;:::i;:::-;25186:25;;25225:20;25243:1;25225:20;:::i;:::-;25220:25;;25379:1;25311:66;25307:74;25304:1;25301:81;25298:107;;;25385:18;;:::i;:::-;25298:107;25429:1;25426;25422:9;25415:16;;25132:305;;;;:::o;25443:634::-;25664:4;25702:2;25691:9;25687:18;25679:26;;25751:9;25745:4;25741:20;25737:1;25726:9;25722:17;25715:47;25779:108;25882:4;25873:6;25779:108;:::i;:::-;25771:116;;25934:9;25928:4;25924:20;25919:2;25908:9;25904:18;25897:48;25962:108;26065:4;26056:6;25962:108;:::i;:::-;25954:116;;25443:634;;;;;:::o;26083:228::-;26223:34;26219:1;26211:6;26207:14;26200:58;26292:11;26287:2;26279:6;26275:15;26268:36;26083:228;:::o;26317:366::-;26459:3;26480:67;26544:2;26539:3;26480:67;:::i;:::-;26473:74;;26556:93;26645:3;26556:93;:::i;:::-;26674:2;26669:3;26665:12;26658:19;;26317:366;;;:::o;26689:419::-;26855:4;26893:2;26882:9;26878:18;26870:26;;26942:9;26936:4;26932:20;26928:1;26917:9;26913:17;26906:47;26970:131;27096:4;26970:131;:::i;:::-;26962:139;;26689:419;;;:::o;27114:332::-;27235:4;27273:2;27262:9;27258:18;27250:26;;27286:71;27354:1;27343:9;27339:17;27330:6;27286:71;:::i;:::-;27367:72;27435:2;27424:9;27420:18;27411:6;27367:72;:::i;:::-;27114:332;;;;;:::o;27452:118::-;27539:24;27557:5;27539:24;:::i;:::-;27534:3;27527:37;27452:118;;:::o;27576:98::-;27627:6;27661:5;27655:12;27645:22;;27576:98;;;:::o;27680:168::-;27763:11;27797:6;27792:3;27785:19;27837:4;27832:3;27828:14;27813:29;;27680:168;;;;:::o;27854:360::-;27940:3;27968:38;28000:5;27968:38;:::i;:::-;28022:70;28085:6;28080:3;28022:70;:::i;:::-;28015:77;;28101:52;28146:6;28141:3;28134:4;28127:5;28123:16;28101:52;:::i;:::-;28178:29;28200:6;28178:29;:::i;:::-;28173:3;28169:39;28162:46;;27944:270;27854:360;;;;:::o;28220:1053::-;28543:4;28581:3;28570:9;28566:19;28558:27;;28595:71;28663:1;28652:9;28648:17;28639:6;28595:71;:::i;:::-;28676:72;28744:2;28733:9;28729:18;28720:6;28676:72;:::i;:::-;28795:9;28789:4;28785:20;28780:2;28769:9;28765:18;28758:48;28823:108;28926:4;28917:6;28823:108;:::i;:::-;28815:116;;28978:9;28972:4;28968:20;28963:2;28952:9;28948:18;28941:48;29006:108;29109:4;29100:6;29006:108;:::i;:::-;28998:116;;29162:9;29156:4;29152:20;29146:3;29135:9;29131:19;29124:49;29190:76;29261:4;29252:6;29190:76;:::i;:::-;29182:84;;28220:1053;;;;;;;;:::o;29279:141::-;29335:5;29366:6;29360:13;29351:22;;29382:32;29408:5;29382:32;:::i;:::-;29279:141;;;;:::o;29426:349::-;29495:6;29544:2;29532:9;29523:7;29519:23;29515:32;29512:119;;;29550:79;;:::i;:::-;29512:119;29670:1;29695:63;29750:7;29741:6;29730:9;29726:22;29695:63;:::i;:::-;29685:73;;29641:127;29426:349;;;;:::o;29781:106::-;29825:8;29874:5;29869:3;29865:15;29844:36;;29781:106;;;:::o;29893:183::-;29928:3;29966:1;29948:16;29945:23;29942:128;;;30004:1;30001;29998;29983:23;30026:34;30057:1;30051:8;30026:34;:::i;:::-;30019:41;;29942:128;29893:183;:::o;30082:711::-;30121:3;30159:4;30141:16;30138:26;30135:39;;;30167:5;;30135:39;30196:20;;:::i;:::-;30271:1;30253:16;30249:24;30246:1;30240:4;30225:49;30304:4;30298:11;30403:16;30396:4;30388:6;30384:17;30381:39;30348:18;30340:6;30337:30;30321:113;30318:146;;;30449:5;;;;30318:146;30495:6;30489:4;30485:17;30531:3;30525:10;30558:18;30550:6;30547:30;30544:43;;;30580:5;;;;;;30544:43;30628:6;30621:4;30616:3;30612:14;30608:27;30687:1;30669:16;30665:24;30659:4;30655:35;30650:3;30647:44;30644:57;;;30694:5;;;;;;;30644:57;30711;30759:6;30753:4;30749:17;30741:6;30737:30;30731:4;30711:57;:::i;:::-;30784:3;30777:10;;30125:668;;;;;30082:711;;:::o;30799:239::-;30939:34;30935:1;30927:6;30923:14;30916:58;31008:22;31003:2;30995:6;30991:15;30984:47;30799:239;:::o;31044:366::-;31186:3;31207:67;31271:2;31266:3;31207:67;:::i;:::-;31200:74;;31283:93;31372:3;31283:93;:::i;:::-;31401:2;31396:3;31392:12;31385:19;;31044:366;;;:::o;31416:419::-;31582:4;31620:2;31609:9;31605:18;31597:26;;31669:9;31663:4;31659:20;31655:1;31644:9;31640:17;31633:47;31697:131;31823:4;31697:131;:::i;:::-;31689:139;;31416:419;;;:::o;31841:227::-;31981:34;31977:1;31969:6;31965:14;31958:58;32050:10;32045:2;32037:6;32033:15;32026:35;31841:227;:::o;32074:366::-;32216:3;32237:67;32301:2;32296:3;32237:67;:::i;:::-;32230:74;;32313:93;32402:3;32313:93;:::i;:::-;32431:2;32426:3;32422:12;32415:19;;32074:366;;;:::o;32446:419::-;32612:4;32650:2;32639:9;32635:18;32627:26;;32699:9;32693:4;32689:20;32685:1;32674:9;32670:17;32663:47;32727:131;32853:4;32727:131;:::i;:::-;32719:139;;32446:419;;;:::o;32871:751::-;33094:4;33132:3;33121:9;33117:19;33109:27;;33146:71;33214:1;33203:9;33199:17;33190:6;33146:71;:::i;:::-;33227:72;33295:2;33284:9;33280:18;33271:6;33227:72;:::i;:::-;33309;33377:2;33366:9;33362:18;33353:6;33309:72;:::i;:::-;33391;33459:2;33448:9;33444:18;33435:6;33391:72;:::i;:::-;33511:9;33505:4;33501:20;33495:3;33484:9;33480:19;33473:49;33539:76;33610:4;33601:6;33539:76;:::i;:::-;33531:84;;32871:751;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1940600",
								"executionCost": "2055",
								"totalCost": "1942655"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "796",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"__ERC1155_init(string memory)": "infinite",
								"__ERC1155_init_unchained(string memory)": "infinite",
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 678,
									"end": 18361,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 678,
									"end": 18361,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 678,
									"end": 18361,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 678,
									"end": 18361,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 678,
									"end": 18361,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 678,
									"end": 18361,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 678,
									"end": 18361,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 678,
									"end": 18361,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 678,
									"end": 18361,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 678,
									"end": 18361,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 678,
									"end": 18361,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 678,
									"end": 18361,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 678,
									"end": 18361,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 678,
									"end": 18361,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 678,
									"end": 18361,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 678,
									"end": 18361,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 678,
									"end": 18361,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 678,
									"end": 18361,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 678,
									"end": 18361,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 678,
									"end": 18361,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 678,
									"end": 18361,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e21ce7bbbc6fe52e9c603f72b6b073a735850dcaa3192f55c77676194f2d821764736f6c63430008080033",
									".code": [
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 678,
											"end": 18361,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2764,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2844,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2856,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2844,
											"end": 2857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2844,
											"end": 2857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2844,
											"end": 2857,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2837,
											"end": 2866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2837,
											"end": 2866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2874,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1746,
											"end": 1750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1835,
											"name": "PUSH",
											"source": 0,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1783,
											"end": 1835,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1783,
											"end": 1835,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1783,
											"end": 1835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1783,
											"end": 1794,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1783,
											"end": 1835,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1783,
											"end": 1835,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1783,
											"end": 1835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1783,
											"end": 1835,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1783,
											"end": 1915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1783,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1783,
											"end": 1915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1783,
											"end": 1915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1867,
											"end": 1915,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1852,
											"end": 1915,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1852,
											"end": 1915,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1915,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1852,
											"end": 1915,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1915,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1783,
											"end": 1915,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1783,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1783,
											"end": 1968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1783,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1783,
											"end": 1968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1783,
											"end": 1968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1956,
											"end": 1967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1932,
											"end": 1968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1932,
											"end": 1968,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1932,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1783,
											"end": 1968,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1783,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1976,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2480,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2492,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4823,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4823,
											"end": 4835,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4823,
											"end": 4835,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4823,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4835,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4815,
											"end": 4835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4819,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4835,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4815,
											"end": 4835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4835,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4815,
											"end": 4875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4839,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4856,
											"end": 4860,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4862,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4862,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4862,
											"end": 4874,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4862,
											"end": 4874,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4862,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4839,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4839,
											"end": 4875,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4839,
											"end": 4875,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4839,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4875,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4815,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4793,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4964,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4987,
											"end": 4991,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 4995,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4997,
											"end": 5000,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5002,
											"end": 5009,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5015,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4964,
											"end": 5016,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4964,
											"end": 5016,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4964,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 5024,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3212,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3257,
											"end": 3260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3267,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3238,
											"end": 3246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3238,
											"end": 3253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3238,
											"end": 3267,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3230,
											"end": 3313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3373,
											"end": 3381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3524,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3402,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3434,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3441,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3524,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3402,
											"end": 3524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3482,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3492,
											"end": 3500,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3501,
											"end": 3502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3508,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3482,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3482,
											"end": 3512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3482,
											"end": 3512,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3482,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3476,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3477,
											"end": 3478,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3479,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3463,
											"end": 3479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3463,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3463,
											"end": 3479,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3463,
											"end": 3479,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3463,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3479,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3463,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3479,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3463,
											"end": 3479,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3479,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3463,
											"end": 3479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3443,
											"end": 3446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3443,
											"end": 3446,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3443,
											"end": 3446,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3443,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3402,
											"end": 3524,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3524,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3402,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3543,
											"end": 3556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3564,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3751,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3751,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3751,
											"end": 3763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3751,
											"end": 3763,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3751,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3773,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3775,
											"end": 3783,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3732,
											"end": 3784,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3732,
											"end": 3784,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3732,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3792,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3963,
											"end": 3967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 4005,
											"name": "PUSH",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3987,
											"end": 4014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 4013,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3987,
											"end": 4014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3987,
											"end": 4014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3987,
											"end": 4014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3987,
											"end": 4014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 4014,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4015,
											"end": 4023,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 4024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 4024,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 4032,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4320,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4320,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4320,
											"end": 4332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4320,
											"end": 4332,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4320,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4312,
											"end": 4332,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4312,
											"end": 4332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4312,
											"end": 4316,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4312,
											"end": 4332,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4312,
											"end": 4332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4312,
											"end": 4332,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4312,
											"end": 4372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4312,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4312,
											"end": 4372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4312,
											"end": 4372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4353,
											"end": 4357,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4359,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4359,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4359,
											"end": 4371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4359,
											"end": 4371,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4359,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4336,
											"end": 4372,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4336,
											"end": 4372,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4336,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4312,
											"end": 4372,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4312,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4290,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4452,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4470,
											"end": 4474,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4476,
											"end": 4478,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4482,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4490,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4492,
											"end": 4496,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4452,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4452,
											"end": 4497,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4452,
											"end": 4497,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4452,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4505,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1085,
											"end": 1253,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1085,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1170,
											"end": 1174,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1245,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1194,
											"end": 1245,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1194,
											"end": 1245,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1245,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1205,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1245,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1194,
											"end": 1245,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1245,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1245,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1253,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 859,
											"end": 957,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 859,
											"end": 957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 912,
											"end": 919,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 949,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 932,
											"end": 949,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 932,
											"end": 949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 859,
											"end": 957,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 859,
											"end": 957,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6820,
											"end": 7966,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6820,
											"end": 7966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7033,
											"end": 7036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7033,
											"end": 7043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7033,
											"end": 7061,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 7025,
											"end": 7106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7139,
											"end": 7140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7125,
											"end": 7141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7125,
											"end": 7141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7125,
											"end": 7127,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7125,
											"end": 7141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7125,
											"end": 7141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7125,
											"end": 7141,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7125,
											"end": 7141,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 7117,
											"end": 7183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7196,
											"end": 7212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7215,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7215,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 7215,
											"end": 7227,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7215,
											"end": 7227,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7215,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7196,
											"end": 7227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7196,
											"end": 7227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7240,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7261,
											"end": 7269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7271,
											"end": 7275,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7279,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7281,
											"end": 7284,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7293,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7299,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7240,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7240,
											"end": 7300,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7240,
											"end": 7300,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7240,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7318,
											"end": 7327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7313,
											"end": 7734,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7313,
											"end": 7734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7337,
											"end": 7340,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7337,
											"end": 7347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7333,
											"end": 7334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7333,
											"end": 7347,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7734,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 7313,
											"end": 7734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7382,
											"end": 7385,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7386,
											"end": 7387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7403,
											"end": 7417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7420,
											"end": 7427,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7430,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7420,
											"end": 7430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 7420,
											"end": 7430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 7420,
											"end": 7430,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7420,
											"end": 7430,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 7420,
											"end": 7430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7430,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7420,
											"end": 7430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7430,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7420,
											"end": 7430,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7430,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7420,
											"end": 7430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7403,
											"end": 7430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7403,
											"end": 7430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7469,
											"end": 7478,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 7469,
											"end": 7482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7479,
											"end": 7481,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7482,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7469,
											"end": 7482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7482,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7469,
											"end": 7482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7469,
											"end": 7482,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7483,
											"end": 7487,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7526,
											"end": 7532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7532,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7532,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 7503,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7659,
											"end": 7665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 7656,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 7665,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7632,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 7623,
											"end": 7636,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7633,
											"end": 7635,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7636,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7623,
											"end": 7636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7636,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7623,
											"end": 7636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7636,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7623,
											"end": 7636,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7641,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7623,
											"end": 7642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7623,
											"end": 7642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7623,
											"end": 7642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7623,
											"end": 7642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7623,
											"end": 7642,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7665,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7704,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 7695,
											"end": 7708,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7705,
											"end": 7707,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7708,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7695,
											"end": 7708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7708,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7695,
											"end": 7708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7708,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7695,
											"end": 7708,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7709,
											"end": 7711,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7695,
											"end": 7712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7695,
											"end": 7712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7695,
											"end": 7712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7695,
											"end": 7712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7695,
											"end": 7712,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7695,
											"end": 7722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7722,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7695,
											"end": 7722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 7695,
											"end": 7722,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7695,
											"end": 7722,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7695,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7722,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7722,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 7722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7354,
											"end": 7734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7354,
											"end": 7734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7354,
											"end": 7734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7313,
											"end": 7734,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7734,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 7313,
											"end": 7734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7781,
											"end": 7783,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7779,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7785,
											"end": 7788,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7790,
											"end": 7797,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 7831,
											"end": 7839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7841,
											"end": 7845,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7847,
											"end": 7849,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7851,
											"end": 7854,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7863,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 7869,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 7811,
											"end": 7870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7811,
											"end": 7870,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 7811,
											"end": 7870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7883,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7919,
											"end": 7927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7933,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7935,
											"end": 7937,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7939,
											"end": 7942,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7944,
											"end": 7951,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7953,
											"end": 7957,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7883,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7883,
											"end": 7958,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7883,
											"end": 7958,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7883,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7014,
											"end": 7966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 7966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 7966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 7966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 7966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 7966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 7966,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13554,
											"end": 13885,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 13554,
											"end": 13885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13700,
											"end": 13717,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13700,
											"end": 13717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13700,
											"end": 13705,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13700,
											"end": 13717,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13700,
											"end": 13717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13700,
											"end": 13717,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13700,
											"end": 13717,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 13692,
											"end": 13763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13812,
											"end": 13820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13792,
											"name": "PUSH",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 13774,
											"end": 13799,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13793,
											"end": 13798,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13799,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13774,
											"end": 13799,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13799,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13774,
											"end": 13799,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13799,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13774,
											"end": 13799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13799,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13774,
											"end": 13799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13799,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13774,
											"end": 13799,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13800,
											"end": 13808,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13774,
											"end": 13809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13774,
											"end": 13809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13774,
											"end": 13809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13774,
											"end": 13809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13774,
											"end": 13809,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13774,
											"end": 13820,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13774,
											"end": 13820,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13820,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13820,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13774,
											"end": 13820,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13820,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13820,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13820,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13820,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13820,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13820,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13820,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13858,
											"end": 13866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13836,
											"end": 13877,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13836,
											"end": 13877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13851,
											"end": 13856,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13836,
											"end": 13877,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13836,
											"end": 13877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13836,
											"end": 13877,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13868,
											"end": 13876,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13836,
											"end": 13877,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13836,
											"end": 13877,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13836,
											"end": 13877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 13836,
											"end": 13877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13836,
											"end": 13877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13836,
											"end": 13877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 13836,
											"end": 13877,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13836,
											"end": 13877,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 13836,
											"end": 13877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13836,
											"end": 13877,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13836,
											"end": 13877,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13836,
											"end": 13877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13836,
											"end": 13877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13836,
											"end": 13877,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13836,
											"end": 13877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13836,
											"end": 13877,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13554,
											"end": 13885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13554,
											"end": 13885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13554,
											"end": 13885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13554,
											"end": 13885,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5488,
											"end": 6462,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5488,
											"end": 6462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5690,
											"end": 5691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5676,
											"end": 5692,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5676,
											"end": 5692,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5692,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5676,
											"end": 5692,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5692,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5692,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5668,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5747,
											"end": 5763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5766,
											"end": 5778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5766,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5766,
											"end": 5778,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5766,
											"end": 5778,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5766,
											"end": 5778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5747,
											"end": 5778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5747,
											"end": 5778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5789,
											"end": 5809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5812,
											"end": 5833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5830,
											"end": 5832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5812,
											"end": 5833,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5812,
											"end": 5833,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5812,
											"end": 5833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5789,
											"end": 5833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5789,
											"end": 5833,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5844,
											"end": 5868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5871,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5889,
											"end": 5895,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5871,
											"end": 5896,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5871,
											"end": 5896,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5871,
											"end": 5896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5844,
											"end": 5896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5844,
											"end": 5896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5909,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5930,
											"end": 5938,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5944,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5946,
											"end": 5948,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5950,
											"end": 5953,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5955,
											"end": 5962,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5964,
											"end": 5968,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5909,
											"end": 5929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5909,
											"end": 5969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5909,
											"end": 5969,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5909,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6004,
											"end": 6013,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6004,
											"end": 6017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6014,
											"end": 6016,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6004,
											"end": 6017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6004,
											"end": 6017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6004,
											"end": 6017,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6022,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6023,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6004,
											"end": 6023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6023,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6004,
											"end": 6023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6023,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6004,
											"end": 6023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6023,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6004,
											"end": 6023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6004,
											"end": 6023,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6023,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6057,
											"end": 6063,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6063,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6063,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 6034,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6182,
											"end": 6188,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6168,
											"end": 6179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6168,
											"end": 6188,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6155,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6146,
											"end": 6159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6156,
											"end": 6158,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6146,
											"end": 6159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6146,
											"end": 6159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6146,
											"end": 6159,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6160,
											"end": 6164,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6165,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6146,
											"end": 6165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6165,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6146,
											"end": 6165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6165,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6146,
											"end": 6165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6165,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6146,
											"end": 6165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6146,
											"end": 6165,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6188,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6231,
											"end": 6237,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6219,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6210,
											"end": 6223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6220,
											"end": 6222,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6223,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6210,
											"end": 6223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6223,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6210,
											"end": 6223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6210,
											"end": 6223,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6224,
											"end": 6226,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6227,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6210,
											"end": 6227,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6227,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6210,
											"end": 6227,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6227,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6210,
											"end": 6227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6227,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6210,
											"end": 6227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6210,
											"end": 6227,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6210,
											"end": 6237,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6237,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6237,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 6210,
											"end": 6237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6210,
											"end": 6237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6210,
											"end": 6237,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 6210,
											"end": 6237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6237,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6237,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6286,
											"end": 6288,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6280,
											"end": 6284,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6270,
											"end": 6278,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6290,
											"end": 6292,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6294,
											"end": 6300,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6301,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6314,
											"end": 6373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 6334,
											"end": 6342,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6344,
											"end": 6348,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6350,
											"end": 6352,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6357,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6359,
											"end": 6366,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6372,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6314,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 6314,
											"end": 6373,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6314,
											"end": 6373,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 6314,
											"end": 6373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6386,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6427,
											"end": 6431,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6433,
											"end": 6435,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6437,
											"end": 6439,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6447,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6449,
											"end": 6453,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6386,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6386,
											"end": 6454,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6386,
											"end": 6454,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6386,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5657,
											"end": 6462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5657,
											"end": 6462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5657,
											"end": 6462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5657,
											"end": 6462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 6462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 6462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 6462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 6462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 6462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 6462,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14841,
											"end": 15062,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 14841,
											"end": 15062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14841,
											"end": 15062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14841,
											"end": 15062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14841,
											"end": 15062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14841,
											"end": 15062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14841,
											"end": 15062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14841,
											"end": 15062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14841,
											"end": 15062,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16017,
											"end": 16237,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 16017,
											"end": 16237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16017,
											"end": 16237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16017,
											"end": 16237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16017,
											"end": 16237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16017,
											"end": 16237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16017,
											"end": 16237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16017,
											"end": 16237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16017,
											"end": 16237,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17019,
											"end": 17854,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 17019,
											"end": 17854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17259,
											"end": 17274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 17259,
											"end": 17261,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17259,
											"end": 17272,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17259,
											"end": 17272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17259,
											"end": 17272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 17259,
											"end": 17274,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17259,
											"end": 17274,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 17259,
											"end": 17274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17255,
											"end": 17847,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17255,
											"end": 17847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 17255,
											"end": 17847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17325,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17349,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17295,
											"end": 17349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17349,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 17350,
											"end": 17358,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17360,
											"end": 17364,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17369,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17378,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17380,
											"end": 17384,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 17295,
											"end": 17385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17709,
											"end": 17715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17758,
											"end": 17820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17758,
											"end": 17820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17758,
											"end": 17820,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17758,
											"end": 17820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17758,
											"end": 17820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17758,
											"end": 17820,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17758,
											"end": 17820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17758,
											"end": 17820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 17758,
											"end": 17820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17758,
											"end": 17820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 17758,
											"end": 17820,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17758,
											"end": 17820,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 17758,
											"end": 17820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17758,
											"end": 17820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17758,
											"end": 17820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17758,
											"end": 17820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17758,
											"end": 17820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17758,
											"end": 17820,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17758,
											"end": 17820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17758,
											"end": 17820,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 17291,
											"end": 17836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17479,
											"end": 17538,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 17479,
											"end": 17538,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17479,
											"end": 17538,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17467,
											"end": 17538,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17467,
											"end": 17538,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17467,
											"end": 17538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17467,
											"end": 17475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17467,
											"end": 17538,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17467,
											"end": 17538,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17467,
											"end": 17538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17467,
											"end": 17538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17463,
											"end": 17633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 17463,
											"end": 17633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17563,
											"end": 17613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17563,
											"end": 17613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17563,
											"end": 17613,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17563,
											"end": 17613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17563,
											"end": 17613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17563,
											"end": 17613,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17563,
											"end": 17613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17563,
											"end": 17613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 17563,
											"end": 17613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17563,
											"end": 17613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 17563,
											"end": 17613,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17563,
											"end": 17613,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 17563,
											"end": 17613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17563,
											"end": 17613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17563,
											"end": 17613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17563,
											"end": 17613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17563,
											"end": 17613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17563,
											"end": 17613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17563,
											"end": 17613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17563,
											"end": 17613,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17463,
											"end": 17633,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 17463,
											"end": 17633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17386,
											"end": 17648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17255,
											"end": 17847,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 17255,
											"end": 17847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17854,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17862,
											"end": 18060,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 17862,
											"end": 18060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17928,
											"end": 17944,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17957,
											"end": 17979,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17996,
											"end": 17997,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17982,
											"end": 17998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17957,
											"end": 17998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17957,
											"end": 17998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18020,
											"end": 18027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18015,
											"end": 18016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18009,
											"end": 18017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18017,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 18009,
											"end": 18017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 18009,
											"end": 18017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 18009,
											"end": 18017,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18009,
											"end": 18017,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 18009,
											"end": 18017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18017,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 18009,
											"end": 18017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18009,
											"end": 18017,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18009,
											"end": 18017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18047,
											"end": 18052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18040,
											"end": 18052,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18040,
											"end": 18052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18040,
											"end": 18052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17862,
											"end": 18060,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17862,
											"end": 18060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17862,
											"end": 18060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17862,
											"end": 18060,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16245,
											"end": 17011,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 16245,
											"end": 17011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 16460,
											"end": 16462,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16460,
											"end": 16473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 16460,
											"end": 16475,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16460,
											"end": 16475,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 16460,
											"end": 16475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16456,
											"end": 17004,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16456,
											"end": 17004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 16456,
											"end": 17004,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16526,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16545,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16496,
											"end": 16545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16545,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 16546,
											"end": 16554,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16560,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16562,
											"end": 16564,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16566,
											"end": 16572,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16574,
											"end": 16578,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 16496,
											"end": 16579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16866,
											"end": 16872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16915,
											"end": 16977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16915,
											"end": 16977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16915,
											"end": 16977,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16915,
											"end": 16977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16915,
											"end": 16977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16915,
											"end": 16977,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16915,
											"end": 16977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16915,
											"end": 16977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 16915,
											"end": 16977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16915,
											"end": 16977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 16915,
											"end": 16977,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16915,
											"end": 16977,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 16915,
											"end": 16977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16915,
											"end": 16977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16915,
											"end": 16977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16915,
											"end": 16977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16915,
											"end": 16977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16915,
											"end": 16977,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16915,
											"end": 16977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16915,
											"end": 16977,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 16492,
											"end": 16993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16641,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 16641,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16641,
											"end": 16695,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16629,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16629,
											"end": 16695,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16629,
											"end": 16695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16629,
											"end": 16637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16629,
											"end": 16695,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16629,
											"end": 16695,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16629,
											"end": 16695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16629,
											"end": 16695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16625,
											"end": 16790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 16625,
											"end": 16790,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16720,
											"end": 16770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16720,
											"end": 16770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16720,
											"end": 16770,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16720,
											"end": 16770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16720,
											"end": 16770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16720,
											"end": 16770,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16720,
											"end": 16770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16720,
											"end": 16770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 16720,
											"end": 16770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16720,
											"end": 16770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 16720,
											"end": 16770,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16720,
											"end": 16770,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 16720,
											"end": 16770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16720,
											"end": 16770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16720,
											"end": 16770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16720,
											"end": 16770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16720,
											"end": 16770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16720,
											"end": 16770,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16720,
											"end": 16770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16720,
											"end": 16770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16625,
											"end": 16790,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 16625,
											"end": 16790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16580,
											"end": 16805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16456,
											"end": 17004,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 16456,
											"end": 17004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16245,
											"end": 17011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16245,
											"end": 17011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16245,
											"end": 17011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16245,
											"end": 17011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16245,
											"end": 17011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16245,
											"end": 17011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16245,
											"end": 17011,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1221,
											"end": 1547,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1221,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1539,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1516,
											"end": 1523,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1516,
											"end": 1535,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1535,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1516,
											"end": 1535,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1539,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1539,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1547,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3324,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3737,
											"end": 3748,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3766,
											"end": 3769,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3802,
											"end": 3816,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3896,
											"end": 3897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3920,
											"end": 3926,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3918,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3914,
											"end": 3927,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4006,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4000,
											"end": 4003,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3996,
											"end": 4007,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3990,
											"end": 4008,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 3987,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3977,
											"end": 3988,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3970,
											"end": 4009,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3942,
											"end": 3944,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3939,
											"end": 3940,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3935,
											"end": 3945,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3945,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4035,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4118,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4114,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4103,
											"end": 4106,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4092,
											"end": 4119,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 4135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4182,
											"end": 4188,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4235,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4229,
											"end": 4236,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4224,
											"end": 4226,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4217,
											"end": 4222,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4213,
											"end": 4227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4209,
											"end": 4237,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4199,
											"end": 4237,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4199,
											"end": 4237,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4337,
											"end": 4340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 4398,
											"end": 4403,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 4484,
											"end": 4490,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4482,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4491,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 4545,
											"end": 4551,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4543,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4526,
											"end": 4531,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4522,
											"end": 4538,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 4599,
											"end": 4605,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4572,
											"end": 4575,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4568,
											"end": 4607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4341,
											"end": 4613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4732,
											"end": 4736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4772,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4768,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4755,
											"end": 4773,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4819,
											"end": 4828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4813,
											"end": 4817,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4809,
											"end": 4829,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4794,
											"end": 4803,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4807,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4783,
											"end": 4830,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 4920,
											"end": 4924,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4911,
											"end": 4917,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4925,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4938,
											"end": 5055,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 4938,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5047,
											"end": 5048,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5044,
											"end": 5045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5037,
											"end": 5049,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5061,
											"end": 5241,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 5061,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5109,
											"end": 5186,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5106,
											"end": 5107,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5099,
											"end": 5187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5206,
											"end": 5210,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 5203,
											"end": 5204,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5196,
											"end": 5211,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5234,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5227,
											"end": 5228,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5220,
											"end": 5235,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 5352,
											"end": 5356,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5322,
											"end": 5328,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5358,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5466,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5448,
											"end": 5458,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5445,
											"end": 5467,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5424,
											"end": 5442,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 5422,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5409,
											"end": 5443,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5468,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5511,
											"end": 5521,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5507,
											"end": 5509,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5500,
											"end": 5522,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5574,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5585,
											"end": 5615,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5585,
											"end": 5615,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 5652,
											"end": 5656,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5644,
											"end": 5650,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5746,
											"end": 5750,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5854,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5828,
											"end": 5834,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5825,
											"end": 5855,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5908,
											"end": 5912,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5900,
											"end": 5906,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5896,
											"end": 5913,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 5913,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 5913,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5968,
											"end": 5972,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5962,
											"end": 5966,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5986,
											"end": 6103,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 5986,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6095,
											"end": 6096,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6092,
											"end": 6093,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6085,
											"end": 6097,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6227,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 6320,
											"end": 6326,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6238,
											"end": 6328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6238,
											"end": 6328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6348,
											"end": 6353,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6377,
											"end": 6383,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6370,
											"end": 6375,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6363,
											"end": 6384,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6404,
											"end": 6409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6416,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6393,
											"end": 6416,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6393,
											"end": 6416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6464,
											"end": 6468,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6456,
											"end": 6462,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6452,
											"end": 6469,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6444,
											"end": 6450,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6440,
											"end": 6470,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6493,
											"end": 6496,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6485,
											"end": 6491,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6482,
											"end": 6497,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6627,
											"end": 6633,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6644,
											"end": 6650,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6642,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6636,
											"end": 6651,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6719,
											"end": 6722,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 6781,
											"end": 6784,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6769,
											"end": 6779,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6743,
											"end": 6746,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6736,
											"end": 6786,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6819,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6810,
											"end": 6813,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6820,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6674,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6665,
											"end": 6668,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 6675,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6654,
											"end": 6675,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6654,
											"end": 6675,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6614,
											"end": 6635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6228,
											"end": 6836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6228,
											"end": 6836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 6935,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6979,
											"end": 6982,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6972,
											"end": 6976,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6964,
											"end": 6970,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6960,
											"end": 6977,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6956,
											"end": 6983,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 6946,
											"end": 7068,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 7068,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 6946,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7104,
											"end": 7110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7091,
											"end": 7111,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 7219,
											"end": 7222,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7211,
											"end": 7217,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7204,
											"end": 7208,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7196,
											"end": 7202,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7192,
											"end": 7209,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7120,
											"end": 7223,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7120,
											"end": 7223,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6936,
											"end": 7229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7235,
											"end": 7352,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 7235,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7341,
											"end": 7342,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7334,
											"end": 7346,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7419,
											"end": 7423,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7501,
											"end": 7507,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7528,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 7591,
											"end": 7597,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7561,
											"end": 7598,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7561,
											"end": 7598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7653,
											"end": 7657,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7647,
											"end": 7651,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7643,
											"end": 7658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7635,
											"end": 7658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7635,
											"end": 7658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7755,
											"end": 7761,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7750,
											"end": 7753,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7745,
											"end": 7748,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7732,
											"end": 7762,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 7817,
											"end": 7818,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7808,
											"end": 7814,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7803,
											"end": 7806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7799,
											"end": 7815,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7792,
											"end": 7819,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7913,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 7990,
											"end": 7996,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7924,
											"end": 7998,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7924,
											"end": 7998,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8021,
											"end": 8027,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8014,
											"end": 8019,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8007,
											"end": 8028,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8059,
											"end": 8063,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8052,
											"end": 8057,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8048,
											"end": 8064,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8097,
											"end": 8100,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8088,
											"end": 8094,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8083,
											"end": 8086,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8079,
											"end": 8095,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8076,
											"end": 8101,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 8228,
											"end": 8234,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8223,
											"end": 8226,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8218,
											"end": 8221,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7914,
											"end": 8241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8315,
											"end": 8320,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8364,
											"end": 8367,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8357,
											"end": 8361,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8349,
											"end": 8355,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8345,
											"end": 8362,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8341,
											"end": 8368,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 8331,
											"end": 8453,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8453,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 8331,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8489,
											"end": 8495,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8476,
											"end": 8496,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 8588,
											"end": 8591,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8580,
											"end": 8586,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8573,
											"end": 8577,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8565,
											"end": 8571,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8561,
											"end": 8578,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8505,
											"end": 8592,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8505,
											"end": 8592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8321,
											"end": 8598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8758,
											"end": 8764,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8766,
											"end": 8772,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8774,
											"end": 8780,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8782,
											"end": 8788,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8796,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8839,
											"end": 8842,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 8827,
											"end": 8836,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8818,
											"end": 8825,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8814,
											"end": 8837,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8810,
											"end": 8843,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 8967,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 9036,
											"end": 9043,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9027,
											"end": 9033,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9016,
											"end": 9025,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9034,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9044,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8937,
											"end": 9054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9093,
											"end": 9095,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 9164,
											"end": 9171,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9155,
											"end": 9161,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9153,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 9140,
											"end": 9162,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9172,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9064,
											"end": 9182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9249,
											"end": 9251,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9238,
											"end": 9247,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9221,
											"end": 9253,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 9280,
											"end": 9298,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9272,
											"end": 9278,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9269,
											"end": 9299,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 9477,
											"end": 9484,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9468,
											"end": 9474,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9457,
											"end": 9466,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 9453,
											"end": 9475,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9397,
											"end": 9485,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9397,
											"end": 9485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9192,
											"end": 9495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9562,
											"end": 9564,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9551,
											"end": 9560,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9547,
											"end": 9565,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9534,
											"end": 9566,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9611,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9585,
											"end": 9591,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9582,
											"end": 9612,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 9790,
											"end": 9797,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9781,
											"end": 9787,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9770,
											"end": 9779,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 9766,
											"end": 9788,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9710,
											"end": 9798,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9710,
											"end": 9798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9505,
											"end": 9808,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9875,
											"end": 9878,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 9864,
											"end": 9873,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9860,
											"end": 9879,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9847,
											"end": 9880,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 9907,
											"end": 9925,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9899,
											"end": 9905,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9896,
											"end": 9926,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 10088,
											"end": 10095,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 10079,
											"end": 10085,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10068,
											"end": 10077,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10024,
											"end": 10096,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10024,
											"end": 10096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9818,
											"end": 10106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10196,
											"end": 10200,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10286,
											"end": 10304,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10278,
											"end": 10284,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10305,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10358,
											"end": 10362,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10350,
											"end": 10356,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10346,
											"end": 10363,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10338,
											"end": 10363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10338,
											"end": 10363,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10418,
											"end": 10422,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10412,
											"end": 10416,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10408,
											"end": 10423,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10400,
											"end": 10423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10400,
											"end": 10423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10549,
											"end": 10554,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 10647,
											"end": 10653,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10655,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10675,
											"end": 10680,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10704,
											"end": 10710,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10697,
											"end": 10702,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10690,
											"end": 10711,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10738,
											"end": 10742,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10731,
											"end": 10736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10727,
											"end": 10743,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10720,
											"end": 10743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10720,
											"end": 10743,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10791,
											"end": 10795,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10783,
											"end": 10789,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10779,
											"end": 10796,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10771,
											"end": 10777,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10767,
											"end": 10797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10820,
											"end": 10823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10812,
											"end": 10818,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10809,
											"end": 10824,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10954,
											"end": 10960,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10971,
											"end": 10977,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10966,
											"end": 10969,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 10978,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11046,
											"end": 11049,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 11108,
											"end": 11111,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 11096,
											"end": 11106,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11073,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11063,
											"end": 11113,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11142,
											"end": 11146,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11137,
											"end": 11140,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11133,
											"end": 11147,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11126,
											"end": 11147,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11126,
											"end": 11147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11013,
											"end": 11157,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10997,
											"end": 11001,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10992,
											"end": 10995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10988,
											"end": 11002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10941,
											"end": 10962,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10555,
											"end": 11163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10555,
											"end": 11163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11257,
											"end": 11262,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11306,
											"end": 11309,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11299,
											"end": 11303,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11291,
											"end": 11297,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11287,
											"end": 11304,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11310,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 11273,
											"end": 11395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 11273,
											"end": 11395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11273,
											"end": 11395,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 11273,
											"end": 11395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11431,
											"end": 11437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11418,
											"end": 11438,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 11546,
											"end": 11549,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11538,
											"end": 11544,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11531,
											"end": 11535,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11523,
											"end": 11529,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11519,
											"end": 11536,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11447,
											"end": 11550,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11447,
											"end": 11550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11263,
											"end": 11556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11680,
											"end": 11686,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11688,
											"end": 11694,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11737,
											"end": 11739,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11725,
											"end": 11734,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11716,
											"end": 11723,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11712,
											"end": 11735,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11708,
											"end": 11740,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11891,
											"end": 11892,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11880,
											"end": 11889,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11876,
											"end": 11893,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11863,
											"end": 11894,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 11921,
											"end": 11939,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11913,
											"end": 11919,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11910,
											"end": 11940,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 12118,
											"end": 12125,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12109,
											"end": 12115,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12098,
											"end": 12107,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12094,
											"end": 12116,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12038,
											"end": 12126,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12038,
											"end": 12126,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11834,
											"end": 12136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12203,
											"end": 12205,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12192,
											"end": 12201,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12188,
											"end": 12206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12175,
											"end": 12207,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 12234,
											"end": 12252,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12226,
											"end": 12232,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12223,
											"end": 12253,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 12431,
											"end": 12438,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12422,
											"end": 12428,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12411,
											"end": 12420,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12407,
											"end": 12429,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12351,
											"end": 12439,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12351,
											"end": 12439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12146,
											"end": 12449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12529,
											"end": 12535,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12563,
											"end": 12568,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12557,
											"end": 12569,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12547,
											"end": 12569,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12547,
											"end": 12569,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12681,
											"end": 12692,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12715,
											"end": 12721,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12710,
											"end": 12713,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12703,
											"end": 12722,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12755,
											"end": 12759,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12753,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12746,
											"end": 12760,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 12760,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 12760,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12862,
											"end": 12865,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 12865,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 12865,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12892,
											"end": 12896,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12887,
											"end": 12890,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12883,
											"end": 12897,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12875,
											"end": 12897,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12875,
											"end": 12897,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 13005,
											"end": 13010,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12982,
											"end": 12985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12975,
											"end": 13012,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13093,
											"end": 13103,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 13156,
											"end": 13159,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13148,
											"end": 13154,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13192,
											"end": 13196,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13187,
											"end": 13190,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13169,
											"end": 13197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13169,
											"end": 13197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13279,
											"end": 13283,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13311,
											"end": 13315,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13306,
											"end": 13309,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13302,
											"end": 13316,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13294,
											"end": 13316,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13294,
											"end": 13316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13477,
											"end": 13480,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 13554,
											"end": 13559,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 13655,
											"end": 13661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13650,
											"end": 13653,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13569,
											"end": 13662,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13569,
											"end": 13662,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 13736,
											"end": 13741,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13765,
											"end": 13772,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13796,
											"end": 13797,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13806,
											"end": 13812,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13803,
											"end": 13804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13800,
											"end": 13813,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13882,
											"end": 13888,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13876,
											"end": 13889,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 13968,
											"end": 13971,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 13953,
											"end": 13966,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13902,
											"end": 13972,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 13902,
											"end": 13972,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 14048,
											"end": 14054,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13985,
											"end": 14055,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13985,
											"end": 14055,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13841,
											"end": 14065,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13828,
											"end": 13829,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13825,
											"end": 13826,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13821,
											"end": 13830,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13816,
											"end": 13830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13816,
											"end": 13830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13785,
											"end": 13799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14081,
											"end": 14084,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14074,
											"end": 14084,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14074,
											"end": 14084,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13482,
											"end": 14090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13482,
											"end": 14090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13482,
											"end": 14090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14239,
											"end": 14243,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14277,
											"end": 14279,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14266,
											"end": 14275,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14262,
											"end": 14280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14254,
											"end": 14280,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14254,
											"end": 14280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14326,
											"end": 14335,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14320,
											"end": 14324,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14316,
											"end": 14336,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14312,
											"end": 14313,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14301,
											"end": 14310,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14297,
											"end": 14314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14290,
											"end": 14337,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 14457,
											"end": 14461,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14448,
											"end": 14454,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14346,
											"end": 14462,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14346,
											"end": 14462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14475,
											"end": 14591,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 14475,
											"end": 14591,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 14560,
											"end": 14565,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14538,
											"end": 14543,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14535,
											"end": 14567,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14525,
											"end": 14585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 14525,
											"end": 14585,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14581,
											"end": 14582,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14578,
											"end": 14579,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14571,
											"end": 14583,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14525,
											"end": 14585,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 14525,
											"end": 14585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14475,
											"end": 14591,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14475,
											"end": 14591,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14640,
											"end": 14645,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14678,
											"end": 14684,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14665,
											"end": 14685,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 14656,
											"end": 14685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14656,
											"end": 14685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 14718,
											"end": 14723,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14801,
											"end": 14807,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14809,
											"end": 14815,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14858,
											"end": 14860,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14846,
											"end": 14855,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14837,
											"end": 14844,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14833,
											"end": 14856,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14829,
											"end": 14861,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14984,
											"end": 14985,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 15054,
											"end": 15061,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15045,
											"end": 15051,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15034,
											"end": 15043,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15030,
											"end": 15052,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14999,
											"end": 15062,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14999,
											"end": 15062,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14955,
											"end": 15072,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15111,
											"end": 15113,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 15179,
											"end": 15186,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15170,
											"end": 15176,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15159,
											"end": 15168,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15155,
											"end": 15177,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15127,
											"end": 15187,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15127,
											"end": 15187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15082,
											"end": 15197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15278,
											"end": 15284,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15286,
											"end": 15292,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15335,
											"end": 15337,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15323,
											"end": 15332,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15314,
											"end": 15321,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15310,
											"end": 15333,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15306,
											"end": 15338,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15461,
											"end": 15462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 15531,
											"end": 15538,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15522,
											"end": 15528,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15511,
											"end": 15520,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15507,
											"end": 15529,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "tag",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15476,
											"end": 15539,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15476,
											"end": 15539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15432,
											"end": 15549,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15588,
											"end": 15590,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 15659,
											"end": 15666,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15650,
											"end": 15656,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15639,
											"end": 15648,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15635,
											"end": 15657,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15604,
											"end": 15667,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15604,
											"end": 15667,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15559,
											"end": 15677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15794,
											"end": 15800,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15802,
											"end": 15808,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15810,
											"end": 15816,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15818,
											"end": 15824,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15826,
											"end": 15832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15875,
											"end": 15878,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 15863,
											"end": 15872,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15854,
											"end": 15861,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 15850,
											"end": 15873,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15846,
											"end": 15879,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16002,
											"end": 16003,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 16072,
											"end": 16079,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 16063,
											"end": 16069,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16052,
											"end": 16061,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 16048,
											"end": 16070,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16017,
											"end": 16080,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 16017,
											"end": 16080,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15973,
											"end": 16090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16129,
											"end": 16131,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 16200,
											"end": 16207,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 16191,
											"end": 16197,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16180,
											"end": 16189,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 16176,
											"end": 16198,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16145,
											"end": 16208,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 16145,
											"end": 16208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16100,
											"end": 16218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16257,
											"end": 16259,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 16328,
											"end": 16335,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 16319,
											"end": 16325,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16308,
											"end": 16317,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 16304,
											"end": 16326,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16273,
											"end": 16336,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 16273,
											"end": 16336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16228,
											"end": 16346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16385,
											"end": 16387,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 16456,
											"end": 16463,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 16447,
											"end": 16453,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16436,
											"end": 16445,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 16432,
											"end": 16454,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16401,
											"end": 16464,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16401,
											"end": 16464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16356,
											"end": 16474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16541,
											"end": 16544,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 16530,
											"end": 16539,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16526,
											"end": 16545,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16513,
											"end": 16546,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 16573,
											"end": 16591,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16565,
											"end": 16571,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16562,
											"end": 16592,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "tag",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 16754,
											"end": 16761,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 16745,
											"end": 16751,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16734,
											"end": 16743,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 16730,
											"end": 16752,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16690,
											"end": 16762,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16690,
											"end": 16762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16484,
											"end": 16772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16785,
											"end": 17015,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 16785,
											"end": 17015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16925,
											"end": 16959,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 16921,
											"end": 16922,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16913,
											"end": 16919,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16909,
											"end": 16923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16902,
											"end": 16960,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16994,
											"end": 17007,
											"name": "PUSH",
											"source": 9,
											"value": "65726F2061646472657373000000000000000000000000000000000000000000"
										},
										{
											"begin": 16989,
											"end": 16991,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16981,
											"end": 16987,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16977,
											"end": 16992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 17008,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16785,
											"end": 17015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16785,
											"end": 17015,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17021,
											"end": 17387,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 17021,
											"end": 17387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17163,
											"end": 17166,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17184,
											"end": 17251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 17248,
											"end": 17250,
											"name": "PUSH",
											"source": 9,
											"value": "2B"
										},
										{
											"begin": 17243,
											"end": 17246,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17184,
											"end": 17251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 17184,
											"end": 17251,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17184,
											"end": 17251,
											"name": "tag",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 17184,
											"end": 17251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17177,
											"end": 17251,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17177,
											"end": 17251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17260,
											"end": 17353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 17349,
											"end": 17352,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17260,
											"end": 17353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 17260,
											"end": 17353,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17260,
											"end": 17353,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 17260,
											"end": 17353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17378,
											"end": 17380,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17373,
											"end": 17376,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17369,
											"end": 17381,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17362,
											"end": 17381,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17362,
											"end": 17381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17021,
											"end": 17387,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17021,
											"end": 17387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17021,
											"end": 17387,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17021,
											"end": 17387,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17393,
											"end": 17812,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 17393,
											"end": 17812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17559,
											"end": 17563,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17597,
											"end": 17599,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17586,
											"end": 17595,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17582,
											"end": 17600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17574,
											"end": 17600,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17574,
											"end": 17600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17646,
											"end": 17655,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17640,
											"end": 17644,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17636,
											"end": 17656,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17632,
											"end": 17633,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17621,
											"end": 17630,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17617,
											"end": 17634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17610,
											"end": 17657,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17674,
											"end": 17805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 17800,
											"end": 17804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17674,
											"end": 17805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 17674,
											"end": 17805,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17674,
											"end": 17805,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 17674,
											"end": 17805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17666,
											"end": 17805,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17666,
											"end": 17805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17393,
											"end": 17812,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17393,
											"end": 17812,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17393,
											"end": 17812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17393,
											"end": 17812,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17818,
											"end": 17998,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 17818,
											"end": 17998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17866,
											"end": 17943,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17863,
											"end": 17864,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17856,
											"end": 17944,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17963,
											"end": 17967,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 17960,
											"end": 17961,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 17953,
											"end": 17968,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17987,
											"end": 17991,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 17984,
											"end": 17985,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17977,
											"end": 17992,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 18004,
											"end": 18324,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 18004,
											"end": 18324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18048,
											"end": 18054,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18085,
											"end": 18086,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 18079,
											"end": 18083,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18075,
											"end": 18087,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 18065,
											"end": 18087,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18065,
											"end": 18087,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18132,
											"end": 18133,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 18126,
											"end": 18130,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18122,
											"end": 18134,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18153,
											"end": 18171,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18143,
											"end": 18224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 18143,
											"end": 18224,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18209,
											"end": 18213,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 18201,
											"end": 18207,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18197,
											"end": 18214,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18187,
											"end": 18214,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18187,
											"end": 18214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18143,
											"end": 18224,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 18143,
											"end": 18224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18271,
											"end": 18273,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18263,
											"end": 18269,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18260,
											"end": 18274,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 18240,
											"end": 18258,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18237,
											"end": 18275,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 18234,
											"end": 18318,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18234,
											"end": 18318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 18234,
											"end": 18318,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18290,
											"end": 18308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 18290,
											"end": 18308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 18290,
											"end": 18308,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18290,
											"end": 18308,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 18290,
											"end": 18308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18234,
											"end": 18318,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 18234,
											"end": 18318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18055,
											"end": 18324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18004,
											"end": 18324,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18004,
											"end": 18324,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18004,
											"end": 18324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18004,
											"end": 18324,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18330,
											"end": 18567,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 18330,
											"end": 18567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18470,
											"end": 18504,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 18466,
											"end": 18467,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18458,
											"end": 18464,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18454,
											"end": 18468,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18447,
											"end": 18505,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18539,
											"end": 18559,
											"name": "PUSH",
											"source": 9,
											"value": "6F776E6572206E6F7220617070726F7665640000000000000000000000000000"
										},
										{
											"begin": 18534,
											"end": 18536,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18526,
											"end": 18532,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18522,
											"end": 18537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18515,
											"end": 18560,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18330,
											"end": 18567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18330,
											"end": 18567,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18573,
											"end": 18939,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 18573,
											"end": 18939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18715,
											"end": 18718,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18736,
											"end": 18803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 18800,
											"end": 18802,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 18795,
											"end": 18798,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18736,
											"end": 18803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 18736,
											"end": 18803,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18736,
											"end": 18803,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 18736,
											"end": 18803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18729,
											"end": 18803,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18729,
											"end": 18803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18812,
											"end": 18905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 18901,
											"end": 18904,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18812,
											"end": 18905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 18812,
											"end": 18905,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18812,
											"end": 18905,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 18812,
											"end": 18905,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18930,
											"end": 18932,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18925,
											"end": 18928,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18921,
											"end": 18933,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18914,
											"end": 18933,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18914,
											"end": 18933,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18573,
											"end": 18939,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18573,
											"end": 18939,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18573,
											"end": 18939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18573,
											"end": 18939,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18945,
											"end": 19364,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 18945,
											"end": 19364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19111,
											"end": 19115,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19149,
											"end": 19151,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19138,
											"end": 19147,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19134,
											"end": 19152,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19126,
											"end": 19152,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19126,
											"end": 19152,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19198,
											"end": 19207,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19192,
											"end": 19196,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19188,
											"end": 19208,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19184,
											"end": 19185,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19173,
											"end": 19182,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19169,
											"end": 19186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19162,
											"end": 19209,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19226,
											"end": 19357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 19352,
											"end": 19356,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19226,
											"end": 19357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 19226,
											"end": 19357,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19226,
											"end": 19357,
											"name": "tag",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 19226,
											"end": 19357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19218,
											"end": 19357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19218,
											"end": 19357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18945,
											"end": 19364,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18945,
											"end": 19364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18945,
											"end": 19364,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18945,
											"end": 19364,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19370,
											"end": 19598,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 19370,
											"end": 19598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19510,
											"end": 19544,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 19506,
											"end": 19507,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19498,
											"end": 19504,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19494,
											"end": 19508,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19487,
											"end": 19545,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19579,
											"end": 19590,
											"name": "PUSH",
											"source": 9,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19574,
											"end": 19576,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19566,
											"end": 19572,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19562,
											"end": 19577,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19555,
											"end": 19591,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19370,
											"end": 19598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19370,
											"end": 19598,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19604,
											"end": 19970,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 19604,
											"end": 19970,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19746,
											"end": 19749,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19767,
											"end": 19834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 19831,
											"end": 19833,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 19826,
											"end": 19829,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19767,
											"end": 19834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 19767,
											"end": 19834,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19767,
											"end": 19834,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 19767,
											"end": 19834,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19760,
											"end": 19834,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19760,
											"end": 19834,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19843,
											"end": 19936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 19932,
											"end": 19935,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19843,
											"end": 19936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 19843,
											"end": 19936,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19843,
											"end": 19936,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 19843,
											"end": 19936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19961,
											"end": 19963,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19956,
											"end": 19959,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19952,
											"end": 19964,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19945,
											"end": 19964,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19945,
											"end": 19964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19604,
											"end": 19970,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19604,
											"end": 19970,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19604,
											"end": 19970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19604,
											"end": 19970,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19976,
											"end": 20395,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 19976,
											"end": 20395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20142,
											"end": 20146,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20180,
											"end": 20182,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20169,
											"end": 20178,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20165,
											"end": 20183,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20157,
											"end": 20183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20157,
											"end": 20183,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20229,
											"end": 20238,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20223,
											"end": 20227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20219,
											"end": 20239,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20215,
											"end": 20216,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20204,
											"end": 20213,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20200,
											"end": 20217,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20193,
											"end": 20240,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20257,
											"end": 20388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 20383,
											"end": 20387,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20257,
											"end": 20388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 20257,
											"end": 20388,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20257,
											"end": 20388,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 20257,
											"end": 20388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20249,
											"end": 20388,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20249,
											"end": 20388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19976,
											"end": 20395,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19976,
											"end": 20395,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19976,
											"end": 20395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19976,
											"end": 20395,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20401,
											"end": 20581,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 20401,
											"end": 20581,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20449,
											"end": 20526,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20446,
											"end": 20447,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20439,
											"end": 20527,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20546,
											"end": 20550,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 20543,
											"end": 20544,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 20536,
											"end": 20551,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20570,
											"end": 20574,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 20567,
											"end": 20568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20560,
											"end": 20575,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 20587,
											"end": 20767,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 20587,
											"end": 20767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20635,
											"end": 20712,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20632,
											"end": 20633,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20625,
											"end": 20713,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20732,
											"end": 20736,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 20729,
											"end": 20730,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 20722,
											"end": 20737,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20756,
											"end": 20760,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 20753,
											"end": 20754,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20746,
											"end": 20761,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20812,
											"end": 20815,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20835,
											"end": 20859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 20853,
											"end": 20858,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20835,
											"end": 20859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 20835,
											"end": 20859,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20835,
											"end": 20859,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 20835,
											"end": 20859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20826,
											"end": 20859,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20826,
											"end": 20859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20881,
											"end": 20947,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20874,
											"end": 20879,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20871,
											"end": 20948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 20868,
											"end": 20971,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 20868,
											"end": 20971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 20868,
											"end": 20971,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20951,
											"end": 20969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 20951,
											"end": 20969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 20951,
											"end": 20969,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20951,
											"end": 20969,
											"name": "tag",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 20951,
											"end": 20969,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20868,
											"end": 20971,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 20868,
											"end": 20971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20998,
											"end": 20999,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 20991,
											"end": 20996,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20987,
											"end": 21000,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20980,
											"end": 21000,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20980,
											"end": 21000,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21012,
											"end": 21240,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 21012,
											"end": 21240,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21152,
											"end": 21186,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 21148,
											"end": 21149,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21140,
											"end": 21146,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21136,
											"end": 21150,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21129,
											"end": 21187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21221,
											"end": 21232,
											"name": "PUSH",
											"source": 9,
											"value": "20617070726F7665640000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21216,
											"end": 21218,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21208,
											"end": 21214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21204,
											"end": 21219,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21197,
											"end": 21233,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21012,
											"end": 21240,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21012,
											"end": 21240,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21246,
											"end": 21612,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 21246,
											"end": 21612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21388,
											"end": 21391,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21409,
											"end": 21476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 21473,
											"end": 21475,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 21468,
											"end": 21471,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21409,
											"end": 21476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 21409,
											"end": 21476,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21409,
											"end": 21476,
											"name": "tag",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 21409,
											"end": 21476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21402,
											"end": 21476,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21402,
											"end": 21476,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21485,
											"end": 21578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 21574,
											"end": 21577,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21485,
											"end": 21578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 21485,
											"end": 21578,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21485,
											"end": 21578,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 21485,
											"end": 21578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21603,
											"end": 21605,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 21598,
											"end": 21601,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21594,
											"end": 21606,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21587,
											"end": 21606,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21587,
											"end": 21606,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21246,
											"end": 21612,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21246,
											"end": 21612,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21246,
											"end": 21612,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21246,
											"end": 21612,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21618,
											"end": 22037,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 21618,
											"end": 22037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21784,
											"end": 21788,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21822,
											"end": 21824,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21811,
											"end": 21820,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21807,
											"end": 21825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21799,
											"end": 21825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21799,
											"end": 21825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21871,
											"end": 21880,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21865,
											"end": 21869,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21861,
											"end": 21881,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21857,
											"end": 21858,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21846,
											"end": 21855,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21842,
											"end": 21859,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21835,
											"end": 21882,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21899,
											"end": 22030,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 22025,
											"end": 22029,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21899,
											"end": 22030,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 21899,
											"end": 22030,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21899,
											"end": 22030,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 21899,
											"end": 22030,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21891,
											"end": 22030,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21891,
											"end": 22030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21618,
											"end": 22037,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21618,
											"end": 22037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21618,
											"end": 22037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21618,
											"end": 22037,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22043,
											"end": 22270,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 22043,
											"end": 22270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22183,
											"end": 22217,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 22179,
											"end": 22180,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22171,
											"end": 22177,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22167,
											"end": 22181,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22160,
											"end": 22218,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22252,
											"end": 22262,
											"name": "PUSH",
											"source": 9,
											"value": "6D69736D61746368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22247,
											"end": 22249,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22239,
											"end": 22245,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22235,
											"end": 22250,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22228,
											"end": 22263,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22043,
											"end": 22270,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22043,
											"end": 22270,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22276,
											"end": 22642,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 22276,
											"end": 22642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22418,
											"end": 22421,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22439,
											"end": 22506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 22503,
											"end": 22505,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 22498,
											"end": 22501,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22439,
											"end": 22506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 22439,
											"end": 22506,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22439,
											"end": 22506,
											"name": "tag",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 22439,
											"end": 22506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22432,
											"end": 22506,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22432,
											"end": 22506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22515,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 22604,
											"end": 22607,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22515,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 22515,
											"end": 22608,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22515,
											"end": 22608,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 22515,
											"end": 22608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22633,
											"end": 22635,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22628,
											"end": 22631,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22624,
											"end": 22636,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22617,
											"end": 22636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22617,
											"end": 22636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22276,
											"end": 22642,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22276,
											"end": 22642,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22276,
											"end": 22642,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22276,
											"end": 22642,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22648,
											"end": 23067,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 22648,
											"end": 23067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22814,
											"end": 22818,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22852,
											"end": 22854,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22841,
											"end": 22850,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22837,
											"end": 22855,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22829,
											"end": 22855,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22829,
											"end": 22855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22901,
											"end": 22910,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22895,
											"end": 22899,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22891,
											"end": 22911,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22887,
											"end": 22888,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22876,
											"end": 22885,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22872,
											"end": 22889,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22865,
											"end": 22912,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22929,
											"end": 23060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 23055,
											"end": 23059,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22929,
											"end": 23060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 22929,
											"end": 23060,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22929,
											"end": 23060,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 22929,
											"end": 23060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22921,
											"end": 23060,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22921,
											"end": 23060,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22648,
											"end": 23067,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22648,
											"end": 23067,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22648,
											"end": 23067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22648,
											"end": 23067,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23073,
											"end": 23297,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 23073,
											"end": 23297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23213,
											"end": 23247,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 23209,
											"end": 23210,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23201,
											"end": 23207,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23197,
											"end": 23211,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23190,
											"end": 23248,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23282,
											"end": 23289,
											"name": "PUSH",
											"source": 9,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23277,
											"end": 23279,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23269,
											"end": 23275,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23265,
											"end": 23280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23258,
											"end": 23290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23073,
											"end": 23297,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23073,
											"end": 23297,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23303,
											"end": 23669,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 23303,
											"end": 23669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23445,
											"end": 23448,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23466,
											"end": 23533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 23530,
											"end": 23532,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 23525,
											"end": 23528,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23466,
											"end": 23533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 23466,
											"end": 23533,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23466,
											"end": 23533,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 23466,
											"end": 23533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23459,
											"end": 23533,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23459,
											"end": 23533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23542,
											"end": 23635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 23631,
											"end": 23634,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23542,
											"end": 23635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 23542,
											"end": 23635,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23542,
											"end": 23635,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 23542,
											"end": 23635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23660,
											"end": 23662,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23655,
											"end": 23658,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23651,
											"end": 23663,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23644,
											"end": 23663,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23644,
											"end": 23663,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23303,
											"end": 23669,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23303,
											"end": 23669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23303,
											"end": 23669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23303,
											"end": 23669,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23675,
											"end": 24094,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 23675,
											"end": 24094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23841,
											"end": 23845,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23879,
											"end": 23881,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23868,
											"end": 23877,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23864,
											"end": 23882,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23856,
											"end": 23882,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23856,
											"end": 23882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23928,
											"end": 23937,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23922,
											"end": 23926,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23918,
											"end": 23938,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 23914,
											"end": 23915,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23903,
											"end": 23912,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23899,
											"end": 23916,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23892,
											"end": 23939,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23956,
											"end": 24087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 24082,
											"end": 24086,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23956,
											"end": 24087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 23956,
											"end": 24087,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23956,
											"end": 24087,
											"name": "tag",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 23956,
											"end": 24087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23948,
											"end": 24087,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23948,
											"end": 24087,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23675,
											"end": 24094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23675,
											"end": 24094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23675,
											"end": 24094,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23675,
											"end": 24094,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24100,
											"end": 24329,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 24100,
											"end": 24329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24240,
											"end": 24274,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 24236,
											"end": 24237,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24228,
											"end": 24234,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24224,
											"end": 24238,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24217,
											"end": 24275,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24309,
											"end": 24321,
											"name": "PUSH",
											"source": 9,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 24304,
											"end": 24306,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24296,
											"end": 24302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24292,
											"end": 24307,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24285,
											"end": 24322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24100,
											"end": 24329,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24100,
											"end": 24329,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24335,
											"end": 24701,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 24335,
											"end": 24701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24477,
											"end": 24480,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24498,
											"end": 24565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 24562,
											"end": 24564,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 24557,
											"end": 24560,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24498,
											"end": 24565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 24498,
											"end": 24565,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24498,
											"end": 24565,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 24498,
											"end": 24565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24491,
											"end": 24565,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24491,
											"end": 24565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24574,
											"end": 24667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 24663,
											"end": 24666,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24574,
											"end": 24667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 24574,
											"end": 24667,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24574,
											"end": 24667,
											"name": "tag",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 24574,
											"end": 24667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24692,
											"end": 24694,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 24687,
											"end": 24690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24683,
											"end": 24695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24676,
											"end": 24695,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24676,
											"end": 24695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24335,
											"end": 24701,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24335,
											"end": 24701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24335,
											"end": 24701,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24335,
											"end": 24701,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24707,
											"end": 25126,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 24707,
											"end": 25126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24873,
											"end": 24877,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24911,
											"end": 24913,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24900,
											"end": 24909,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24896,
											"end": 24914,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24888,
											"end": 24914,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24888,
											"end": 24914,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24960,
											"end": 24969,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24954,
											"end": 24958,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24950,
											"end": 24970,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 24946,
											"end": 24947,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24935,
											"end": 24944,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24931,
											"end": 24948,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24924,
											"end": 24971,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24988,
											"end": 25119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 25114,
											"end": 25118,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24988,
											"end": 25119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 24988,
											"end": 25119,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24988,
											"end": 25119,
											"name": "tag",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 24988,
											"end": 25119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24980,
											"end": 25119,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24980,
											"end": 25119,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24707,
											"end": 25126,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24707,
											"end": 25126,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24707,
											"end": 25126,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24707,
											"end": 25126,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25132,
											"end": 25437,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 25132,
											"end": 25437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25172,
											"end": 25175,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25191,
											"end": 25211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 25209,
											"end": 25210,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25191,
											"end": 25211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 25191,
											"end": 25211,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25191,
											"end": 25211,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 25191,
											"end": 25211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25186,
											"end": 25211,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25186,
											"end": 25211,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25225,
											"end": 25245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 25243,
											"end": 25244,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25225,
											"end": 25245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 25225,
											"end": 25245,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25225,
											"end": 25245,
											"name": "tag",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 25225,
											"end": 25245,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25220,
											"end": 25245,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25220,
											"end": 25245,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25379,
											"end": 25380,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25311,
											"end": 25377,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25307,
											"end": 25381,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 25304,
											"end": 25305,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25301,
											"end": 25382,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 25298,
											"end": 25405,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 25298,
											"end": 25405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 25298,
											"end": 25405,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 25385,
											"end": 25403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 25385,
											"end": 25403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 25385,
											"end": 25403,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25385,
											"end": 25403,
											"name": "tag",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 25385,
											"end": 25403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25298,
											"end": 25405,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 25298,
											"end": 25405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25429,
											"end": 25430,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25426,
											"end": 25427,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25422,
											"end": 25431,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25415,
											"end": 25431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25415,
											"end": 25431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25132,
											"end": 25437,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25132,
											"end": 25437,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25132,
											"end": 25437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25132,
											"end": 25437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25132,
											"end": 25437,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25664,
											"end": 25668,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25702,
											"end": 25704,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 25691,
											"end": 25700,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25687,
											"end": 25705,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25679,
											"end": 25705,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25679,
											"end": 25705,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25751,
											"end": 25760,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25745,
											"end": 25749,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25741,
											"end": 25761,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 25737,
											"end": 25738,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25726,
											"end": 25735,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25722,
											"end": 25739,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25715,
											"end": 25762,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25779,
											"end": 25887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 25882,
											"end": 25886,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25873,
											"end": 25879,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 25779,
											"end": 25887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 25779,
											"end": 25887,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25779,
											"end": 25887,
											"name": "tag",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 25779,
											"end": 25887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25771,
											"end": 25887,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25771,
											"end": 25887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25934,
											"end": 25943,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25928,
											"end": 25932,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25924,
											"end": 25944,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 25919,
											"end": 25921,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25908,
											"end": 25917,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25904,
											"end": 25922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25897,
											"end": 25945,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25962,
											"end": 26070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 26065,
											"end": 26069,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26056,
											"end": 26062,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 25962,
											"end": 26070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 25962,
											"end": 26070,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25962,
											"end": 26070,
											"name": "tag",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 25962,
											"end": 26070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25954,
											"end": 26070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25954,
											"end": 26070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25443,
											"end": 26077,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26083,
											"end": 26311,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 26083,
											"end": 26311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26223,
											"end": 26257,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 26219,
											"end": 26220,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26211,
											"end": 26217,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26207,
											"end": 26221,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26200,
											"end": 26258,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26292,
											"end": 26303,
											"name": "PUSH",
											"source": 9,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26287,
											"end": 26289,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 26279,
											"end": 26285,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26275,
											"end": 26290,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26268,
											"end": 26304,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26083,
											"end": 26311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26083,
											"end": 26311,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26317,
											"end": 26683,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 26317,
											"end": 26683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26459,
											"end": 26462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26480,
											"end": 26547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 26544,
											"end": 26546,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 26539,
											"end": 26542,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26480,
											"end": 26547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 26480,
											"end": 26547,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 26480,
											"end": 26547,
											"name": "tag",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 26480,
											"end": 26547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26473,
											"end": 26547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26473,
											"end": 26547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26556,
											"end": 26649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 26645,
											"end": 26648,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26556,
											"end": 26649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 26556,
											"end": 26649,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 26556,
											"end": 26649,
											"name": "tag",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 26556,
											"end": 26649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26674,
											"end": 26676,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 26669,
											"end": 26672,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26665,
											"end": 26677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26658,
											"end": 26677,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26658,
											"end": 26677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26317,
											"end": 26683,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26317,
											"end": 26683,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26317,
											"end": 26683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26317,
											"end": 26683,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26689,
											"end": 27108,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 26689,
											"end": 27108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26855,
											"end": 26859,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26893,
											"end": 26895,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 26882,
											"end": 26891,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26878,
											"end": 26896,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26870,
											"end": 26896,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26870,
											"end": 26896,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26942,
											"end": 26951,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26936,
											"end": 26940,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26932,
											"end": 26952,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 26928,
											"end": 26929,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26917,
											"end": 26926,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26913,
											"end": 26930,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26906,
											"end": 26953,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26970,
											"end": 27101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 27096,
											"end": 27100,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26970,
											"end": 27101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 26970,
											"end": 27101,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 26970,
											"end": 27101,
											"name": "tag",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 26970,
											"end": 27101,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26962,
											"end": 27101,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26962,
											"end": 27101,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26689,
											"end": 27108,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26689,
											"end": 27108,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26689,
											"end": 27108,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26689,
											"end": 27108,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27235,
											"end": 27239,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27273,
											"end": 27275,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 27262,
											"end": 27271,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27258,
											"end": 27276,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27250,
											"end": 27276,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27250,
											"end": 27276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27286,
											"end": 27357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 27354,
											"end": 27355,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27343,
											"end": 27352,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27339,
											"end": 27356,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27330,
											"end": 27336,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 27286,
											"end": 27357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 27286,
											"end": 27357,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27286,
											"end": 27357,
											"name": "tag",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 27286,
											"end": 27357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27367,
											"end": 27439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 27435,
											"end": 27437,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 27424,
											"end": 27433,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27420,
											"end": 27438,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27411,
											"end": 27417,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 27367,
											"end": 27439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 27367,
											"end": 27439,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27367,
											"end": 27439,
											"name": "tag",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 27367,
											"end": 27439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27114,
											"end": 27446,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 27452,
											"end": 27570,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 27452,
											"end": 27570,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27539,
											"end": 27563,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 27557,
											"end": 27562,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27539,
											"end": 27563,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 27539,
											"end": 27563,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27539,
											"end": 27563,
											"name": "tag",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 27539,
											"end": 27563,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27534,
											"end": 27537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27527,
											"end": 27564,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27452,
											"end": 27570,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27452,
											"end": 27570,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27452,
											"end": 27570,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 27576,
											"end": 27674,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 27576,
											"end": 27674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27627,
											"end": 27633,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27661,
											"end": 27666,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27655,
											"end": 27667,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 27645,
											"end": 27667,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27645,
											"end": 27667,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27576,
											"end": 27674,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27576,
											"end": 27674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27576,
											"end": 27674,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27576,
											"end": 27674,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 27680,
											"end": 27848,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 27680,
											"end": 27848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27763,
											"end": 27774,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27797,
											"end": 27803,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27792,
											"end": 27795,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27785,
											"end": 27804,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27837,
											"end": 27841,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 27832,
											"end": 27835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27828,
											"end": 27842,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27813,
											"end": 27842,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27813,
											"end": 27842,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27680,
											"end": 27848,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 27680,
											"end": 27848,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27680,
											"end": 27848,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27680,
											"end": 27848,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27680,
											"end": 27848,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 27854,
											"end": 28214,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 27854,
											"end": 28214,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27940,
											"end": 27943,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27968,
											"end": 28006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 28000,
											"end": 28005,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27968,
											"end": 28006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 27968,
											"end": 28006,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27968,
											"end": 28006,
											"name": "tag",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 27968,
											"end": 28006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28022,
											"end": 28092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 28085,
											"end": 28091,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28080,
											"end": 28083,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 28022,
											"end": 28092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 28022,
											"end": 28092,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28022,
											"end": 28092,
											"name": "tag",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 28022,
											"end": 28092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28015,
											"end": 28092,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 28015,
											"end": 28092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28101,
											"end": 28153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 28146,
											"end": 28152,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28141,
											"end": 28144,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 28134,
											"end": 28138,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 28127,
											"end": 28132,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 28123,
											"end": 28139,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28101,
											"end": 28153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 28101,
											"end": 28153,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28101,
											"end": 28153,
											"name": "tag",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 28101,
											"end": 28153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28178,
											"end": 28207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 28200,
											"end": 28206,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28178,
											"end": 28207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 28178,
											"end": 28207,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28178,
											"end": 28207,
											"name": "tag",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 28178,
											"end": 28207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28173,
											"end": 28176,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 28169,
											"end": 28208,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28162,
											"end": 28208,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 28162,
											"end": 28208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27944,
											"end": 28214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27854,
											"end": 28214,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 27854,
											"end": 28214,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27854,
											"end": 28214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27854,
											"end": 28214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27854,
											"end": 28214,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28543,
											"end": 28547,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28581,
											"end": 28584,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 28570,
											"end": 28579,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 28566,
											"end": 28585,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28558,
											"end": 28585,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28558,
											"end": 28585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28595,
											"end": 28666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 28663,
											"end": 28664,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28652,
											"end": 28661,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 28648,
											"end": 28665,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28639,
											"end": 28645,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 28595,
											"end": 28666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 28595,
											"end": 28666,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28595,
											"end": 28666,
											"name": "tag",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 28595,
											"end": 28666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28676,
											"end": 28748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 28744,
											"end": 28746,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 28733,
											"end": 28742,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 28729,
											"end": 28747,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28720,
											"end": 28726,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 28676,
											"end": 28748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 28676,
											"end": 28748,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28676,
											"end": 28748,
											"name": "tag",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 28676,
											"end": 28748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28795,
											"end": 28804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28789,
											"end": 28793,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28785,
											"end": 28805,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 28780,
											"end": 28782,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 28769,
											"end": 28778,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 28765,
											"end": 28783,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28758,
											"end": 28806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 28823,
											"end": 28931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 28926,
											"end": 28930,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28917,
											"end": 28923,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 28823,
											"end": 28931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 28823,
											"end": 28931,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28823,
											"end": 28931,
											"name": "tag",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 28823,
											"end": 28931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28815,
											"end": 28931,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28815,
											"end": 28931,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28978,
											"end": 28987,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28972,
											"end": 28976,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28968,
											"end": 28988,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 28963,
											"end": 28965,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 28952,
											"end": 28961,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 28948,
											"end": 28966,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28941,
											"end": 28989,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29006,
											"end": 29114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "565"
										},
										{
											"begin": 29109,
											"end": 29113,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29100,
											"end": 29106,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 29006,
											"end": 29114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 29006,
											"end": 29114,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 29006,
											"end": 29114,
											"name": "tag",
											"source": 9,
											"value": "565"
										},
										{
											"begin": 29006,
											"end": 29114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28998,
											"end": 29114,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28998,
											"end": 29114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29162,
											"end": 29171,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29156,
											"end": 29160,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29152,
											"end": 29172,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 29146,
											"end": 29149,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 29135,
											"end": 29144,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 29131,
											"end": 29150,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29124,
											"end": 29173,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29190,
											"end": 29266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 29261,
											"end": 29265,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29252,
											"end": 29258,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 29190,
											"end": 29266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 29190,
											"end": 29266,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 29190,
											"end": 29266,
											"name": "tag",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 29190,
											"end": 29266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29182,
											"end": 29266,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29182,
											"end": 29266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28220,
											"end": 29273,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29279,
											"end": 29420,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 29279,
											"end": 29420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29335,
											"end": 29340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29366,
											"end": 29372,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29360,
											"end": 29373,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 29351,
											"end": 29373,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29351,
											"end": 29373,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29382,
											"end": 29414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 29408,
											"end": 29413,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29382,
											"end": 29414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 29382,
											"end": 29414,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 29382,
											"end": 29414,
											"name": "tag",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 29382,
											"end": 29414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29279,
											"end": 29420,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 29279,
											"end": 29420,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 29279,
											"end": 29420,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29279,
											"end": 29420,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29279,
											"end": 29420,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29426,
											"end": 29775,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 29426,
											"end": 29775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29495,
											"end": 29501,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29544,
											"end": 29546,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 29532,
											"end": 29541,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29523,
											"end": 29530,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 29519,
											"end": 29542,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 29515,
											"end": 29547,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 29512,
											"end": 29631,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 29512,
											"end": 29631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 29512,
											"end": 29631,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 29550,
											"end": 29629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 29550,
											"end": 29629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 29550,
											"end": 29629,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 29550,
											"end": 29629,
											"name": "tag",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 29550,
											"end": 29629,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29512,
											"end": 29631,
											"name": "tag",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 29512,
											"end": 29631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29670,
											"end": 29671,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29695,
											"end": 29758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 29750,
											"end": 29757,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 29741,
											"end": 29747,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29730,
											"end": 29739,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 29726,
											"end": 29748,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29695,
											"end": 29758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 29695,
											"end": 29758,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 29695,
											"end": 29758,
											"name": "tag",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 29695,
											"end": 29758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29685,
											"end": 29758,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 29685,
											"end": 29758,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29641,
											"end": 29768,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29426,
											"end": 29775,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 29426,
											"end": 29775,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 29426,
											"end": 29775,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29426,
											"end": 29775,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29426,
											"end": 29775,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29781,
											"end": 29887,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 29781,
											"end": 29887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29825,
											"end": 29833,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29874,
											"end": 29879,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29869,
											"end": 29872,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 29865,
											"end": 29880,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 29844,
											"end": 29880,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29844,
											"end": 29880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29781,
											"end": 29887,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 29781,
											"end": 29887,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29781,
											"end": 29887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29781,
											"end": 29887,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29893,
											"end": 30076,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 29893,
											"end": 30076,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29928,
											"end": 29931,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29966,
											"end": 29967,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 29948,
											"end": 29964,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 29945,
											"end": 29968,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 29942,
											"end": 30070,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 29942,
											"end": 30070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 29942,
											"end": 30070,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 30004,
											"end": 30005,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 30001,
											"end": 30002,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29998,
											"end": 29999,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 29983,
											"end": 30006,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 30026,
											"end": 30060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 30057,
											"end": 30058,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30051,
											"end": 30059,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 30026,
											"end": 30060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 30026,
											"end": 30060,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 30026,
											"end": 30060,
											"name": "tag",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 30026,
											"end": 30060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30019,
											"end": 30060,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30019,
											"end": 30060,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29942,
											"end": 30070,
											"name": "tag",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 29942,
											"end": 30070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29893,
											"end": 30076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29893,
											"end": 30076,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30082,
											"end": 30793,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 30082,
											"end": 30793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30121,
											"end": 30124,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30159,
											"end": 30163,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 30141,
											"end": 30157,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 30138,
											"end": 30164,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 30135,
											"end": 30174,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 30135,
											"end": 30174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 30135,
											"end": 30174,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 30167,
											"end": 30172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 30167,
											"end": 30172,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 30135,
											"end": 30174,
											"name": "tag",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 30135,
											"end": 30174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30196,
											"end": 30216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 30196,
											"end": 30216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 30196,
											"end": 30216,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 30196,
											"end": 30216,
											"name": "tag",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 30196,
											"end": 30216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30271,
											"end": 30272,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 30253,
											"end": 30269,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 30249,
											"end": 30273,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 30246,
											"end": 30247,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 30240,
											"end": 30244,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30225,
											"end": 30274,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 30304,
											"end": 30308,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 30298,
											"end": 30309,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 30403,
											"end": 30419,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 30396,
											"end": 30400,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 30388,
											"end": 30394,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30384,
											"end": 30401,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30381,
											"end": 30420,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 30348,
											"end": 30366,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30340,
											"end": 30346,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30337,
											"end": 30367,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 30321,
											"end": 30434,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 30318,
											"end": 30464,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 30318,
											"end": 30464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 30318,
											"end": 30464,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 30449,
											"end": 30454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30449,
											"end": 30454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30449,
											"end": 30454,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 30449,
											"end": 30454,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 30318,
											"end": 30464,
											"name": "tag",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 30318,
											"end": 30464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30495,
											"end": 30501,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 30489,
											"end": 30493,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30485,
											"end": 30502,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30531,
											"end": 30534,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 30525,
											"end": 30535,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 30558,
											"end": 30576,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30550,
											"end": 30556,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 30547,
											"end": 30577,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 30544,
											"end": 30587,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 30544,
											"end": 30587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 30544,
											"end": 30587,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 30580,
											"end": 30585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30580,
											"end": 30585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30580,
											"end": 30585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30580,
											"end": 30585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30580,
											"end": 30585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 30580,
											"end": 30585,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 30544,
											"end": 30587,
											"name": "tag",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 30544,
											"end": 30587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30628,
											"end": 30634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 30621,
											"end": 30625,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30616,
											"end": 30619,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 30612,
											"end": 30626,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30608,
											"end": 30635,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30687,
											"end": 30688,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 30669,
											"end": 30685,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 30665,
											"end": 30689,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 30659,
											"end": 30663,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 30655,
											"end": 30690,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30650,
											"end": 30653,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 30647,
											"end": 30691,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 30644,
											"end": 30701,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 30644,
											"end": 30701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 30644,
											"end": 30701,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 30694,
											"end": 30699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30694,
											"end": 30699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30694,
											"end": 30699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30694,
											"end": 30699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30694,
											"end": 30699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30694,
											"end": 30699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 30694,
											"end": 30699,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 30644,
											"end": 30701,
											"name": "tag",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 30644,
											"end": 30701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30711,
											"end": 30768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 30759,
											"end": 30765,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30753,
											"end": 30757,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30749,
											"end": 30766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30741,
											"end": 30747,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 30737,
											"end": 30767,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30731,
											"end": 30735,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 30711,
											"end": 30768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 30711,
											"end": 30768,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 30711,
											"end": 30768,
											"name": "tag",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 30711,
											"end": 30768,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30784,
											"end": 30787,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30777,
											"end": 30787,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 30777,
											"end": 30787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30125,
											"end": 30793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30125,
											"end": 30793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30125,
											"end": 30793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30125,
											"end": 30793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30125,
											"end": 30793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30082,
											"end": 30793,
											"name": "tag",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 30082,
											"end": 30793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30082,
											"end": 30793,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30082,
											"end": 30793,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30799,
											"end": 31038,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 30799,
											"end": 31038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30939,
											"end": 30973,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 30935,
											"end": 30936,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30927,
											"end": 30933,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30923,
											"end": 30937,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30916,
											"end": 30974,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31008,
											"end": 31030,
											"name": "PUSH",
											"source": 9,
											"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
										},
										{
											"begin": 31003,
											"end": 31005,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30995,
											"end": 31001,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30991,
											"end": 31006,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30984,
											"end": 31031,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30799,
											"end": 31038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30799,
											"end": 31038,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31044,
											"end": 31410,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 31044,
											"end": 31410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31186,
											"end": 31189,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31207,
											"end": 31274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 31271,
											"end": 31273,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 31266,
											"end": 31269,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 31207,
											"end": 31274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 31207,
											"end": 31274,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 31207,
											"end": 31274,
											"name": "tag",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 31207,
											"end": 31274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31200,
											"end": 31274,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 31200,
											"end": 31274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31283,
											"end": 31376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 31372,
											"end": 31375,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31283,
											"end": 31376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 31283,
											"end": 31376,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 31283,
											"end": 31376,
											"name": "tag",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 31283,
											"end": 31376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31401,
											"end": 31403,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 31396,
											"end": 31399,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31392,
											"end": 31404,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31385,
											"end": 31404,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31385,
											"end": 31404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31044,
											"end": 31410,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 31044,
											"end": 31410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31044,
											"end": 31410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31044,
											"end": 31410,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31416,
											"end": 31835,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 31416,
											"end": 31835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31582,
											"end": 31586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31620,
											"end": 31622,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 31609,
											"end": 31618,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31605,
											"end": 31623,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31597,
											"end": 31623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31597,
											"end": 31623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31669,
											"end": 31678,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 31663,
											"end": 31667,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 31659,
											"end": 31679,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 31655,
											"end": 31656,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31644,
											"end": 31653,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 31640,
											"end": 31657,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31633,
											"end": 31680,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31697,
											"end": 31828,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 31823,
											"end": 31827,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 31697,
											"end": 31828,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 31697,
											"end": 31828,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 31697,
											"end": 31828,
											"name": "tag",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 31697,
											"end": 31828,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31689,
											"end": 31828,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31689,
											"end": 31828,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31416,
											"end": 31835,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 31416,
											"end": 31835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31416,
											"end": 31835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31416,
											"end": 31835,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31841,
											"end": 32068,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 31841,
											"end": 32068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31981,
											"end": 32015,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 31977,
											"end": 31978,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31969,
											"end": 31975,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31965,
											"end": 31979,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31958,
											"end": 32016,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 32050,
											"end": 32060,
											"name": "PUSH",
											"source": 9,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32045,
											"end": 32047,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 32037,
											"end": 32043,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32033,
											"end": 32048,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32026,
											"end": 32061,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31841,
											"end": 32068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31841,
											"end": 32068,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32074,
											"end": 32440,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 32074,
											"end": 32440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32216,
											"end": 32219,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32237,
											"end": 32304,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "592"
										},
										{
											"begin": 32301,
											"end": 32303,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 32296,
											"end": 32299,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 32237,
											"end": 32304,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 32237,
											"end": 32304,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32237,
											"end": 32304,
											"name": "tag",
											"source": 9,
											"value": "592"
										},
										{
											"begin": 32237,
											"end": 32304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32230,
											"end": 32304,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 32230,
											"end": 32304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32313,
											"end": 32406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "593"
										},
										{
											"begin": 32402,
											"end": 32405,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32313,
											"end": 32406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 32313,
											"end": 32406,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32313,
											"end": 32406,
											"name": "tag",
											"source": 9,
											"value": "593"
										},
										{
											"begin": 32313,
											"end": 32406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32431,
											"end": 32433,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 32426,
											"end": 32429,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32422,
											"end": 32434,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32415,
											"end": 32434,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32415,
											"end": 32434,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32074,
											"end": 32440,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 32074,
											"end": 32440,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32074,
											"end": 32440,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32074,
											"end": 32440,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32446,
											"end": 32865,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 32446,
											"end": 32865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32612,
											"end": 32616,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32650,
											"end": 32652,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 32639,
											"end": 32648,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32635,
											"end": 32653,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32627,
											"end": 32653,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32627,
											"end": 32653,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32699,
											"end": 32708,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32693,
											"end": 32697,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32689,
											"end": 32709,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 32685,
											"end": 32686,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32674,
											"end": 32683,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 32670,
											"end": 32687,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32663,
											"end": 32710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 32727,
											"end": 32858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "595"
										},
										{
											"begin": 32853,
											"end": 32857,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32727,
											"end": 32858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 32727,
											"end": 32858,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32727,
											"end": 32858,
											"name": "tag",
											"source": 9,
											"value": "595"
										},
										{
											"begin": 32727,
											"end": 32858,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32719,
											"end": 32858,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32719,
											"end": 32858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32446,
											"end": 32865,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 32446,
											"end": 32865,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32446,
											"end": 32865,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32446,
											"end": 32865,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33094,
											"end": 33098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 33132,
											"end": 33135,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 33121,
											"end": 33130,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33117,
											"end": 33136,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 33109,
											"end": 33136,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 33109,
											"end": 33136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33146,
											"end": 33217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 33214,
											"end": 33215,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 33203,
											"end": 33212,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 33199,
											"end": 33216,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 33190,
											"end": 33196,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 33146,
											"end": 33217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 33146,
											"end": 33217,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33146,
											"end": 33217,
											"name": "tag",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 33146,
											"end": 33217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33227,
											"end": 33299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "598"
										},
										{
											"begin": 33295,
											"end": 33297,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 33284,
											"end": 33293,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 33280,
											"end": 33298,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 33271,
											"end": 33277,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 33227,
											"end": 33299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 33227,
											"end": 33299,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33227,
											"end": 33299,
											"name": "tag",
											"source": 9,
											"value": "598"
										},
										{
											"begin": 33227,
											"end": 33299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33309,
											"end": 33381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 33377,
											"end": 33379,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 33366,
											"end": 33375,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 33362,
											"end": 33380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 33353,
											"end": 33359,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 33309,
											"end": 33381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 33309,
											"end": 33381,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33309,
											"end": 33381,
											"name": "tag",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 33309,
											"end": 33381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33391,
											"end": 33463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "600"
										},
										{
											"begin": 33459,
											"end": 33461,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 33448,
											"end": 33457,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 33444,
											"end": 33462,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 33435,
											"end": 33441,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 33391,
											"end": 33463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 33391,
											"end": 33463,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33391,
											"end": 33463,
											"name": "tag",
											"source": 9,
											"value": "600"
										},
										{
											"begin": 33391,
											"end": 33463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33511,
											"end": 33520,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 33505,
											"end": 33509,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 33501,
											"end": 33521,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 33495,
											"end": 33498,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 33484,
											"end": 33493,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 33480,
											"end": 33499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 33473,
											"end": 33522,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 33539,
											"end": 33615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "601"
										},
										{
											"begin": 33610,
											"end": 33614,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 33601,
											"end": 33607,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 33539,
											"end": 33615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 33539,
											"end": 33615,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33539,
											"end": 33615,
											"name": "tag",
											"source": 9,
											"value": "601"
										},
										{
											"begin": 33539,
											"end": 33615,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33531,
											"end": 33615,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 33531,
											"end": 33615,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32871,
											"end": 33622,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ECR1155/ERC1155Upgradeable.sol\":\"ERC1155Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ECR1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0xdf33d44c0c9c91facff40afd27c1bfebbdc0635e2e33f2740b83d1b64040d712\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://948e97a4bbd6db06e05eee708d275f14197f4b066675a2557438af00785be09f\",\"dweb:/ipfs/QmdQgbmgHBy5V9LqUF2UqqyeEdZ8NbhrUwbLKRHUAxLTr4\"]},\"ECR1155/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0x729be95d5c9125f4b40655914f63dc209668b5565fdef481ef9d40b82d46e3d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91eed5a052516ec1182c4811ce06a01af852634752e969646e061bf00d2e2cb3\",\"dweb:/ipfs/QmcdBmXq5WSqUFhYPovTYdPtiM1XesG4wcvyoczkkw3H4U\"]},\"ECR1155/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xc3c3f9bd7807ee34a3f5842f2e475988fb773aa0d95c9d8afa22edb8e94589a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d5c6cfbb8ceff0613a303a93477673e42167cc115e76699ae54107d0d0c7dc0\",\"dweb:/ipfs/QmTiY3tn4cn2N6uGsuJ6JwfV9F7WFsLEKn5rmnt96mNnfd\"]},\"ECR1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xb37c5f9722540f1bf55af1f9814ff068e8f98182525fe289af0d8f9a55dd9182\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acd5770ba5f6eac7a2f877cd8d549d31a68de9e7ddb4231b8785ab299bd6a6f7\",\"dweb:/ipfs/QmdFziBY8Qqyi8RWHark7UT5mgYFtkRnLNYQ6vMjzqeU4q\"]},\"Utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf6d4ff5c2f658bbb9a7815c2722ca7d1774c8c311a091ec4a5099128524b2eaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9aa658e338934e90048272ff6e3202de3606b44eca15b9a6333ffb65765377c\",\"dweb:/ipfs/QmcNHruHbKW28HfRcsTm4J9ygbkmdJHqE1PwCXAPfkdR6X\"]},\"Utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x92fac0e53317ff400da2c57fbeacf65664915a39803bb8df868dc2da4ca900c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2728259e929816bf46743774c4e60d51d214daf908c7e78329ca61725ac498b3\",\"dweb:/ipfs/QmTpP8U3hYorjnhA8KCoGbQ1Dn79xghNg7MhGZk7PvhsyV\"]},\"Utils/ERC165/ERC165Upgradeable.sol\":{\"keccak256\":\"0xe92f2d276876bfcbf17a83cfd2e92ffe6715f74ece1335a1d421b11c35b0af96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d603f1b0076c2ff43e4b54af411a96481f5bd70641e00ca34edcc7ba103321fa\",\"dweb:/ipfs/QmWtLwjhJPbPaunAVLnTU8tTzptNDJxnf5te1d1mEs57Ef\"]},\"Utils/ERC165/IERC165Upgradeable.sol\":{\"keccak256\":\"0xa3a86fd8399ff01763901b64ed4603d979787747d7b83f70d6d3c7d4f6b79214\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46c8a582b7c414ed987dfc73de91899493cd62be3a4087b09194cfdc1bbd6bf8\",\"dweb:/ipfs/QmTpZgF3997huy7avP5EyowdwoSUj9FbHESH16wAtAvpkw\"]},\"Utils/Initializable.sol\":{\"keccak256\":\"0xfb4297abcb591bc098918f75a0254cebda8180b783cecf03b8c96aa5977d8338\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0fb72c19cb638da79b23ade1731290adcbb985af1ac89f36d235903f0cc44068\",\"dweb:/ipfs/QmXngXCNkkRdb4CefhF8nd3Hf1NxaA7uCmhMUJSXKXdRAa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1770,
								"contract": "ECR1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 1773,
								"contract": "ECR1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1706,
								"contract": "ECR1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1750,
								"contract": "ECR1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 28,
								"contract": "ECR1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
								"label": "_balances",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 34,
								"contract": "ECR1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "102",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 36,
								"contract": "ECR1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
								"label": "_uri",
								"offset": 0,
								"slot": "103",
								"type": "t_string_storage"
							},
							{
								"astId": 1243,
								"contract": "ECR1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "104",
								"type": "t_array(t_uint256)47_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)47_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[47]",
								"numberOfBytes": "1504"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ECR1155/IERC1155MetadataURIUpgradeable.sol": {
				"IERC1155MetadataURIUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ECR1155/IERC1155MetadataURIUpgradeable.sol\":\"IERC1155MetadataURIUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ECR1155/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0x729be95d5c9125f4b40655914f63dc209668b5565fdef481ef9d40b82d46e3d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91eed5a052516ec1182c4811ce06a01af852634752e969646e061bf00d2e2cb3\",\"dweb:/ipfs/QmcdBmXq5WSqUFhYPovTYdPtiM1XesG4wcvyoczkkw3H4U\"]},\"ECR1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xb37c5f9722540f1bf55af1f9814ff068e8f98182525fe289af0d8f9a55dd9182\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acd5770ba5f6eac7a2f877cd8d549d31a68de9e7ddb4231b8785ab299bd6a6f7\",\"dweb:/ipfs/QmdFziBY8Qqyi8RWHark7UT5mgYFtkRnLNYQ6vMjzqeU4q\"]},\"Utils/ERC165/IERC165Upgradeable.sol\":{\"keccak256\":\"0xa3a86fd8399ff01763901b64ed4603d979787747d7b83f70d6d3c7d4f6b79214\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46c8a582b7c414ed987dfc73de91899493cd62be3a4087b09194cfdc1bbd6bf8\",\"dweb:/ipfs/QmTpZgF3997huy7avP5EyowdwoSUj9FbHESH16wAtAvpkw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ECR1155/IERC1155ReceiverUpgradeable.sol": {
				"IERC1155ReceiverUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ECR1155/IERC1155ReceiverUpgradeable.sol\":\"IERC1155ReceiverUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ECR1155/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xc3c3f9bd7807ee34a3f5842f2e475988fb773aa0d95c9d8afa22edb8e94589a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d5c6cfbb8ceff0613a303a93477673e42167cc115e76699ae54107d0d0c7dc0\",\"dweb:/ipfs/QmTiY3tn4cn2N6uGsuJ6JwfV9F7WFsLEKn5rmnt96mNnfd\"]},\"Utils/ERC165/IERC165Upgradeable.sol\":{\"keccak256\":\"0xa3a86fd8399ff01763901b64ed4603d979787747d7b83f70d6d3c7d4f6b79214\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46c8a582b7c414ed987dfc73de91899493cd62be3a4087b09194cfdc1bbd6bf8\",\"dweb:/ipfs/QmTpZgF3997huy7avP5EyowdwoSUj9FbHESH16wAtAvpkw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ECR1155/IERC1155Upgradeable.sol": {
				"IERC1155Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._s",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._s\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ECR1155/IERC1155Upgradeable.sol\":\"IERC1155Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ECR1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xb37c5f9722540f1bf55af1f9814ff068e8f98182525fe289af0d8f9a55dd9182\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acd5770ba5f6eac7a2f877cd8d549d31a68de9e7ddb4231b8785ab299bd6a6f7\",\"dweb:/ipfs/QmdFziBY8Qqyi8RWHark7UT5mgYFtkRnLNYQ6vMjzqeU4q\"]},\"Utils/ERC165/IERC165Upgradeable.sol\":{\"keccak256\":\"0xa3a86fd8399ff01763901b64ed4603d979787747d7b83f70d6d3c7d4f6b79214\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46c8a582b7c414ed987dfc73de91899493cd62be3a4087b09194cfdc1bbd6bf8\",\"dweb:/ipfs/QmTpZgF3997huy7avP5EyowdwoSUj9FbHESH16wAtAvpkw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Utils/AddressUpgradeable.sol\":202:7510  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Utils/AddressUpgradeable.sol\":202:7510  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122026bd256c42fdd2f7aac7f847aa020e475233b284f1a297a7033495338749ebea64736f6c63430008080033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026bd256c42fdd2f7aac7f847aa020e475233b284f1a297a7033495338749ebea64736f6c63430008080033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xBD 0x25 PUSH13 0x42FDD2F7AAC7F847AA020E4752 CALLER 0xB2 DUP5 CALL LOG2 SWAP8 0xA7 SUB CALLVALUE SWAP6 CALLER DUP8 0x49 0xEB 0xEA PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ",
							"sourceMap": "202:7308:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026bd256c42fdd2f7aac7f847aa020e475233b284f1a297a7033495338749ebea64736f6c63430008080033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xBD 0x25 PUSH13 0x42FDD2F7AAC7F847AA020E4752 CALLER 0xB2 DUP5 CALL LOG2 SWAP8 0xA7 SUB CALLVALUE SWAP6 CALLER DUP8 0x49 0xEB 0xEA PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ",
							"sourceMap": "202:7308:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 7510,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 202,
									"end": 7510,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122026bd256c42fdd2f7aac7f847aa020e475233b284f1a297a7033495338749ebea64736f6c63430008080033",
									".code": [
										{
											"begin": 202,
											"end": 7510,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 202,
											"end": 7510,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 202,
											"end": 7510,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 202,
											"end": 7510,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 7510,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 7510,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 202,
											"end": 7510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 7510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 202,
											"end": 7510,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf6d4ff5c2f658bbb9a7815c2722ca7d1774c8c311a091ec4a5099128524b2eaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9aa658e338934e90048272ff6e3202de3606b44eca15b9a6333ffb65765377c\",\"dweb:/ipfs/QmcNHruHbKW28HfRcsTm4J9ygbkmdJHqE1PwCXAPfkdR6X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf6d4ff5c2f658bbb9a7815c2722ca7d1774c8c311a091ec4a5099128524b2eaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9aa658e338934e90048272ff6e3202de3606b44eca15b9a6333ffb65765377c\",\"dweb:/ipfs/QmcNHruHbKW28HfRcsTm4J9ygbkmdJHqE1PwCXAPfkdR6X\"]},\"Utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x92fac0e53317ff400da2c57fbeacf65664915a39803bb8df868dc2da4ca900c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2728259e929816bf46743774c4e60d51d214daf908c7e78329ca61725ac498b3\",\"dweb:/ipfs/QmTpP8U3hYorjnhA8KCoGbQ1Dn79xghNg7MhGZk7PvhsyV\"]},\"Utils/Initializable.sol\":{\"keccak256\":\"0xfb4297abcb591bc098918f75a0254cebda8180b783cecf03b8c96aa5977d8338\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0fb72c19cb638da79b23ade1731290adcbb985af1ac89f36d235903f0cc44068\",\"dweb:/ipfs/QmXngXCNkkRdb4CefhF8nd3Hf1NxaA7uCmhMUJSXKXdRAa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1770,
								"contract": "Utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 1773,
								"contract": "Utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1706,
								"contract": "Utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/ERC165/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/ERC165/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf6d4ff5c2f658bbb9a7815c2722ca7d1774c8c311a091ec4a5099128524b2eaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9aa658e338934e90048272ff6e3202de3606b44eca15b9a6333ffb65765377c\",\"dweb:/ipfs/QmcNHruHbKW28HfRcsTm4J9ygbkmdJHqE1PwCXAPfkdR6X\"]},\"Utils/ERC165/ERC165Upgradeable.sol\":{\"keccak256\":\"0xe92f2d276876bfcbf17a83cfd2e92ffe6715f74ece1335a1d421b11c35b0af96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d603f1b0076c2ff43e4b54af411a96481f5bd70641e00ca34edcc7ba103321fa\",\"dweb:/ipfs/QmWtLwjhJPbPaunAVLnTU8tTzptNDJxnf5te1d1mEs57Ef\"]},\"Utils/ERC165/IERC165Upgradeable.sol\":{\"keccak256\":\"0xa3a86fd8399ff01763901b64ed4603d979787747d7b83f70d6d3c7d4f6b79214\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46c8a582b7c414ed987dfc73de91899493cd62be3a4087b09194cfdc1bbd6bf8\",\"dweb:/ipfs/QmTpZgF3997huy7avP5EyowdwoSUj9FbHESH16wAtAvpkw\"]},\"Utils/Initializable.sol\":{\"keccak256\":\"0xfb4297abcb591bc098918f75a0254cebda8180b783cecf03b8c96aa5977d8338\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0fb72c19cb638da79b23ade1731290adcbb985af1ac89f36d235903f0cc44068\",\"dweb:/ipfs/QmXngXCNkkRdb4CefhF8nd3Hf1NxaA7uCmhMUJSXKXdRAa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1770,
								"contract": "Utils/ERC165/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 1773,
								"contract": "Utils/ERC165/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1750,
								"contract": "Utils/ERC165/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/ERC165/IERC165Upgradeable.sol": {
				"IERC165Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/ERC165/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/ERC165/IERC165Upgradeable.sol\":{\"keccak256\":\"0xa3a86fd8399ff01763901b64ed4603d979787747d7b83f70d6d3c7d4f6b79214\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46c8a582b7c414ed987dfc73de91899493cd62be3a4087b09194cfdc1bbd6bf8\",\"dweb:/ipfs/QmTpZgF3997huy7avP5EyowdwoSUj9FbHESH16wAtAvpkw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf6d4ff5c2f658bbb9a7815c2722ca7d1774c8c311a091ec4a5099128524b2eaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9aa658e338934e90048272ff6e3202de3606b44eca15b9a6333ffb65765377c\",\"dweb:/ipfs/QmcNHruHbKW28HfRcsTm4J9ygbkmdJHqE1PwCXAPfkdR6X\"]},\"Utils/Initializable.sol\":{\"keccak256\":\"0xfb4297abcb591bc098918f75a0254cebda8180b783cecf03b8c96aa5977d8338\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0fb72c19cb638da79b23ade1731290adcbb985af1ac89f36d235903f0cc44068\",\"dweb:/ipfs/QmXngXCNkkRdb4CefhF8nd3Hf1NxaA7uCmhMUJSXKXdRAa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1770,
								"contract": "Utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 1773,
								"contract": "Utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ECR1155/ERC1155Upgradeable.sol": {
				"ast": {
					"absolutePath": "ECR1155/ERC1155Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1665
						],
						"ContextUpgradeable": [
							1707
						],
						"ERC1155Upgradeable": [
							1244
						],
						"ERC165Upgradeable": [
							1751
						],
						"IERC1155MetadataURIUpgradeable": [
							1259
						],
						"IERC1155ReceiverUpgradeable": [
							1300
						],
						"IERC1155Upgradeable": [
							1422
						],
						"IERC165Upgradeable": [
							1763
						],
						"Initializable": [
							1905
						]
					},
					"id": 1245,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:0"
						},
						{
							"absolutePath": "ECR1155/IERC1155Upgradeable.sol",
							"file": "./IERC1155Upgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1245,
							"sourceUnit": 1423,
							"src": "139:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ECR1155/IERC1155ReceiverUpgradeable.sol",
							"file": "./IERC1155ReceiverUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1245,
							"sourceUnit": 1301,
							"src": "176:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ECR1155/IERC1155MetadataURIUpgradeable.sol",
							"file": "./IERC1155MetadataURIUpgradeable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1245,
							"sourceUnit": 1260,
							"src": "221:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/AddressUpgradeable.sol",
							"file": "../../Utils/AddressUpgradeable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1245,
							"sourceUnit": 1666,
							"src": "269:44:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/ContextUpgradeable.sol",
							"file": "../../Utils/ContextUpgradeable.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1245,
							"sourceUnit": 1708,
							"src": "315:44:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/ERC165/ERC165Upgradeable.sol",
							"file": "../../Utils/ERC165/ERC165Upgradeable.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1245,
							"sourceUnit": 1752,
							"src": "361:50:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/Initializable.sol",
							"file": "../../Utils/Initializable.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1245,
							"sourceUnit": 1906,
							"src": "413:39:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1905,
										"src": "709:13:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "709:13:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1707,
										"src": "724:18:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "724:18:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "ERC165Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1751,
										"src": "744:17:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "744:17:0"
								},
								{
									"baseName": {
										"id": 16,
										"name": "IERC1155Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1422,
										"src": "763:19:0"
									},
									"id": 17,
									"nodeType": "InheritanceSpecifier",
									"src": "763:19:0"
								},
								{
									"baseName": {
										"id": 18,
										"name": "IERC1155MetadataURIUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1259,
										"src": "784:30:0"
									},
									"id": 19,
									"nodeType": "InheritanceSpecifier",
									"src": "784:30:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "456:220:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1244,
							"linearizedBaseContracts": [
								1244,
								1259,
								1422,
								1751,
								1763,
								1707,
								1905
							],
							"name": "ERC1155Upgradeable",
							"nameLocation": "687:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 22,
									"libraryName": {
										"id": 20,
										"name": "AddressUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1665,
										"src": "828:18:0"
									},
									"nodeType": "UsingForDirective",
									"src": "822:37:0",
									"typeName": {
										"id": 21,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "851:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "973:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1244,
									"src": "917:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 27,
										"keyType": {
											"id": 23,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "925:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "917:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 26,
											"keyType": {
												"id": 24,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "944:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "936:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 25,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "955:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 34,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1095:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1244,
									"src": "1042:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 33,
										"keyType": {
											"id": 29,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1050:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1042:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 32,
											"keyType": {
												"id": 30,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1069:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1061:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 31,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1080:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 36,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1252:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1244,
									"src": "1237:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 35,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1237:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "1381:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 45,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "1417:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 44,
														"name": "__ERC1155_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "1392:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1392:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "1392:30:0"
											}
										]
									},
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1265:40:0",
										"text": " @dev See {_setURI}."
									},
									"id": 49,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 42,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 41,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1848,
												"src": "1364:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1364:16:0"
										}
									],
									"name": "__ERC1155_init",
									"nameLocation": "1320:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1349:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1335:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 38,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1335:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1334:20:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1381:0:0"
									},
									"scope": 1244,
									"src": "1311:119:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "1518:32:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 57,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 51,
															"src": "1537:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 56,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "1529:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1529:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "1529:13:0"
											}
										]
									},
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 54,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 53,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1848,
												"src": "1501:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1501:16:0"
										}
									],
									"name": "__ERC1155_init_unchained",
									"nameLocation": "1447:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1486:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1472:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 50,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1472:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:20:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:0:0"
									},
									"scope": 1244,
									"src": "1438:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1745,
										1762
									],
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "1752:224:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 72,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "1783:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 74,
																			"name": "IERC1155Upgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "1803:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Upgradeable_$1422_$",
																				"typeString": "type(contract IERC1155Upgradeable)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Upgradeable_$1422_$",
																				"typeString": "type(contract IERC1155Upgradeable)"
																			}
																		],
																		"id": 73,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1798:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 75,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1798:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Upgradeable_$1422",
																		"typeString": "type(contract IERC1155Upgradeable)"
																	}
																},
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1798:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1783:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 78,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "1852:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 80,
																			"name": "IERC1155MetadataURIUpgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1259,
																			"src": "1872:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURIUpgradeable_$1259_$",
																				"typeString": "type(contract IERC1155MetadataURIUpgradeable)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURIUpgradeable_$1259_$",
																				"typeString": "type(contract IERC1155MetadataURIUpgradeable)"
																			}
																		],
																		"id": 79,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1867:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 81,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1867:36:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURIUpgradeable_$1259",
																		"typeString": "type(contract IERC1155MetadataURIUpgradeable)"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1867:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1852:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1783:132:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 87,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "1956:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 85,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1932:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155Upgradeable_$1244_$",
																	"typeString": "type(contract super ERC1155Upgradeable)"
																}
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1745,
															"src": "1932:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1932:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1783:185:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 90,
												"nodeType": "Return",
												"src": "1763:205:0"
											}
										]
									},
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "1558:58:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1631:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 68,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 66,
												"name": "ERC165Upgradeable",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1751,
												"src": "1698:17:0"
											},
											{
												"id": 67,
												"name": "IERC165Upgradeable",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1763,
												"src": "1717:18:0"
											}
										],
										"src": "1689:47:0"
									},
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1656:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1649:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 63,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1649:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1648:20:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1746:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1746:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1745:6:0"
									},
									"scope": 1244,
									"src": "1622:354:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1258
									],
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "2462:30:0",
										"statements": [
											{
												"expression": {
													"id": 101,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "2480:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 100,
												"id": 102,
												"nodeType": "Return",
												"src": "2473:11:0"
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "1984:397:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "2396:3:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 97,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2429:8:0"
									},
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2400:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2399:9:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2447:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 98,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2447:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2446:15:0"
									},
									"scope": 1244,
									"src": "2387:105:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1360
									],
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2738:136:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "2757:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2776:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2768:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 117,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2768:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2768:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2757:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2749:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2749:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2749:77:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 125,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "2844:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 127,
														"indexExpression": {
															"id": 126,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "2854:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2844:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 129,
													"indexExpression": {
														"id": 128,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "2858:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2844:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 114,
												"id": 130,
												"nodeType": "Return",
												"src": "2837:29:0"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "2500:137:0",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2652:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 111,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2711:8:0"
									},
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2670:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2662:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2662:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2687:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2679:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2661:29:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2729:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:9:0"
									},
									"scope": 1244,
									"src": "2643:231:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1373
									],
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "3219:345:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 147,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 136,
																	"src": "3238:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3238:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 149,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 139,
																	"src": "3257:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3257:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3238:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3269:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3230:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3230:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "3230:83:0"
											},
											{
												"assignments": [
													159
												],
												"declarations": [
													{
														"constant": false,
														"id": 159,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "3343:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 195,
														"src": "3326:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 157,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3326:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 158,
															"nodeType": "ArrayTypeName",
															"src": "3326:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 166,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 163,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "3373:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3373:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3359:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 160,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3363:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 161,
															"nodeType": "ArrayTypeName",
															"src": "3363:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3359:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3326:63:0"
											},
											{
												"body": {
													"id": 191,
													"nodeType": "Block",
													"src": "3448:76:0",
													"statements": [
														{
															"expression": {
																"id": 189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 178,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 159,
																		"src": "3463:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 180,
																	"indexExpression": {
																		"id": 179,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 168,
																		"src": "3477:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3463:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 182,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 136,
																				"src": "3492:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 184,
																			"indexExpression": {
																				"id": 183,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 168,
																				"src": "3501:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3492:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 185,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 139,
																				"src": "3505:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 187,
																			"indexExpression": {
																				"id": 186,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 168,
																				"src": "3509:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3505:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 181,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 132,
																		"src": "3482:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3482:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3463:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 190,
															"nodeType": "ExpressionStatement",
															"src": "3463:49:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 171,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "3422:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 172,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "3426:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3426:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3422:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 192,
												"initializationExpression": {
													"assignments": [
														168
													],
													"declarations": [
														{
															"constant": false,
															"id": 168,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3415:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 192,
															"src": "3407:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 167,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3407:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 170,
													"initialValue": {
														"hexValue": "30",
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3419:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3407:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3443:3:0",
														"subExpression": {
															"id": 175,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "3445:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 177,
													"nodeType": "ExpressionStatement",
													"src": "3443:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3402:122:0"
											},
											{
												"expression": {
													"id": 193,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 159,
													"src": "3543:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 145,
												"id": 194,
												"nodeType": "Return",
												"src": "3536:20:0"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2882:152:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "3049:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 141,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3169:8:0"
									},
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "3081:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "3064:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 134,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3064:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 135,
													"nodeType": "ArrayTypeName",
													"src": "3064:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3108:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "3091:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 137,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3091:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 138,
													"nodeType": "ArrayTypeName",
													"src": "3091:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3063:49:0"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "3196:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 142,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3196:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 143,
													"nodeType": "ArrayTypeName",
													"src": "3196:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:18:0"
									},
									"scope": 1244,
									"src": "3040:524:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1381
									],
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "3721:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 206,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1692,
																"src": "3751:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3751:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 208,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "3765:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "3775:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 205,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "3732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3732:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "3732:52:0"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "3572:59:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3646:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 203,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3712:8:0"
									},
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3672:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "3664:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3687:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "3682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3682:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3663:33:0"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3721:0:0"
									},
									"scope": 1244,
									"src": "3637:155:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1391
									],
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "3969:63:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 224,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "3987:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 226,
														"indexExpression": {
															"id": 225,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "4006:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3987:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 228,
													"indexExpression": {
														"id": 227,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "4015:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3987:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 223,
												"id": 229,
												"nodeType": "Return",
												"src": "3980:44:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "3800:58:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3873:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 220,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3945:8:0"
									},
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3898:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "3890:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3890:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3915:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "3907:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3907:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3889:35:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "3963:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3963:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3962:6:0"
									},
									"scope": 1244,
									"src": "3864:168:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1405
									],
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "4279:226:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 247,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "4312:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 248,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1692,
																		"src": "4320:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4320:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4312:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 252,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "4353:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 253,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1692,
																			"src": "4359:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 251,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "4336:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4336:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4312:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4387:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4290:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4290:151:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "4290:151:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 261,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "4470:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 262,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "4476:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 263,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "4480:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 264,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4484:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 265,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "4492:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 260,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "4452:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4452:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "4452:45:0"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4040:58:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4113:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 244,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4270:8:0"
									},
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4148:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4140:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4140:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4171:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4163:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4163:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4192:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4184:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4213:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4205:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4243:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4230:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4230:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:125:0"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4279:0:0"
									},
									"scope": 1244,
									"src": "4104:401:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1421
									],
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "4782:242:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 287,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "4815:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 288,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1692,
																		"src": "4823:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4823:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4815:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 292,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "4856:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 293,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1692,
																			"src": "4862:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4862:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 291,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "4839:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4839:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4815:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4890:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 286,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4793:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4793:160:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "4793:160:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 301,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "4987:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "4993:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "4997:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 304,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "5002:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 305,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "5011:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 300,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "4964:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4964:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "4964:52:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "4513:63:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4591:21:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 284,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4773:8:0"
									},
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4631:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "4623:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4623:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4654:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "4646:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4684:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "4667:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 275,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4667:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 276,
													"nodeType": "ArrayTypeName",
													"src": "4667:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4715:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "4698:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 278,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4698:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 279,
													"nodeType": "ArrayTypeName",
													"src": "4698:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4746:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "4733:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 281,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4733:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4612:145:0"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4782:0:0"
									},
									"scope": 1244,
									"src": "4582:442:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "5657:805:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 324,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 314,
																"src": "5676:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5690:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5682:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 325,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5682:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5682:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5676:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5694:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 323,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5668:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5668:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "5668:66:0"
											},
											{
												"assignments": [
													334
												],
												"declarations": [
													{
														"constant": false,
														"id": 334,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5755:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 425,
														"src": "5747:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 333,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5747:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 337,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 335,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1692,
														"src": "5766:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5766:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5747:31:0"
											},
											{
												"assignments": [
													342
												],
												"declarations": [
													{
														"constant": false,
														"id": 342,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "5806:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 425,
														"src": "5789:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 340,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5789:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 341,
															"nodeType": "ArrayTypeName",
															"src": "5789:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 346,
												"initialValue": {
													"arguments": [
														{
															"id": 344,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "5830:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 343,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "5812:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5812:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5789:44:0"
											},
											{
												"assignments": [
													351
												],
												"declarations": [
													{
														"constant": false,
														"id": 351,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "5861:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 425,
														"src": "5844:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 349,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5844:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 350,
															"nodeType": "ArrayTypeName",
															"src": "5844:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"arguments": [
														{
															"id": 353,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "5889:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 352,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "5871:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5871:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5844:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 357,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5930:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 358,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "5940:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 359,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "5946:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 360,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "5950:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 361,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "5955:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 362,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "5964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 356,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "5909:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5909:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "5909:60:0"
											},
											{
												"assignments": [
													366
												],
												"declarations": [
													{
														"constant": false,
														"id": 366,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5990:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 425,
														"src": "5982:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 365,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5982:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 372,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 367,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "6004:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 369,
														"indexExpression": {
															"id": 368,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "6014:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6004:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 371,
													"indexExpression": {
														"id": 370,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "6018:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6004:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5982:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 374,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6042:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 375,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "6057:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6042:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6065:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6034:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6034:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "6034:76:0"
											},
											{
												"id": 390,
												"nodeType": "UncheckedBlock",
												"src": "6121:79:0",
												"statements": [
													{
														"expression": {
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 380,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "6146:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 383,
																	"indexExpression": {
																		"id": 381,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "6156:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6146:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 384,
																"indexExpression": {
																	"id": 382,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 312,
																	"src": "6160:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "6146:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 385,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "6168:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 386,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 318,
																	"src": "6182:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6168:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6146:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 389,
														"nodeType": "ExpressionStatement",
														"src": "6146:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 391,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "6210:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 394,
															"indexExpression": {
																"id": 392,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "6220:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6210:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 395,
														"indexExpression": {
															"id": 393,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "6224:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6210:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 396,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "6231:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6210:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "6210:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 400,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "6270:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 401,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "6280:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "6286:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "6290:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 404,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "6294:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 399,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "6255:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6255:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "EmitStatement",
												"src": "6250:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 408,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "6334:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 409,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "6344:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 410,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "6350:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 411,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "6354:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 412,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "6359:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 413,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "6368:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 407,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "6314:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6314:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "6314:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 417,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "6417:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 418,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "6427:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 419,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "6433:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 420,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "6437:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 421,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "6441:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 422,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "6449:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 416,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "6386:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6386:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "6386:68:0"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "5032:450:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "5497:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5533:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "5525:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "5548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5577:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "5569:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5598:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "5590:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5590:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5628:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "5615:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 319,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5615:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5514:125:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5657:0:0"
									},
									"scope": 1244,
									"src": "5488:974:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "7014:952:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 443,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "7033:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7033:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 445,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "7047:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7047:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7033:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7063:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 442,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7025:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7025:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "7025:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 452,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "7125:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7139:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7131:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 453,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7131:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7131:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7125:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7143:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7117:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7117:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "7117:66:0"
											},
											{
												"assignments": [
													462
												],
												"declarations": [
													{
														"constant": false,
														"id": 462,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "7204:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "7196:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 461,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7196:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 465,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 463,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1692,
														"src": "7215:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7215:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7196:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 467,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "7261:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "7271:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "7277:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "7281:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 471,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "7286:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 472,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "7295:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 466,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "7240:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7240:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "7240:60:0"
											},
											{
												"body": {
													"id": 532,
													"nodeType": "Block",
													"src": "7354:380:0",
													"statements": [
														{
															"assignments": [
																487
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 487,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "7377:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 532,
																	"src": "7369:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 486,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7369:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 491,
															"initialValue": {
																"baseExpression": {
																	"id": 488,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "7382:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 490,
																"indexExpression": {
																	"id": 489,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "7386:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7382:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7369:19:0"
														},
														{
															"assignments": [
																493
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 493,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "7411:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 532,
																	"src": "7403:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 492,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7403:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 497,
															"initialValue": {
																"baseExpression": {
																	"id": 494,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "7420:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 496,
																"indexExpression": {
																	"id": 495,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "7428:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7420:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7403:27:0"
														},
														{
															"assignments": [
																499
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 499,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7455:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 532,
																	"src": "7447:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 498,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7447:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 505,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 500,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "7469:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 502,
																	"indexExpression": {
																		"id": 501,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 487,
																		"src": "7479:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7469:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 504,
																"indexExpression": {
																	"id": 503,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "7483:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7469:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7447:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 507,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 499,
																			"src": "7511:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 508,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 493,
																			"src": "7526:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7511:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7534:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 506,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7503:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7503:76:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 512,
															"nodeType": "ExpressionStatement",
															"src": "7503:76:0"
														},
														{
															"id": 523,
															"nodeType": "UncheckedBlock",
															"src": "7594:87:0",
															"statements": [
																{
																	"expression": {
																		"id": 521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 513,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 28,
																					"src": "7623:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 516,
																				"indexExpression": {
																					"id": 514,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 487,
																					"src": "7633:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7623:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 517,
																			"indexExpression": {
																				"id": 515,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 429,
																				"src": "7637:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7623:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 518,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 499,
																				"src": "7645:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 519,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 493,
																				"src": "7659:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7645:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7623:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 522,
																	"nodeType": "ExpressionStatement",
																	"src": "7623:42:0"
																}
															]
														},
														{
															"expression": {
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 524,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 28,
																			"src": "7695:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 527,
																		"indexExpression": {
																			"id": 525,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 487,
																			"src": "7705:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7695:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 528,
																	"indexExpression": {
																		"id": 526,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 431,
																		"src": "7709:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7695:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 529,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "7716:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7695:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 531,
															"nodeType": "ExpressionStatement",
															"src": "7695:27:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "7333:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 480,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "7337:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7337:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7333:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 533,
												"initializationExpression": {
													"assignments": [
														476
													],
													"declarations": [
														{
															"constant": false,
															"id": 476,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7326:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 533,
															"src": "7318:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 475,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7318:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 478,
													"initialValue": {
														"hexValue": "30",
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7330:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7318:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "7349:3:0",
														"subExpression": {
															"id": 483,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "7351:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 485,
													"nodeType": "ExpressionStatement",
													"src": "7349:3:0"
												},
												"nodeType": "ForStatement",
												"src": "7313:421:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 535,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "7765:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "7775:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "7781:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "7785:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 539,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "7790:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 534,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "7751:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7751:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 541,
												"nodeType": "EmitStatement",
												"src": "7746:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "7831:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "7841:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "7847:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 546,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "7851:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 547,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "7856:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 548,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "7865:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "7811:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7811:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "7811:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 552,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "7919:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 553,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "7929:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 554,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "7935:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 555,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "7939:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 556,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "7944:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 557,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "7953:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 551,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "7883:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7883:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "7883:75:0"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "6470:344:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6829:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6870:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "6862:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6862:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6893:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "6885:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6923:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "6906:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 432,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6906:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 433,
													"nodeType": "ArrayTypeName",
													"src": "6906:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6954:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "6937:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 435,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6937:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 436,
													"nodeType": "ArrayTypeName",
													"src": "6937:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6985:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "6972:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 438,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6972:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6851:145:0"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7014:0:0"
									},
									"scope": 1244,
									"src": "6820:1146:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "8866:32:0",
										"statements": [
											{
												"expression": {
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 567,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "8877:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 568,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "8884:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8877:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "8877:13:0"
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "7974:830:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8819:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8841:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "8827:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 563,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8827:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8826:22:0"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8866:0:0"
									},
									"scope": 1244,
									"src": "8810:88:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "9418:595:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 585,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "9437:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9451:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9443:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 586,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9443:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9443:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9437:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9455:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 584,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9429:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9429:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "9429:62:0"
											},
											{
												"assignments": [
													595
												],
												"declarations": [
													{
														"constant": false,
														"id": 595,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "9512:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 672,
														"src": "9504:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 594,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9504:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 598,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 596,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1692,
														"src": "9523:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9523:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9504:31:0"
											},
											{
												"assignments": [
													603
												],
												"declarations": [
													{
														"constant": false,
														"id": 603,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "9563:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 672,
														"src": "9546:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 601,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9546:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 602,
															"nodeType": "ArrayTypeName",
															"src": "9546:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 607,
												"initialValue": {
													"arguments": [
														{
															"id": 605,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "9587:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 604,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "9569:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9569:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9546:44:0"
											},
											{
												"assignments": [
													612
												],
												"declarations": [
													{
														"constant": false,
														"id": 612,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "9618:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 672,
														"src": "9601:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 610,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9601:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 611,
															"nodeType": "ArrayTypeName",
															"src": "9601:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 616,
												"initialValue": {
													"arguments": [
														{
															"id": 614,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "9646:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 613,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "9628:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9628:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9601:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 618,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "9687:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9705:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9697:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 619,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9697:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9697:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 623,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "9709:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 624,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "9713:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 625,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "9718:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 626,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "9727:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 617,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "9666:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9666:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "9666:66:0"
											},
											{
												"expression": {
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 629,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "9745:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 632,
															"indexExpression": {
																"id": 630,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "9755:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9745:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 633,
														"indexExpression": {
															"id": 631,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "9759:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9745:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 634,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "9766:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9745:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "9745:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 638,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "9803:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9821:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9813:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 639,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9813:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9813:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 643,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "9825:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 644,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "9829:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 645,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "9833:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 637,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "9788:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9788:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "EmitStatement",
												"src": "9783:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 649,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "9873:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9891:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9883:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 650,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9883:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 654,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "9895:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 655,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "9899:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 656,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "9904:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 657,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "9913:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 648,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "9853:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9853:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "9853:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 661,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "9962:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9980:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9972:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 662,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9972:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9972:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "9984:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "9988:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 668,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "9992:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 669,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "10000:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 660,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "9931:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9931:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "9931:74:0"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "8906:372:0",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9293:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9317:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "9309:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9309:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "9338:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "9330:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9359:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "9351:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9389:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "9376:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 580,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9376:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9298:102:0"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9418:0:0"
									},
									"scope": 1244,
									"src": "9284:729:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "10528:654:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 688,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "10547:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10561:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10553:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 689,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10553:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10553:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10547:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10565:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 687,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10539:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10539:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "10539:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 698,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "10620:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10620:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 700,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "10634:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10634:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10620:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10650:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 697,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10612:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10612:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "10612:81:0"
											},
											{
												"assignments": [
													707
												],
												"declarations": [
													{
														"constant": false,
														"id": 707,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10714:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 783,
														"src": "10706:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 706,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10706:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 708,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1692,
														"src": "10725:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10725:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10706:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 712,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10771:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10789:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10781:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 713,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10781:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10781:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 717,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "10793:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "10797:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 719,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "10802:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 720,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "10811:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 711,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "10750:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10750:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "10750:66:0"
											},
											{
												"body": {
													"id": 746,
													"nodeType": "Block",
													"src": "10870:62:0",
													"statements": [
														{
															"expression": {
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 734,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 28,
																			"src": "10885:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 739,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 735,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 679,
																				"src": "10895:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 737,
																			"indexExpression": {
																				"id": 736,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 724,
																				"src": "10899:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10895:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10885:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 740,
																	"indexExpression": {
																		"id": 738,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "10903:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10885:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 741,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "10910:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 743,
																	"indexExpression": {
																		"id": 742,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "10918:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10910:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 745,
															"nodeType": "ExpressionStatement",
															"src": "10885:35:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 727,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "10849:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 728,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "10853:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10853:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10849:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 747,
												"initializationExpression": {
													"assignments": [
														724
													],
													"declarations": [
														{
															"constant": false,
															"id": 724,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10842:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 747,
															"src": "10834:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 723,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10834:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 726,
													"initialValue": {
														"hexValue": "30",
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10846:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10834:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10865:3:0",
														"subExpression": {
															"id": 731,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "10865:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 733,
													"nodeType": "ExpressionStatement",
													"src": "10865:3:0"
												},
												"nodeType": "ForStatement",
												"src": "10829:103:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 749,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10963:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10981:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10973:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 750,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10973:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10973:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 754,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "10985:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "10989:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 756,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "10994:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 748,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "10949:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10949:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "EmitStatement",
												"src": "10944:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 760,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "11035:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11053:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11045:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 761,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11045:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11045:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 765,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "11057:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 766,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "11061:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 767,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "11066:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 768,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "11075:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 759,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "11015:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11015:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "11015:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 772,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "11129:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11147:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11139:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 773,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11139:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11139:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 777,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "11151:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 778,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "11155:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 779,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "11160:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 780,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "11169:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 771,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "11093:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11093:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "11093:81:0"
											}
										]
									},
									"documentation": {
										"id": 674,
										"nodeType": "StructuredDocumentation",
										"src": "10021:342:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "10378:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10407:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "10399:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10399:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "10437:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "10420:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 677,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10420:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 678,
													"nodeType": "ArrayTypeName",
													"src": "10420:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "10468:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "10451:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 680,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10451:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 681,
													"nodeType": "ArrayTypeName",
													"src": "10451:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10499:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "10486:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10486:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10388:122:0"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10528:0:0"
									},
									"scope": 1244,
									"src": "10369:813:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "11540:700:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 795,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "11559:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11575:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11567:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 796,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11567:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11567:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11559:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11579:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 794,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11551:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11551:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "11551:66:0"
											},
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11638:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 888,
														"src": "11630:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 804,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11630:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 808,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 806,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1692,
														"src": "11649:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11649:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11630:31:0"
											},
											{
												"assignments": [
													813
												],
												"declarations": [
													{
														"constant": false,
														"id": 813,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "11689:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 888,
														"src": "11672:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 811,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11672:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 812,
															"nodeType": "ArrayTypeName",
															"src": "11672:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 817,
												"initialValue": {
													"arguments": [
														{
															"id": 815,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "11713:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 814,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "11695:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11695:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11672:44:0"
											},
											{
												"assignments": [
													822
												],
												"declarations": [
													{
														"constant": false,
														"id": 822,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "11744:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 888,
														"src": "11727:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 820,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11727:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 821,
															"nodeType": "ArrayTypeName",
															"src": "11727:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 826,
												"initialValue": {
													"arguments": [
														{
															"id": 824,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "11772:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 823,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "11754:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11754:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11727:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 828,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "11813:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "11823:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11837:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11829:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 830,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11829:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11829:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 834,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "11841:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 835,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "11846:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11855:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 827,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "11792:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11792:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "11792:66:0"
											},
											{
												"assignments": [
													840
												],
												"declarations": [
													{
														"constant": false,
														"id": 840,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "11879:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 888,
														"src": "11871:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 839,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11871:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 846,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 841,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "11893:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 843,
														"indexExpression": {
															"id": 842,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "11903:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11893:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 845,
													"indexExpression": {
														"id": 844,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "11907:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11893:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11871:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 848,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "11931:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 849,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "11946:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11931:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11954:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 847,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11923:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11923:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "11923:70:0"
											},
											{
												"id": 864,
												"nodeType": "UncheckedBlock",
												"src": "12004:79:0",
												"statements": [
													{
														"expression": {
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 854,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "12029:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 857,
																	"indexExpression": {
																		"id": 855,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "12039:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12029:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 858,
																"indexExpression": {
																	"id": 856,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "12043:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12029:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 859,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "12051:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 860,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "12065:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12051:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12029:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 863,
														"nodeType": "ExpressionStatement",
														"src": "12029:42:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 866,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "12115:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 867,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "12125:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12139:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12131:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 868,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12131:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12131:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 872,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "12143:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 873,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "12147:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 865,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "12100:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12100:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "EmitStatement",
												"src": "12095:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 877,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "12187:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 878,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "12197:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12211:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12203:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 879,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12203:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12203:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 883,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "12215:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 884,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "12220:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12229:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 876,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "12167:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12167:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "12167:65:0"
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "11190:236:0",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11441:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11465:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "11457:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11457:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "11488:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "11480:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11509:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "11501:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11446:76:0"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11540:0:0"
									},
									"scope": 1244,
									"src": "11432:808:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "12576:836:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 902,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "12595:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12611:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12603:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 903,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12603:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12603:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12595:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12615:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 901,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12587:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12587:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "12587:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 912,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "12672:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12672:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 914,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "12686:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12686:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12672:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12702:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 911,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12664:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12664:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "12664:81:0"
											},
											{
												"assignments": [
													921
												],
												"declarations": [
													{
														"constant": false,
														"id": 921,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "12766:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1011,
														"src": "12758:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 920,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12758:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 924,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 922,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1692,
														"src": "12777:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12777:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12758:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 926,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "12823:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "12833:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12847:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12839:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 928,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12839:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12839:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 932,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "12851:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 933,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "12856:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12865:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 925,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "12802:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12802:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "12802:66:0"
											},
											{
												"body": {
													"id": 986,
													"nodeType": "Block",
													"src": "12922:332:0",
													"statements": [
														{
															"assignments": [
																949
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 949,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "12945:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 986,
																	"src": "12937:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 948,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12937:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 953,
															"initialValue": {
																"baseExpression": {
																	"id": 950,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "12950:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 952,
																"indexExpression": {
																	"id": 951,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "12954:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12950:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12937:19:0"
														},
														{
															"assignments": [
																955
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 955,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "12979:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 986,
																	"src": "12971:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 954,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12971:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 959,
															"initialValue": {
																"baseExpression": {
																	"id": 956,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "12988:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 958,
																"indexExpression": {
																	"id": 957,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "12996:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12988:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12971:27:0"
														},
														{
															"assignments": [
																961
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 961,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "13023:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 986,
																	"src": "13015:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 960,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13015:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 967,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 962,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "13037:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 964,
																	"indexExpression": {
																		"id": 963,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 949,
																		"src": "13047:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13037:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 966,
																"indexExpression": {
																	"id": 965,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 892,
																	"src": "13051:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13037:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13015:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 969,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "13079:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 970,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "13094:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13079:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13102:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 968,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "13071:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13071:70:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 974,
															"nodeType": "ExpressionStatement",
															"src": "13071:70:0"
														},
														{
															"id": 985,
															"nodeType": "UncheckedBlock",
															"src": "13156:87:0",
															"statements": [
																{
																	"expression": {
																		"id": 983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 975,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 28,
																					"src": "13185:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 978,
																				"indexExpression": {
																					"id": 976,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 949,
																					"src": "13195:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "13185:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 979,
																			"indexExpression": {
																				"id": 977,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 892,
																				"src": "13199:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "13185:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 982,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 980,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 961,
																				"src": "13207:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 981,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 955,
																				"src": "13221:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13207:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13185:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 984,
																	"nodeType": "ExpressionStatement",
																	"src": "13185:42:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 941,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "12901:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 942,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "12905:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12905:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12901:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 987,
												"initializationExpression": {
													"assignments": [
														938
													],
													"declarations": [
														{
															"constant": false,
															"id": 938,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12894:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 987,
															"src": "12886:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 937,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12886:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 940,
													"initialValue": {
														"hexValue": "30",
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12898:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12886:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12917:3:0",
														"subExpression": {
															"id": 945,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "12917:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 947,
													"nodeType": "ExpressionStatement",
													"src": "12917:3:0"
												},
												"nodeType": "ForStatement",
												"src": "12881:373:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 989,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "13285:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 990,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "13295:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13309:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13301:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 991,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13301:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13301:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "13313:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 996,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "13318:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 988,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "13271:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13271:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 998,
												"nodeType": "EmitStatement",
												"src": "13266:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1000,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "13359:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1001,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "13369:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13383:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13375:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1002,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13375:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13375:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1006,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "13387:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1007,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "13392:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13401:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 999,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "13339:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13339:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "13339:65:0"
											}
										]
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "12248:189:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12452:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12481:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "12473:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12473:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12513:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "12496:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 893,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12496:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 894,
													"nodeType": "ArrayTypeName",
													"src": "12496:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "12544:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "12527:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 896,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12527:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 897,
													"nodeType": "ArrayTypeName",
													"src": "12527:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12462:96:0"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12576:0:0"
									},
									"scope": 1244,
									"src": "12443:969:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1043,
										"nodeType": "Block",
										"src": "13681:204:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1023,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1015,
																"src": "13700:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1024,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "13709:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13700:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13719:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1022,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13692:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13692:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "13692:71:0"
											},
											{
												"expression": {
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1029,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "13774:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1032,
															"indexExpression": {
																"id": 1030,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1015,
																"src": "13793:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13774:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1033,
														"indexExpression": {
															"id": 1031,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "13800:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13774:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1034,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "13812:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13774:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "13774:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1038,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "13851:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1039,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "13858:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1040,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "13868:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1037,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1343,
														"src": "13836:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13836:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1042,
												"nodeType": "EmitStatement",
												"src": "13831:46:0"
											}
										]
									},
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "13420:128:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13563:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13600:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "13592:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13592:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13624:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "13616:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13648:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "13643:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1018,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13643:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13581:82:0"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13681:0:0"
									},
									"scope": 1244,
									"src": "13554:331:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "15060:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "13893:942:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "14850:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14889:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "14881:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14916:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "14908:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14939:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "14931:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14969:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "14952:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1052,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14952:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1053,
													"nodeType": "ArrayTypeName",
													"src": "14952:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "15000:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "14983:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1055,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14983:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1056,
													"nodeType": "ArrayTypeName",
													"src": "14983:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15031:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "15018:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1058,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15018:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14870:172:0"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15060:0:0"
									},
									"scope": 1244,
									"src": "14841:221:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "16235:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "15070:941:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "16026:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16064:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "16056:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16056:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16091:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "16083:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16083:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16114:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "16106:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16106:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "16144:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "16127:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1071,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16127:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1072,
													"nodeType": "ArrayTypeName",
													"src": "16127:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "16175:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "16158:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1074,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16158:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1075,
													"nodeType": "ArrayTypeName",
													"src": "16158:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16206:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "16193:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1077,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16193:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16045:172:0"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16235:0:0"
									},
									"scope": 1244,
									"src": "16017:220:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "16445:566:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1097,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "16460:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1440,
														"src": "16460:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16460:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1143,
												"nodeType": "IfStatement",
												"src": "16456:548:0",
												"trueBody": {
													"id": 1142,
													"nodeType": "Block",
													"src": "16477:527:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1124,
																		"nodeType": "Block",
																		"src": "16606:199:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1117,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1113,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1111,
																						"src": "16629:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1114,
																								"name": "IERC1155ReceiverUpgradeable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1300,
																								"src": "16641:27:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155ReceiverUpgradeable_$1300_$",
																									"typeString": "type(contract IERC1155ReceiverUpgradeable)"
																								}
																							},
																							"id": 1115,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1281,
																							"src": "16641:45:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155ReceiverUpgradeable.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1116,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16641:54:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16629:66:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1123,
																				"nodeType": "IfStatement",
																				"src": "16625:165:0",
																				"trueBody": {
																					"id": 1122,
																					"nodeType": "Block",
																					"src": "16697:93:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1119,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16727:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1118,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16720:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1120,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16720:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1121,
																							"nodeType": "ExpressionStatement",
																							"src": "16720:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1125,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1112,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1111,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16596:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1125,
																				"src": "16589:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1110,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16589:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16588:17:0"
																	},
																	"src": "16580:225:0"
																},
																{
																	"block": {
																		"id": 1133,
																		"nodeType": "Block",
																		"src": "16840:49:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1130,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1127,
																							"src": "16866:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1129,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16859:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1131,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16859:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1132,
																				"nodeType": "ExpressionStatement",
																				"src": "16859:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1134,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1128,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1127,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16832:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1134,
																				"src": "16818:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1126,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16818:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16817:22:0"
																	},
																	"src": "16806:83:0"
																},
																{
																	"block": {
																		"id": 1139,
																		"nodeType": "Block",
																		"src": "16896:97:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1136,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16922:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1135,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16915:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1137,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16915:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1138,
																				"nodeType": "ExpressionStatement",
																				"src": "16915:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1140,
																	"nodeType": "TryCatchClause",
																	"src": "16890:103:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1104,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1084,
																		"src": "16546:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1105,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "16556:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1106,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "16562:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1107,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1092,
																		"src": "16566:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1108,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "16574:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1101,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1088,
																				"src": "16524:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1100,
																			"name": "IERC1155ReceiverUpgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1300,
																			"src": "16496:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155ReceiverUpgradeable_$1300_$",
																				"typeString": "type(contract IERC1155ReceiverUpgradeable)"
																			}
																		},
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16496:31:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155ReceiverUpgradeable_$1300",
																			"typeString": "contract IERC1155ReceiverUpgradeable"
																		}
																	},
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1281,
																	"src": "16496:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16496:83:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1141,
															"nodeType": "TryStatement",
															"src": "16492:501:0"
														}
													]
												}
											}
										]
									},
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "16254:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16303:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "16295:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16295:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16330:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "16322:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16322:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16353:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "16345:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "16374:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "16366:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16395:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "16387:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16425:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "16412:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1093,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16412:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16284:152:0"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16445:0:0"
									},
									"scope": 1244,
									"src": "16245:766:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "17244:610:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1162,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "17259:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1440,
														"src": "17259:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17259:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1208,
												"nodeType": "IfStatement",
												"src": "17255:592:0",
												"trueBody": {
													"id": 1207,
													"nodeType": "Block",
													"src": "17276:571:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1189,
																		"nodeType": "Block",
																		"src": "17444:204:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1182,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1178,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1176,
																						"src": "17467:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1179,
																								"name": "IERC1155ReceiverUpgradeable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1300,
																								"src": "17479:27:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155ReceiverUpgradeable_$1300_$",
																									"typeString": "type(contract IERC1155ReceiverUpgradeable)"
																								}
																							},
																							"id": 1180,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1299,
																							"src": "17479:50:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155ReceiverUpgradeable.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1181,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17479:59:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17467:71:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1188,
																				"nodeType": "IfStatement",
																				"src": "17463:170:0",
																				"trueBody": {
																					"id": 1187,
																					"nodeType": "Block",
																					"src": "17540:93:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1184,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "17570:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1183,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "17563:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1185,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17563:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1186,
																							"nodeType": "ExpressionStatement",
																							"src": "17563:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1190,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1177,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1176,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "17420:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1190,
																				"src": "17413:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1175,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17413:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17394:49:0"
																	},
																	"src": "17386:262:0"
																},
																{
																	"block": {
																		"id": 1198,
																		"nodeType": "Block",
																		"src": "17683:49:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1195,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1192,
																							"src": "17709:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1194,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17702:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1196,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17702:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1197,
																				"nodeType": "ExpressionStatement",
																				"src": "17702:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1199,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1193,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1192,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17675:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1199,
																				"src": "17661:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1191,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "17661:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17660:22:0"
																	},
																	"src": "17649:83:0"
																},
																{
																	"block": {
																		"id": 1204,
																		"nodeType": "Block",
																		"src": "17739:97:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1201,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17765:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1200,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17758:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1202,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17758:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1203,
																				"nodeType": "ExpressionStatement",
																				"src": "17758:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1205,
																	"nodeType": "TryCatchClause",
																	"src": "17733:103:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1169,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1147,
																		"src": "17350:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1170,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1149,
																		"src": "17360:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1171,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "17366:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1172,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1157,
																		"src": "17371:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1173,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "17380:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1166,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1151,
																				"src": "17323:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1165,
																			"name": "IERC1155ReceiverUpgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1300,
																			"src": "17295:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155ReceiverUpgradeable_$1300_$",
																				"typeString": "type(contract IERC1155ReceiverUpgradeable)"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17295:31:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155ReceiverUpgradeable_$1300",
																			"typeString": "contract IERC1155ReceiverUpgradeable"
																		}
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1299,
																	"src": "17295:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17295:90:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1206,
															"nodeType": "TryStatement",
															"src": "17291:545:0"
														}
													]
												}
											}
										]
									},
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "17028:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17082:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "17074:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17074:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17109:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "17101:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17132:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "17124:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17124:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "17162:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "17145:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1152,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17145:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1153,
													"nodeType": "ArrayTypeName",
													"src": "17145:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "17193:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "17176:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1155,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17176:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1156,
													"nodeType": "ArrayTypeName",
													"src": "17176:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17224:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "17211:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1158,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17211:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17063:172:0"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17244:0:0"
									},
									"scope": 1244,
									"src": "17019:835:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "17946:114:0",
										"statements": [
											{
												"assignments": [
													1222
												],
												"declarations": [
													{
														"constant": false,
														"id": 1222,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "17974:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1237,
														"src": "17957:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1220,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17957:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1221,
															"nodeType": "ArrayTypeName",
															"src": "17957:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1228,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17996:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17982:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1223,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17986:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1224,
															"nodeType": "ArrayTypeName",
															"src": "17986:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17982:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17957:41:0"
											},
											{
												"expression": {
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1229,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "18009:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1231,
														"indexExpression": {
															"hexValue": "30",
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18015:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18009:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1232,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "18020:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18009:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "18009:18:0"
											},
											{
												"expression": {
													"id": 1235,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1222,
													"src": "18047:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1217,
												"id": 1236,
												"nodeType": "Return",
												"src": "18040:12:0"
											}
										]
									},
									"id": 1238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "17871:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "17897:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "17889:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17888:17:0"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "17928:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1214,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17928:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1215,
													"nodeType": "ArrayTypeName",
													"src": "17928:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17927:18:0"
									},
									"scope": 1244,
									"src": "17862:198:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "18068:258:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1243,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "18352:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1244,
									"src": "18332:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$47_storage",
										"typeString": "uint256[47]"
									},
									"typeName": {
										"baseType": {
											"id": 1240,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "18332:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1242,
										"length": {
											"hexValue": "3437",
											"id": 1241,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "18340:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_47_by_1",
												"typeString": "int_const 47"
											},
											"value": "47"
										},
										"nodeType": "ArrayTypeName",
										"src": "18332:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$47_storage_ptr",
											"typeString": "uint256[47]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1245,
							"src": "678:17683:0",
							"usedErrors": []
						}
					],
					"src": "112:18249:0"
				},
				"id": 0
			},
			"ECR1155/IERC1155MetadataURIUpgradeable.sol": {
				"ast": {
					"absolutePath": "ECR1155/IERC1155MetadataURIUpgradeable.sol",
					"exportedSymbols": {
						"IERC1155MetadataURIUpgradeable": [
							1259
						],
						"IERC1155Upgradeable": [
							1422
						],
						"IERC165Upgradeable": [
							1763
						]
					},
					"id": 1260,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1246,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "120:23:1"
						},
						{
							"absolutePath": "ECR1155/IERC1155Upgradeable.sol",
							"file": "./IERC1155Upgradeable.sol",
							"id": 1247,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1260,
							"sourceUnit": 1423,
							"src": "147:35:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1249,
										"name": "IERC1155Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1422,
										"src": "431:19:1"
									},
									"id": 1250,
									"nodeType": "InheritanceSpecifier",
									"src": "431:19:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1248,
								"nodeType": "StructuredDocumentation",
								"src": "186:199:1",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1259,
							"linearizedBaseContracts": [
								1259,
								1422,
								1763
							],
							"name": "IERC1155MetadataURIUpgradeable",
							"nameLocation": "397:30:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "458:197:1",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "670:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "682:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "674:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:12:1"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "709:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1255,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "709:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:15:1"
									},
									"scope": 1259,
									"src": "661:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1260,
							"src": "387:340:1",
							"usedErrors": []
						}
					],
					"src": "120:609:1"
				},
				"id": 1
			},
			"ECR1155/IERC1155ReceiverUpgradeable.sol": {
				"ast": {
					"absolutePath": "ECR1155/IERC1155ReceiverUpgradeable.sol",
					"exportedSymbols": {
						"IERC1155ReceiverUpgradeable": [
							1300
						],
						"IERC165Upgradeable": [
							1763
						]
					},
					"id": 1301,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1261,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "121:23:2"
						},
						{
							"absolutePath": "Utils/ERC165/IERC165Upgradeable.sol",
							"file": "../../Utils/ERC165/IERC165Upgradeable.sol",
							"id": 1262,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1301,
							"sourceUnit": 1764,
							"src": "148:51:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1264,
										"name": "IERC165Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1763,
										"src": "287:18:2"
									},
									"id": 1265,
									"nodeType": "InheritanceSpecifier",
									"src": "287:18:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1263,
								"nodeType": "StructuredDocumentation",
								"src": "203:41:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1300,
							"linearizedBaseContracts": [
								1300,
								1763
							],
							"name": "IERC1155ReceiverUpgradeable",
							"nameLocation": "256:27:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "313:840:2",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1168:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1204:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1196:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1231:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1223:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1254:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1246:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1246:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1267:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1306:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1291:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1275,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1291:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1185:132:2"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1336:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1278,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1336:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1335:8:2"
									},
									"scope": 1300,
									"src": "1159:185:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1282,
										"nodeType": "StructuredDocumentation",
										"src": "1352:1009:2",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2376:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2417:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "2409:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2409:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2444:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "2436:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2478:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "2459:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1287,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2459:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1288,
													"nodeType": "ArrayTypeName",
													"src": "2459:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2511:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "2492:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1290,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2492:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1291,
													"nodeType": "ArrayTypeName",
													"src": "2492:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2543:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "2528:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1293,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2528:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:156:2"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "2573:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1296,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2573:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2572:8:2"
									},
									"scope": 1300,
									"src": "2367:214:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1301,
							"src": "246:2338:2",
							"usedErrors": []
						}
					],
					"src": "121:2465:2"
				},
				"id": 2
			},
			"ECR1155/IERC1155Upgradeable.sol": {
				"ast": {
					"absolutePath": "ECR1155/IERC1155Upgradeable.sol",
					"exportedSymbols": {
						"IERC1155Upgradeable": [
							1422
						],
						"IERC165Upgradeable": [
							1763
						]
					},
					"id": 1423,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1302,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "98:23:3"
						},
						{
							"absolutePath": "Utils/ERC165/IERC165Upgradeable.sol",
							"file": "../../Utils/ERC165/IERC165Upgradeable.sol",
							"id": 1303,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1423,
							"sourceUnit": 1764,
							"src": "125:51:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1305,
										"name": "IERC165Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1763,
										"src": "389:18:3"
									},
									"id": 1306,
									"nodeType": "InheritanceSpecifier",
									"src": "389:18:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1304,
								"nodeType": "StructuredDocumentation",
								"src": "180:171:3",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._s"
							},
							"fullyImplemented": false,
							"id": 1422,
							"linearizedBaseContracts": [
								1422,
								1763
							],
							"name": "IERC1155Upgradeable",
							"nameLocation": "366:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "415:123:3",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1319,
									"name": "TransferSingle",
									"nameLocation": "550:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "581:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "565:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "607:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "591:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "629:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "613:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "641:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "633:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "653:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "645:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:95:3"
									},
									"src": "544:116:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "668:147:3",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 1334,
									"name": "TransferBatch",
									"nameLocation": "827:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "851:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "902:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "886:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "933:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "917:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "956:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "946:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1327,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "946:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1328,
													"nodeType": "ArrayTypeName",
													"src": "946:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "980:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "970:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1330,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "970:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1331,
													"nodeType": "ArrayTypeName",
													"src": "970:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "840:153:3"
									},
									"src": "821:173:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "1002:150:3",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 1343,
									"name": "ApprovalForAll",
									"nameLocation": "1164:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1195:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1179:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1220:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1204:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1235:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1230:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1230:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:66:3"
									},
									"src": "1158:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "1253:349:3",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 1350,
									"name": "URI",
									"nameLocation": "1614:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1625:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "1618:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1345,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1618:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1648:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "1632:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1632:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1617:34:3"
									},
									"src": "1608:44:3"
								},
								{
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "1660:179:3",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1360,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1854:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1872:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "1864:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1864:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1889:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "1881:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1881:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:29:3"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "1916:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1915:9:3"
									},
									"scope": 1422,
									"src": "1845:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1361,
										"nodeType": "StructuredDocumentation",
										"src": "1933:194:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2142:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2176:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "2157:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1362,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2157:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1363,
													"nodeType": "ArrayTypeName",
													"src": "2157:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2205:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "2186:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1365,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2186:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1366,
													"nodeType": "ArrayTypeName",
													"src": "2186:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:53:3"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "2260:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1369,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2260:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1370,
													"nodeType": "ArrayTypeName",
													"src": "2260:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2259:18:3"
									},
									"scope": 1422,
									"src": "2133:145:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1374,
										"nodeType": "StructuredDocumentation",
										"src": "2286:256:3",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2557:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2583:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "2575:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2575:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2598:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "2593:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1377,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2593:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:33:3"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2616:0:3"
									},
									"scope": 1422,
									"src": "2548:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "2625:139:3",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2779:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2804:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "2796:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2796:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2821:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "2813:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:35:3"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "2854:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1388,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2854:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2853:6:3"
									},
									"scope": 1422,
									"src": "2770:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "2868:571:3",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3454:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3489:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "3481:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3481:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3512:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "3504:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3504:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3533:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "3525:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3525:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3554:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "3546:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3546:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3586:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "3571:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1401,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3571:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3470:127:3"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3606:0:3"
									},
									"scope": 1422,
									"src": "3445:162:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "3615:400:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4030:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4070:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "4062:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4062:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4093:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "4085:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4085:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4125:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "4106:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1411,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4106:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1412,
													"nodeType": "ArrayTypeName",
													"src": "4106:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4158:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "4139:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1414,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4139:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1415,
													"nodeType": "ArrayTypeName",
													"src": "4139:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4191:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "4176:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1417,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4176:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:151:3"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4211:0:3"
									},
									"scope": 1422,
									"src": "4021:191:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1423,
							"src": "356:3859:3",
							"usedErrors": []
						}
					],
					"src": "98:4119:3"
				},
				"id": 3
			},
			"Utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "Utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1665
						]
					},
					"id": 1666,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1424,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1425,
								"nodeType": "StructuredDocumentation",
								"src": "131:69:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1665,
							"linearizedBaseContracts": [
								1665
							],
							"name": "AddressUpgradeable",
							"nameLocation": "210:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1439,
										"nodeType": "Block",
										"src": "1287:260:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1433,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1428,
																"src": "1516:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1516:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1516:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1538:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1516:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1432,
												"id": 1438,
												"nodeType": "Return",
												"src": "1509:30:4"
											}
										]
									},
									"documentation": {
										"id": 1426,
										"nodeType": "StructuredDocumentation",
										"src": "236:979:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1230:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1249:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "1241:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:17:4"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "1281:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1281:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1280:6:4"
									},
									"scope": 1665,
									"src": "1221:326:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "2553:246:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1451,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2580:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1665",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1665",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2572:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1449,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2572:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2572:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2572:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1454,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1445,
																"src": "2597:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2572:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2605:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1448,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2564:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2564:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "2564:73:4"
											},
											{
												"assignments": [
													1460,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1460,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2656:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1473,
														"src": "2651:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1459,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2651:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1467,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2699:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1461,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1443,
																"src": "2669:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2669:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1463,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1445,
																"src": "2691:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2669:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2669:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2650:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1469,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "2721:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2730:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1468,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2713:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2713:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "2713:78:4"
											}
										]
									},
									"documentation": {
										"id": 1441,
										"nodeType": "StructuredDocumentation",
										"src": "1555:921:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2491:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2517:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "2501:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2501:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2536:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "2528:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2500:43:4"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2553:0:4"
									},
									"scope": 1665,
									"src": "2482:317:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1490,
										"nodeType": "Block",
										"src": "3650:86:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1485,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "3681:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1486,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "3689:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3695:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1484,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1491,
															1511
														],
														"referencedDeclaration": 1511,
														"src": "3668:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3668:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1483,
												"id": 1489,
												"nodeType": "Return",
												"src": "3661:67:4"
											}
										]
									},
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "2807:748:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3570:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3591:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "3583:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3612:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "3599:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3599:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3582:35:4"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "3636:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3636:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3635:14:4"
									},
									"scope": 1665,
									"src": "3561:175:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "4117:78:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1504,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "4157:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1505,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "4165:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4171:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1507,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "4174:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1503,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1531,
															1581
														],
														"referencedDeclaration": 1581,
														"src": "4135:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4135:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1502,
												"id": 1509,
												"nodeType": "Return",
												"src": "4128:59:4"
											}
										]
									},
									"documentation": {
										"id": 1492,
										"nodeType": "StructuredDocumentation",
										"src": "3744:216:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3975:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4006:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "3998:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3998:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4036:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "4023:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1495,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4023:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4065:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "4051:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1497,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4051:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3987:97:4"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "4103:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4103:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4102:14:4"
									},
									"scope": 1665,
									"src": "3966:229:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1530,
										"nodeType": "Block",
										"src": "4717:113:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1524,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "4757:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1525,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "4765:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1526,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "4771:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4778:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1523,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1531,
															1581
														],
														"referencedDeclaration": 1581,
														"src": "4735:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4735:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1522,
												"id": 1529,
												"nodeType": "Return",
												"src": "4728:94:4"
											}
										]
									},
									"documentation": {
										"id": 1512,
										"nodeType": "StructuredDocumentation",
										"src": "4203:361:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4579:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4619:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "4611:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4611:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4649:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "4636:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4636:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4672:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "4664:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4664:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4600:84:4"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "4703:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4703:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4702:14:4"
									},
									"scope": 1665,
									"src": "4570:260:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "5270:326:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1548,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5297:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1665",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1665",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5289:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1546,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5289:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5289:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5289:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1551,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "5314:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5289:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5321:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1545,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5281:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5281:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1555,
												"nodeType": "ExpressionStatement",
												"src": "5281:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1558,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1534,
																	"src": "5392:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1557,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1440,
																"src": "5381:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5381:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5401:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1556,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5373:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5373:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1562,
												"nodeType": "ExpressionStatement",
												"src": "5373:60:4"
											},
											{
												"assignments": [
													1564,
													1566
												],
												"declarations": [
													{
														"constant": false,
														"id": 1564,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5452:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1580,
														"src": "5447:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1563,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5447:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1566,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5474:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1580,
														"src": "5461:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1565,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5461:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1573,
												"initialValue": {
													"arguments": [
														{
															"id": 1571,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "5514:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1567,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1534,
																"src": "5488:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5488:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1569,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "5507:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5488:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5488:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5446:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1575,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "5554:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1576,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "5563:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1577,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "5575:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1574,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "5537:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1544,
												"id": 1579,
												"nodeType": "Return",
												"src": "5530:58:4"
											}
										]
									},
									"documentation": {
										"id": 1532,
										"nodeType": "StructuredDocumentation",
										"src": "4838:242:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5095:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5135:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "5127:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5127:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5165:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "5152:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1535,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5152:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5188:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "5180:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5180:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5218:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "5204:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1539,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5204:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5116:121:4"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "5256:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1542,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5256:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5255:14:4"
									},
									"scope": 1665,
									"src": "5086:510:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "5881:99:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1592,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "5918:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1593,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "5926:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5932:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1591,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1598,
															1633
														],
														"referencedDeclaration": 1633,
														"src": "5899:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1590,
												"id": 1596,
												"nodeType": "Return",
												"src": "5892:80:4"
											}
										]
									},
									"documentation": {
										"id": 1582,
										"nodeType": "StructuredDocumentation",
										"src": "5604:171:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5790:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5817:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "5809:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5809:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5838:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "5825:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1585,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5825:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5808:35:4"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "5867:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1588,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5867:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5866:14:4"
									},
									"scope": 1665,
									"src": "5781:199:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "6334:233:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1612,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "6364:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1611,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1440,
																"src": "6353:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6353:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6373:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6345:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6345:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "6345:67:4"
											},
											{
												"assignments": [
													1618,
													1620
												],
												"declarations": [
													{
														"constant": false,
														"id": 1618,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6431:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1632,
														"src": "6426:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1617,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6426:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1620,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6453:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1632,
														"src": "6440:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1619,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6440:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1625,
												"initialValue": {
													"arguments": [
														{
															"id": 1623,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "6485:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1621,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "6467:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6467:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6467:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6425:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1627,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "6525:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1628,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "6534:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1629,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "6546:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1626,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "6508:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6508:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1609,
												"id": 1631,
												"nodeType": "Return",
												"src": "6501:58:4"
											}
										]
									},
									"documentation": {
										"id": 1599,
										"nodeType": "StructuredDocumentation",
										"src": "5988:178:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6181:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6218:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "6210:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6210:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6248:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "6235:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1602,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6235:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6277:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "6263:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1604,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6263:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6199:97:4"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "6320:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1607,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6320:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6319:14:4"
									},
									"scope": 1665,
									"src": "6172:395:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1663,
										"nodeType": "Block",
										"src": "6959:548:4",
										"statements": [
											{
												"condition": {
													"id": 1645,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1636,
													"src": "6974:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1661,
													"nodeType": "Block",
													"src": "7033:467:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1649,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1638,
																		"src": "7119:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7119:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7139:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7119:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1659,
																"nodeType": "Block",
																"src": "7434:55:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1656,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1640,
																					"src": "7460:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1655,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7453:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7453:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1658,
																		"nodeType": "ExpressionStatement",
																		"src": "7453:20:4"
																	}
																]
															},
															"id": 1660,
															"nodeType": "IfStatement",
															"src": "7115:374:4",
															"trueBody": {
																"id": 1654,
																"nodeType": "Block",
																"src": "7142:286:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7265:148:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7288:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7317:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7311:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7311:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7292:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7361:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7365:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7357:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7357:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7378:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7350:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7350:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7350:44:4"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1638,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7317:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1638,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7365:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 1653,
																		"nodeType": "InlineAssembly",
																		"src": "7256:157:4"
																	}
																]
															}
														}
													]
												},
												"id": 1662,
												"nodeType": "IfStatement",
												"src": "6970:530:4",
												"trueBody": {
													"id": 1648,
													"nodeType": "Block",
													"src": "6983:44:4",
													"statements": [
														{
															"expression": {
																"id": 1646,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1638,
																"src": "7005:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1644,
															"id": 1647,
															"nodeType": "Return",
															"src": "6998:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1634,
										"nodeType": "StructuredDocumentation",
										"src": "6575:214:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "6804:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6836:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "6831:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1635,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6831:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6867:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "6854:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6854:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6902:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "6888:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1639,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6888:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6820:101:4"
									},
									"returnParameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "6945:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1642,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6945:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6944:14:4"
									},
									"scope": 1665,
									"src": "6795:712:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1666,
							"src": "202:7308:4",
							"usedErrors": []
						}
					],
					"src": "104:7408:4"
				},
				"id": 4
			},
			"Utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "Utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1665
						],
						"ContextUpgradeable": [
							1707
						],
						"Initializable": [
							1905
						]
					},
					"id": 1708,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1667,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:5"
						},
						{
							"absolutePath": "Utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 1668,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1708,
							"sourceUnit": 1906,
							"src": "114:29:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1670,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1905,
										"src": "694:13:5"
									},
									"id": 1671,
									"nodeType": "InheritanceSpecifier",
									"src": "694:13:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1669,
								"nodeType": "StructuredDocumentation",
								"src": "147:505:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1707,
							"linearizedBaseContracts": [
								1707,
								1905
							],
							"name": "ContextUpgradeable",
							"nameLocation": "672:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1676,
										"nodeType": "Block",
										"src": "767:8:5",
										"statements": []
									},
									"id": 1677,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1674,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1673,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1848,
												"src": "750:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "750:16:5"
										}
									],
									"name": "__Context_init",
									"nameLocation": "724:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "738:2:5"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "767:0:5"
									},
									"scope": 1707,
									"src": "715:60:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "845:8:5",
										"statements": []
									},
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1680,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1679,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1848,
												"src": "828:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "828:16:5"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "792:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "816:2:5"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "845:0:5"
									},
									"scope": 1707,
									"src": "783:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "921:36:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1688,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "939:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "939:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1687,
												"id": 1690,
												"nodeType": "Return",
												"src": "932:17:5"
											}
										]
									},
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "868:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "878:2:5"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "912:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "911:9:5"
									},
									"scope": 1707,
									"src": "859:98:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1700,
										"nodeType": "Block",
										"src": "1032:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1697,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1050:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1050:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1696,
												"id": 1699,
												"nodeType": "Return",
												"src": "1043:15:5"
											}
										]
									},
									"id": 1701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "974:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "982:2:5"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "1016:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1694,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1016:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:16:5"
									},
									"scope": 1707,
									"src": "965:101:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1702,
										"nodeType": "StructuredDocumentation",
										"src": "1074:258:5",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1706,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1358:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "1338:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1703,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1338:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1705,
										"length": {
											"hexValue": "3530",
											"id": 1704,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1346:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1338:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1708,
							"src": "654:713:5",
							"usedErrors": []
						}
					],
					"src": "89:1280:5"
				},
				"id": 5
			},
			"Utils/ERC165/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "Utils/ERC165/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1665
						],
						"ERC165Upgradeable": [
							1751
						],
						"IERC165Upgradeable": [
							1763
						],
						"Initializable": [
							1905
						]
					},
					"id": 1752,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1709,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:6"
						},
						{
							"absolutePath": "Utils/ERC165/IERC165Upgradeable.sol",
							"file": "./IERC165Upgradeable.sol",
							"id": 1710,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1752,
							"sourceUnit": 1764,
							"src": "129:34:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/Initializable.sol",
							"file": "../../Utils/Initializable.sol",
							"id": 1711,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1752,
							"sourceUnit": 1906,
							"src": "165:39:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1713,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1905,
										"src": "838:13:6"
									},
									"id": 1714,
									"nodeType": "InheritanceSpecifier",
									"src": "838:13:6"
								},
								{
									"baseName": {
										"id": 1715,
										"name": "IERC165Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1763,
										"src": "853:18:6"
									},
									"id": 1716,
									"nodeType": "InheritanceSpecifier",
									"src": "853:18:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1712,
								"nodeType": "StructuredDocumentation",
								"src": "208:589:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1751,
							"linearizedBaseContracts": [
								1751,
								1763,
								1905
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "817:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1721,
										"nodeType": "Block",
										"src": "930:8:6",
										"statements": []
									},
									"id": 1722,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1719,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1718,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1848,
												"src": "913:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "913:16:6"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "888:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "901:2:6"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "930:0:6"
									},
									"scope": 1751,
									"src": "879:59:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1727,
										"nodeType": "Block",
										"src": "1007:8:6",
										"statements": []
									},
									"id": 1728,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1725,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1724,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1848,
												"src": "990:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "990:16:6"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "955:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "978:2:6"
									},
									"returnParameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1007:0:6"
									},
									"scope": 1751,
									"src": "946:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1762
									],
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "1176:77:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1737,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "1194:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1739,
																	"name": "IERC165Upgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1763,
																	"src": "1214:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$1763_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$1763_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																],
																"id": 1738,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1209:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1209:24:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165Upgradeable_$1763",
																"typeString": "type(contract IERC165Upgradeable)"
															}
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1209:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1194:51:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1736,
												"id": 1743,
												"nodeType": "Return",
												"src": "1187:58:6"
											}
										]
									},
									"documentation": {
										"id": 1729,
										"nodeType": "StructuredDocumentation",
										"src": "1021:58:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1094:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1733,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1152:8:6"
									},
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1119:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "1112:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1730,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1112:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:20:6"
									},
									"returnParameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "1170:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1734,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:6:6"
									},
									"scope": 1751,
									"src": "1085:168:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "1261:258:6",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1750,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1545:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1751,
									"src": "1525:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1747,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1525:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1749,
										"length": {
											"hexValue": "3530",
											"id": 1748,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1533:2:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1525:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1752,
							"src": "799:755:6",
							"usedErrors": []
						}
					],
					"src": "102:1454:6"
				},
				"id": 6
			},
			"Utils/ERC165/IERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "Utils/ERC165/IERC165Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1763
						]
					},
					"id": 1764,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1753,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1754,
								"nodeType": "StructuredDocumentation",
								"src": "130:287:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1763,
							"linearizedBaseContracts": [
								1763
							],
							"name": "IERC165Upgradeable",
							"nameLocation": "429:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1755,
										"nodeType": "StructuredDocumentation",
										"src": "455:347:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "817:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "842:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "835:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1756,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "835:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:20:7"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "878:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1759,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "878:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:6:7"
									},
									"scope": 1763,
									"src": "808:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1764,
							"src": "419:468:7",
							"usedErrors": []
						}
					],
					"src": "103:786:7"
				},
				"id": 7
			},
			"Utils/Initializable.sol": {
				"ast": {
					"absolutePath": "Utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1665
						],
						"Initializable": [
							1905
						]
					},
					"id": 1906,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1765,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:8"
						},
						{
							"absolutePath": "Utils/AddressUpgradeable.sol",
							"file": "./AddressUpgradeable.sol",
							"id": 1766,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1906,
							"sourceUnit": 1666,
							"src": "143:34:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1767,
								"nodeType": "StructuredDocumentation",
								"src": "181:2246:8",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 1905,
							"linearizedBaseContracts": [
								1905
							],
							"name": "Initializable",
							"nameLocation": "2447:13:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 1768,
										"nodeType": "StructuredDocumentation",
										"src": "2468:112:8",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 1770,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2600:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1905,
									"src": "2586:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1769,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2586:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "2621:93:8",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 1773,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2733:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1905,
									"src": "2720:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1772,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2720:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1774,
										"nodeType": "StructuredDocumentation",
										"src": "2755:92:8",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"id": 1778,
									"name": "Initialized",
									"nameLocation": "2859:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2877:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "2871:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1775,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2871:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:15:8"
									},
									"src": "2853:33:8"
								},
								{
									"body": {
										"id": 1806,
										"nodeType": "Block",
										"src": "3168:267:8",
										"statements": [
											{
												"assignments": [
													1782
												],
												"declarations": [
													{
														"constant": false,
														"id": 1782,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3184:14:8",
														"nodeType": "VariableDeclaration",
														"scope": 1806,
														"src": "3179:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1781,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3179:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1786,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3224:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1783,
														"name": "_setInitializedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "3201:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$_t_bool_$",
															"typeString": "function (uint8) returns (bool)"
														}
													},
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3201:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3179:47:8"
											},
											{
												"condition": {
													"id": 1787,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1782,
													"src": "3241:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1793,
												"nodeType": "IfStatement",
												"src": "3237:67:8",
												"trueBody": {
													"id": 1792,
													"nodeType": "Block",
													"src": "3257:47:8",
													"statements": [
														{
															"expression": {
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1788,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1773,
																	"src": "3272:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3288:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3272:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1791,
															"nodeType": "ExpressionStatement",
															"src": "3272:20:8"
														}
													]
												}
											},
											{
												"id": 1794,
												"nodeType": "PlaceholderStatement",
												"src": "3314:1:8"
											},
											{
												"condition": {
													"id": 1795,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1782,
													"src": "3330:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1805,
												"nodeType": "IfStatement",
												"src": "3326:102:8",
												"trueBody": {
													"id": 1804,
													"nodeType": "Block",
													"src": "3346:82:8",
													"statements": [
														{
															"expression": {
																"id": 1798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1796,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1773,
																	"src": "3361:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3377:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3361:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1799,
															"nodeType": "ExpressionStatement",
															"src": "3361:21:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 1801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3414:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 1800,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1778,
																	"src": "3402:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 1802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3402:14:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1803,
															"nodeType": "EmitStatement",
															"src": "3397:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1779,
										"nodeType": "StructuredDocumentation",
										"src": "2894:245:8",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."
									},
									"id": 1807,
									"name": "initializer",
									"nameLocation": "3154:11:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3165:2:8"
									},
									"src": "3145:290:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1837,
										"nodeType": "Block",
										"src": "4264:279:8",
										"statements": [
											{
												"assignments": [
													1813
												],
												"declarations": [
													{
														"constant": false,
														"id": 1813,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4280:14:8",
														"nodeType": "VariableDeclaration",
														"scope": 1837,
														"src": "4275:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1812,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4275:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1817,
												"initialValue": {
													"arguments": [
														{
															"id": 1815,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "4320:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1814,
														"name": "_setInitializedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "4297:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$_t_bool_$",
															"typeString": "function (uint8) returns (bool)"
														}
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4275:53:8"
											},
											{
												"condition": {
													"id": 1818,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1813,
													"src": "4343:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1824,
												"nodeType": "IfStatement",
												"src": "4339:67:8",
												"trueBody": {
													"id": 1823,
													"nodeType": "Block",
													"src": "4359:47:8",
													"statements": [
														{
															"expression": {
																"id": 1821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1819,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1773,
																	"src": "4374:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4390:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "4374:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1822,
															"nodeType": "ExpressionStatement",
															"src": "4374:20:8"
														}
													]
												}
											},
											{
												"id": 1825,
												"nodeType": "PlaceholderStatement",
												"src": "4416:1:8"
											},
											{
												"condition": {
													"id": 1826,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1813,
													"src": "4432:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1836,
												"nodeType": "IfStatement",
												"src": "4428:108:8",
												"trueBody": {
													"id": 1835,
													"nodeType": "Block",
													"src": "4448:88:8",
													"statements": [
														{
															"expression": {
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1827,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1773,
																	"src": "4463:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4479:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "4463:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1830,
															"nodeType": "ExpressionStatement",
															"src": "4463:21:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1832,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1810,
																		"src": "4516:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1831,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1778,
																	"src": "4504:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 1833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4504:20:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1834,
															"nodeType": "EmitStatement",
															"src": "4499:25:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1808,
										"nodeType": "StructuredDocumentation",
										"src": "3443:777:8",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."
									},
									"id": 1838,
									"name": "reinitializer",
									"nameLocation": "4235:13:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4255:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "4249:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1809,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4249:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4248:15:8"
									},
									"src": "4226:317:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1847,
										"nodeType": "Block",
										"src": "4787:100:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1842,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "4806:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4821:45:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 1841,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4798:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4798:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1845,
												"nodeType": "ExpressionStatement",
												"src": "4798:69:8"
											},
											{
												"id": 1846,
												"nodeType": "PlaceholderStatement",
												"src": "4878:1:8"
											}
										]
									},
									"documentation": {
										"id": 1839,
										"nodeType": "StructuredDocumentation",
										"src": "4551:202:8",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 1848,
									"name": "onlyInitializing",
									"nameLocation": "4768:16:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4784:2:8"
									},
									"src": "4759:128:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1860,
										"nodeType": "Block",
										"src": "5343:58:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5382:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 1854,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "5382:5:8",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		}
																	],
																	"id": 1853,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "5377:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5377:11:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint8",
																	"typeString": "type(uint8)"
																}
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "5377:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1852,
														"name": "_setInitializedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "5354:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$_t_bool_$",
															"typeString": "function (uint8) returns (bool)"
														}
													},
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1859,
												"nodeType": "ExpressionStatement",
												"src": "5354:39:8"
											}
										]
									},
									"documentation": {
										"id": 1849,
										"nodeType": "StructuredDocumentation",
										"src": "4895:393:8",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."
									},
									"id": 1861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5303:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5323:2:8"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5343:0:8"
									},
									"scope": 1905,
									"src": "5294:107:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1903,
										"nodeType": "Block",
										"src": "5479:753:8",
										"statements": [
											{
												"condition": {
													"id": 1868,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1773,
													"src": "5810:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1901,
													"nodeType": "Block",
													"src": "6054:171:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 1891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1889,
																			"name": "_initialized",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1770,
																			"src": "6077:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1890,
																			"name": "version",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1863,
																			"src": "6092:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "6077:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
																		"id": 1892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6101:48:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																			"typeString": "literal_string \"Initializable: contract is already initialized\""
																		},
																		"value": "Initializable: contract is already initialized"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																			"typeString": "literal_string \"Initializable: contract is already initialized\""
																		}
																	],
																	"id": 1888,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6069:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6069:81:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1894,
															"nodeType": "ExpressionStatement",
															"src": "6069:81:8"
														},
														{
															"expression": {
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1895,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1770,
																	"src": "6165:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1896,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1863,
																	"src": "6180:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6165:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1898,
															"nodeType": "ExpressionStatement",
															"src": "6165:22:8"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6209:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1867,
															"id": 1900,
															"nodeType": "Return",
															"src": "6202:11:8"
														}
													]
												},
												"id": 1902,
												"nodeType": "IfStatement",
												"src": "5806:419:8",
												"trueBody": {
													"id": 1887,
													"nodeType": "Block",
													"src": "5825:223:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1870,
																				"name": "version",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1863,
																				"src": "5866:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1871,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5877:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "5866:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"id": 1880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "5882:45:8",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 1877,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "5921:4:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$1905",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$1905",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 1876,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "5913:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 1875,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "5913:7:8",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1878,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5913:13:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 1873,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1665,
																						"src": "5883:18:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1665_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 1874,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1440,
																					"src": "5883:29:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 1879,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5883:44:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "5866:61:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
																		"id": 1882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5946:48:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																			"typeString": "literal_string \"Initializable: contract is already initialized\""
																		},
																		"value": "Initializable: contract is already initialized"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																			"typeString": "literal_string \"Initializable: contract is already initialized\""
																		}
																	],
																	"id": 1869,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5840:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5840:169:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1884,
															"nodeType": "ExpressionStatement",
															"src": "5840:169:8"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6031:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1867,
															"id": 1886,
															"nodeType": "Return",
															"src": "6024:12:8"
														}
													]
												}
											}
										]
									},
									"id": 1904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setInitializedVersion",
									"nameLocation": "5418:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "5447:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "5441:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1862,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5441:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5440:15:8"
									},
									"returnParameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "5473:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1865,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5473:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5472:6:8"
									},
									"scope": 1905,
									"src": "5409:823:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1906,
							"src": "2429:3806:8",
							"usedErrors": []
						}
					],
					"src": "116:6119:8"
				},
				"id": 8
			}
		}
	}
}