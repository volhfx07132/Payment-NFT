{
	"id": "91df2a556c51578a311bb2958bdb20e3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.8",
	"solcLongVersion": "0.8.8+commit.dddeac2f",
	"input": {
		"language": "Solidity",
		"sources": {
			"Utils/CountersUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title Counters\r\n * @author Matt Condon (@shrugs)\r\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\r\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\r\n *\r\n * Include with `using Counters for Counters.Counter;`\r\n */\r\nlibrary CountersUpgradeable {\r\n    struct Counter {\r\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\r\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\r\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\r\n        uint256 _value; // default: 0\r\n    }\r\n\r\n    function current(Counter storage counter) internal view returns (uint256) {\r\n        return counter._value;\r\n    }\r\n\r\n    function increment(Counter storage counter) internal {\r\n        unchecked {\r\n            counter._value += 1;\r\n        }\r\n    }\r\n\r\n    function decrement(Counter storage counter) internal {\r\n        uint256 value = counter._value;\r\n        require(value > 0, \"Counter: decrement overflow\");\r\n        unchecked {\r\n            counter._value = value - 1;\r\n        }\r\n    }\r\n\r\n    function reset(Counter storage counter) internal {\r\n        counter._value = 0;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Utils/CountersUpgradeable.sol": {
				"CountersUpgradeable": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Utils/CountersUpgradeable.sol\":437:1448  library CountersUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Utils/CountersUpgradeable.sol\":437:1448  library CountersUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204e6e6ddd027312a64c0b16cfd89f0b9efc8c9415ded12e316889bb157984e7ba64736f6c63430008080033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e6e6ddd027312a64c0b16cfd89f0b9efc8c9415ded12e316889bb157984e7ba64736f6c63430008080033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E PUSH15 0x6DDD027312A64C0B16CFD89F0B9EFC DUP13 SWAP5 ISZERO 0xDE 0xD1 0x2E BALANCE PUSH9 0x89BB157984E7BA6473 PUSH16 0x6C634300080800330000000000000000 ",
							"sourceMap": "437:1011:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e6e6ddd027312a64c0b16cfd89f0b9efc8c9415ded12e316889bb157984e7ba64736f6c63430008080033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E PUSH15 0x6DDD027312A64C0B16CFD89F0B9EFC DUP13 SWAP5 ISZERO 0xDE 0xD1 0x2E BALANCE PUSH9 0x89BB157984E7BA6473 PUSH16 0x6C634300080800330000000000000000 ",
							"sourceMap": "437:1011:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"current(struct CountersUpgradeable.Counter storage pointer)": "infinite",
								"decrement(struct CountersUpgradeable.Counter storage pointer)": "infinite",
								"increment(struct CountersUpgradeable.Counter storage pointer)": "infinite",
								"reset(struct CountersUpgradeable.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 437,
									"end": 1448,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204e6e6ddd027312a64c0b16cfd89f0b9efc8c9415ded12e316889bb157984e7ba64736f6c63430008080033",
									".code": [
										{
											"begin": 437,
											"end": 1448,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 437,
											"end": 1448,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 437,
											"end": 1448,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 437,
											"end": 1448,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 437,
											"end": 1448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 1448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 437,
											"end": 1448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 1448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 1448,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/CountersUpgradeable.sol\":\"CountersUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x361d9aa91f000b5e1d5c79e38d1c2f57f58e85152992336f0ff5fe37384d7706\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a60bb30feaabb7e02769eac5796887fcf3973bb76a496e1e48ba0a97f12c8e36\",\"dweb:/ipfs/Qmaq3v1kDciR6wfkhVJtStVu1Mn3eLNZiskgwxrEfwNMWm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Utils/CountersUpgradeable.sol": {
				"ast": {
					"absolutePath": "Utils/CountersUpgradeable.sol",
					"exportedSymbols": {
						"CountersUpgradeable": [
							73
						]
					},
					"id": 74,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "117:318:0",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "CountersUpgradeable",
							"nameLocation": "445:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "CountersUpgradeable.Counter",
									"id": 5,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "823:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 5,
											"src": "815:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "815:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "479:7:0",
									"nodeType": "StructDefinition",
									"scope": 73,
									"src": "472:379:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "933:40:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 13,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
															"typeString": "struct CountersUpgradeable.Counter storage pointer"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "951:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 12,
												"id": 15,
												"nodeType": "Return",
												"src": "944:21:0"
											}
										]
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "868:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "892:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "876:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct CountersUpgradeable.Counter"
												},
												"typeName": {
													"id": 7,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 6,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "876:7:0"
													},
													"referencedDeclaration": 5,
													"src": "876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct CountersUpgradeable.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:25:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "924:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:9:0"
									},
									"scope": 73,
									"src": "859:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1034:74:0",
										"statements": [
											{
												"id": 29,
												"nodeType": "UncheckedBlock",
												"src": "1045:56:0",
												"statements": [
													{
														"expression": {
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 23,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1070:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																		"typeString": "struct CountersUpgradeable.Counter storage pointer"
																	}
																},
																"id": 25,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1070:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1088:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1070:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 28,
														"nodeType": "ExpressionStatement",
														"src": "1070:19:0"
													}
												]
											}
										]
									},
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "990:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1016:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1000:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct CountersUpgradeable.Counter"
												},
												"typeName": {
													"id": 19,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 18,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1000:7:0"
													},
													"referencedDeclaration": 5,
													"src": "1000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct CountersUpgradeable.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:25:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1034:0:0"
									},
									"scope": 73,
									"src": "981:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "1169:182:0",
										"statements": [
											{
												"assignments": [
													38
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1188:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 58,
														"src": "1180:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 37,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1180:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 41,
												"initialValue": {
													"expression": {
														"id": 39,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1196:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
															"typeString": "struct CountersUpgradeable.Counter storage pointer"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "1196:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1180:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 43,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "1229:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1237:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1229:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1240:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 42,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1221:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1221:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1221:49:0"
											},
											{
												"id": 57,
												"nodeType": "UncheckedBlock",
												"src": "1281:63:0",
												"statements": [
													{
														"expression": {
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 49,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "1306:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																		"typeString": "struct CountersUpgradeable.Counter storage pointer"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1306:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 52,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "1323:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1331:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1323:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1306:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 56,
														"nodeType": "ExpressionStatement",
														"src": "1306:26:0"
													}
												]
											}
										]
									},
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1125:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1151:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1135:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct CountersUpgradeable.Counter"
												},
												"typeName": {
													"id": 33,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 32,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1135:7:0"
													},
													"referencedDeclaration": 5,
													"src": "1135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct CountersUpgradeable.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1134:25:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1169:0:0"
									},
									"scope": 73,
									"src": "1116:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1408:37:0",
										"statements": [
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 65,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1419:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																"typeString": "struct CountersUpgradeable.Counter storage pointer"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "1419:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1436:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1419:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1419:18:0"
											}
										]
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1368:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1390:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1374:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct CountersUpgradeable.Counter"
												},
												"typeName": {
													"id": 61,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 60,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1374:7:0"
													},
													"referencedDeclaration": 5,
													"src": "1374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct CountersUpgradeable.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1373:25:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1408:0:0"
									},
									"scope": 73,
									"src": "1359:86:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 74,
							"src": "437:1011:0",
							"usedErrors": []
						}
					],
					"src": "90:1358:0"
				},
				"id": 0
			}
		}
	}
}